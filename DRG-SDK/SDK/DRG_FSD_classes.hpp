#pragma once

// Deep Rock Galactic (0.22) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "DRG_FSD_structs.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Classes
//---------------------------------------------------------------------------

// Class FSD.Objective
// 0x0078 (0x0168 - 0x00F0)
class UObjective : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnObjectiveUpdated;                                       // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0100(0x0008) MISSED OFFSET
	class UClass*                                      WidgetClass;                                              // 0x0108(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FMissionShouts                              MissionShouts;                                            // 0x0110(0x0020) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FText                                       MissionDescription;                                       // 0x0130(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	int                                                CompletionRewardInCredits;                                // 0x0148(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                CompletionRewardInXP;                                     // 0x014C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ScaleObjectiveToMission;                                  // 0x0150(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0151(0x0007) MISSED OFFSET
	class UMissionStat*                                ObjectiveCompletedStat;                                   // 0x0158(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                IsPrimaryObjective;                                       // 0x0160(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              MissionScale;                                             // 0x0164(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Objective");
		return ptr;
	}


	void OnRep_IsPrimaryObjective();
	bool IsTutorialObjective();
	bool IsPrimary();
	bool IsCompleted();
	bool HasReplicated();
	int GetRewardXP();
	struct FCreditsReward GetRewardCredits();
	struct FText GetObjectiveText();
	static class UTexture2D* GetObjectiveIconFromClass(class UClass* objectiveClass);
	class UTexture2D* GetObjectiveIcon();
	static struct FText GetObjectiveDescriptionFromClass(class UClass* objectiveClass, float missionLength);
	struct FText GetObjectiveDescription(float missionLength);
	static int GetObjectiveAmountFromClass(class UClass* objectiveClass, float missionLength);
	int GetObjectiveAmount(float missionLength);
	struct FText GetInMissionText();
};


// Class FSD.ActivationOjective
// 0x0008 (0x0170 - 0x0168)
class UActivationOjective : public UObjective
{
public:
	int                                                ObjectivesFound;                                          // 0x0168(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                ObjectivesToFind;                                         // 0x016C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ActivationOjective");
		return ptr;
	}


	void OnRep_ObjectivesToFind(int prevAmount);
	void OnRep_ObjectivesFound(int prevAmount);
	void OnPlayerJoined(class APlayerCharacter* PlayerCharacter);
};


// Class FSD.ActivationObject
// 0x0010 (0x0338 - 0x0328)
class AActivationObject : public AActor
{
public:
	class USingleUsableComponent*                      Usable;                                                   // 0x0328(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               HasBeenUsed;                                              // 0x0330(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0331(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ActivationObject");
		return ptr;
	}


	void OnUsedBy(class APlayerCharacter* user);
};


// Class FSD.ActorFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UActorFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ActorFunctionLibrary");
		return ptr;
	}


	static void UnlockSpecificCharacters(class UObject* WorldContextObject, TArray<class APlayerCharacter*> Characters, ECharacterState UnlockIf, ECharacterState UnlockTo);
	static void UnlockCharacters(class UObject* WorldContextObject);
	static float TimeSince(class UObject* WorldContextObject, float Time);
	static void PlayCueOnClient(class APlayerController* Target, class USoundCue* cue);
	static void PlayCueOnAll(class UObject* WorldContextObject, class USoundCue* cue);
	static float PingPong(float Time, float Length, bool normalize);
	static float MoveTowards(float current, float End, float step);
	static void LockSpecificCharactersIfState(class UObject* WorldContextObject, TArray<class APlayerCharacter*> Characters, ECharacterState stateToLock);
	static void LockSpecificCharacters(class UObject* WorldContextObject, TArray<class APlayerCharacter*> Characters);
	static bool LockSpecificCharacterIfState(class UObject* WorldContextObject, class APlayerCharacter* Character, ECharacterState LockIf, ECharacterState LockTo);
	static void LockCharacters(class UObject* WorldContextObject);
	static class UClass* LoadWindowWidgetClass(TSoftObjectPtr<class UClass> WidgetClass);
	static class UClass* LoadWidgetClass(TSoftObjectPtr<class UClass> WidgetClass);
	static class UClass* LoadClass(TSoftObjectPtr<class UClass> softReference);
	static void KillActorWithEffects(class AActor* Actor, class USceneComponent* visualsToHide, class USoundCue* deathSound, class UParticleSystem* deathParticles, class UPathfinderCollisionComponent* pathColliderToDisable);
	static bool IsWeakPoint(class UFSDPhysicalMaterial* Material);
	static bool IsInRangeOfLocalPlayer(class AActor* toActor, float MinDistance, float MaxDistance);
	static bool IsCloseToLocalPlayer(class AActor* toActor, float distance);
	static float GetHeroXP(class UObject* WorldContextObject, class UClass* HeroClass);
	static struct FString GetHeroSourceName(class UClass* playerClass);
	static float GetHeroProgress(class UObject* WorldContextObject, class UClass* CharacterClass);
	static struct FText GetHeroName(class UClass* playerClass);
	static int GetHeroLevel(class UObject* WorldContextObject, class UClass* CharacterClass);
	static class UInventoryList* GetHeroInventoryList(class UPlayerCharacterID* characterID);
	static struct FHeroInfo GetHeroInfo(class UClass* playerClass);
	static class UTexture2D* GetHeroImageSmall(class UClass* playerClass);
	static class UTexture2D* GetHeroImageFullSize(class UClass* playerClass);
	static class UTexture2D* GetHeroImage(class UClass* playerClass);
	static struct FLinearColor GetHeroColor(class UClass* playerClass);
	static class UActorComponent* GetComponentFromClass(class UClass* Actor, class UClass* ComponentClass);
	static class UActorComponent* GetComponentByClass(class AActor* Actor, class UClass* ComponentClass);
	static class UPlayerCharacterID* GetCharacterID(class UClass* playerClass);
	static TArray<class APlayerCharacter*> GetAllPlayerCharacters(class UObject* WorldContext);
	static struct FVector GetActorTargetCenter(class AActor* targetActor);
	static void FSDRemoveBlendable(class UPostProcessComponent* PostProcessComponent, const TScriptInterface<class UBlendableInterface>& InBlendableObject);
	static void FSDRemoveAllWidgets(class UObject* WorldContextObject);
	static void FSDDumpCallStack(const struct FString& Msg);
	static class APlayerCharacter* FindNearestPlayerCharacter(class UObject* WorldContextObject, const struct FVector& fromLocation, float MaxRadius, bool MustBeAlive, bool MustBeUnparalyzed, bool MustHaveLineOfSight);
	static class AActor* FindClosestEnemyFromLocation(const struct FVector& fromLocation, float Range, bool LineOfSightCheck, class UObject* WorldContextObject, const struct FVector& Offset);
	static class AActor* FindClosestEnemyFromActor(class AActor* FromActor, float Range, bool LineOfSightCheck, const struct FVector& Offset);
	static float EvaluateRuntimeCurve(class UObject* WorldContextObject, const struct FRuntimeFloatCurve& Curve, float Time);
	static void DamagePlayersInArea(const struct FVector& Origin, class AActor* instigator, float Damage, float Radius, class UDamageClass* DamageClass);
	static class UHealthComponentBase* DamageIfInRange(float MaxDistance, float Damage, class AActor* Target, class AActor* Attacker, class UDamageClass* DamageClass);
	static void DamageAllInAreaExcept(const struct FVector& Origin, class AActor* instigator, float Damage, float blastRadius, float maxDamageRadius, float minDamagePercent, TArray<class AActor*> ignoreActors, float friendlyFireModifier, class UDamageClass* DamageClass);
	static void DamageAllInArea(const struct FVector& Origin, class AActor* instigator, float Damage, float blastRadius, float maxDamageRadius, float minDamagePercent, float friendlyFireModifier, class UDamageClass* DamageClass);
	static float AddHeroXP(class UObject* WorldContextObject, class UClass* HeroClass, float Amount);
};


// Class FSD.StatusEffectsFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UStatusEffectsFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StatusEffectsFunctionLibrary");
		return ptr;
	}


	static float GetMaxResistance(class UClass* StatusEffect);
	static class UDamageClass* GetDamageClass(class UClass* StatusEffect);
	static bool CanTrigger(class UClass* StatusEffect, class AActor* OtherActor);
};


// Class FSD.FrontendBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UFrontendBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FrontendBlueprintLibrary");
		return ptr;
	}


	static void OpenURLInExternalBrowser(const struct FString& URL);
	static EFSDTargetPlatform FSDTargetPlatform();
};


// Class FSD.GameModeFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UGameModeFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GameModeFunctionLibrary");
		return ptr;
	}


	static struct FTransform FindRandomEscapePodLocation(class UObject* WorldContextObject);
	static struct FTransform FindEscapePodLocationAtDistance(class UObject* WorldContextObject, float distance, float aboveDistanceBias);
};


// Class FSD.FSDConversionLibrary
// 0x0000 (0x0028 - 0x0028)
class UFSDConversionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDConversionLibrary");
		return ptr;
	}


	static struct FVector_NetQuantizeNormal VectorToNetQuantizeNormal(const struct FVector& Vec);
	static struct FVector_NetQuantize VectorToNetQuantize(const struct FVector& Vec);
	static struct FVector QuatToVector(const struct FQuat& Quat);
	static struct FRotator QuatToRotator(const struct FQuat& Quat);
	static struct FVector_NetQuantizeNormal QuadToNetQuantizeNormal(const struct FQuat& Quat);
	static struct FVector ComponentToWorldLocation(class USceneComponent* Component);
	static struct FVector ActorToWorldLocation(class AActor* Actor);
};


// Class FSD.ActorStateComponent
// 0x0050 (0x0140 - 0x00F0)
class UActorStateComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnBeginState;                                             // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTickState;                                              // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndState;                                               // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UActorStateComponent*                        CurrentState;                                             // 0x0120(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UActorStateComponent*                        NextState;                                                // 0x0128(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UActorStateComponent*                        MasterState;                                              // 0x0130(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              StateActiveTime;                                          // 0x0138(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x013C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ActorStateComponent");
		return ptr;
	}


	void OnRep_CurrentState(class UActorStateComponent* PreviousState);
	bool IsStateActive();
	void GotoState();
};


// Class FSD.FSDUserWidget
// 0x0020 (0x0228 - 0x0208)
class UFSDUserWidget : public UUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnVisibilityChanged;                                      // 0x0208(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0218(0x0008) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x0220(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDUserWidget");
		return ptr;
	}


	static void SetTickEnabled(class UUserWidget* Widget, bool tickEnabled);
	void SetOpacity(float Alpha);
	void ScaleByBaseResolution();
	void Refresh();
	void ReceiveNewVisibility(ESlateVisibility NewVisibility);
	void OnCloseMenuReleased(bool* Handled);
	void OnCloseMenuPressed(bool* Handled);
	bool HasCharacter();
	float GetOpacity();
	class AFSDPlayerState* GetFSDPlayerState();
	class AItem* GetEquippedItem();
	float GetBaseResolutionScale();
	void BP_OnRefresh();
};


// Class FSD.ActorTrackingWidget
// 0x0028 (0x0250 - 0x0228)
class UActorTrackingWidget : public UFSDUserWidget
{
public:
	TWeakObjectPtr<class USceneComponent>              TargetComponent;                                          // 0x0228(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              WorldHeightOffset;                                        // 0x0230(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ScaleBy;                                                  // 0x0234(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FMargin                                     ScreenMargin;                                             // 0x0238(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                WidgetZOrder;                                             // 0x0248(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x024C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ActorTrackingWidget");
		return ptr;
	}


	void SetTargetComponent(class USceneComponent* Component);
	void SetTarget(class AActor* Actor);
	void OnTargetSet(class AActor* NewTarget);
	void OnTargetDistanceChanged(float distance);
	void OnShow();
	void OnInViewChanged(bool inView, float Angle);
	class AActor* GetTarget();
	struct FVector2D GetRenderTranslation();
	static bool FindScreenPosition(class APlayerController* PlayerController, const struct FVector& WorldLocation, const struct FMargin& Margin, struct FVector* ScreenCord, float* Angle);
	static class UActorTrackingWidget* CreateTrackingWidget(class APlayerController* PlayerController, class UClass* WidgetType, class USceneComponent* TargetComponent);
};


// Class FSD.ActorTrackingComponent
// 0x0010 (0x0250 - 0x0240)
class UActorTrackingComponent : public USceneComponent
{
public:
	bool                                               VisibleOnHoldTAB;                                         // 0x0240(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               VisibleFromStart;                                         // 0x0241(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0242(0x0002) MISSED OFFSET
	TWeakObjectPtr<class UActorTrackingWidget>         Widget;                                                   // 0x0244(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x024C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ActorTrackingComponent");
		return ptr;
	}


	void ToggleIcon(bool Visible);
	void OnHoldTAB(bool IsDown);
	bool IsIconVisible();
};


// Class FSD.AdicPuddle
// 0x0028 (0x0350 - 0x0328)
class AAdicPuddle : public AActor
{
public:
	TWeakObjectPtr<class UPrimitiveComponent>          Collider;                                                 // 0x0328(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USoundBase*                                  SpawnSound;                                               // 0x0330(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class UClass*                                      InflictedStatusEffect;                                    // 0x0338(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0340(0x0008) MISSED OFFSET
	float                                              LifeTime;                                                 // 0x0348(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x034C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AdicPuddle");
		return ptr;
	}


	void OnEndOverLap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBeginOverLap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class FSD.AfflictionEffect
// 0x0000 (0x0028 - 0x0028)
class UAfflictionEffect : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AfflictionEffect");
		return ptr;
	}


	bool ShouldInstantiate();
	void ReceiveEndEffect(class UPawnAfflictionComponent* Target);
	void ReceiveBeginEffect(class UPawnAfflictionComponent* Target);
};


// Class FSD.PawnFrozenUniqueAfflictionEffect
// 0x0000 (0x0028 - 0x0028)
class UPawnFrozenUniqueAfflictionEffect : public UAfflictionEffect
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PawnFrozenUniqueAfflictionEffect");
		return ptr;
	}

};


// Class FSD.PawnBurningUniqueAfflictionEffect
// 0x0000 (0x0028 - 0x0028)
class UPawnBurningUniqueAfflictionEffect : public UAfflictionEffect
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PawnBurningUniqueAfflictionEffect");
		return ptr;
	}

};


// Class FSD.AttachedParticlesAfflictionEffect
// 0x0020 (0x0048 - 0x0028)
class UAttachedParticlesAfflictionEffect : public UAfflictionEffect
{
public:
	class UParticleSystem*                             ParticleEffect;                                           // 0x0028(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EAfflictionSocket                                  Socket;                                                   // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	TArray<class UParticleSystemComponent*>            EmitterInstances;                                         // 0x0038(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AttachedParticlesAfflictionEffect");
		return ptr;
	}

};


// Class FSD.CharacterShoutAfflictionEffect
// 0x0008 (0x0030 - 0x0028)
class UCharacterShoutAfflictionEffect : public UAfflictionEffect
{
public:
	class UDialogDataAsset*                            Shout;                                                    // 0x0028(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CharacterShoutAfflictionEffect");
		return ptr;
	}

};


// Class FSD.SoundAfflictionEffect
// 0x0020 (0x0048 - 0x0028)
class USoundAfflictionEffect : public UAfflictionEffect
{
public:
	class USoundCue*                                   BeginSound;                                               // 0x0028(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   EndSound;                                                 // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               Attach;                                                   // 0x0038(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FName                                       AttachBone;                                               // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SoundAfflictionEffect");
		return ptr;
	}

};


// Class FSD.AttachMeshesAfflictionEffect
// 0x0018 (0x0040 - 0x0028)
class UAttachMeshesAfflictionEffect : public UAfflictionEffect
{
public:
	TArray<struct FAttachMeshesAfflictionItem>         AttachItems;                                              // 0x0028(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UParticleSystem*                             OnRemoveEffect;                                           // 0x0038(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AttachMeshesAfflictionEffect");
		return ptr;
	}

};


// Class FSD.FrozenAfflictionEffect
// 0x0030 (0x0058 - 0x0028)
class UFrozenAfflictionEffect : public UAfflictionEffect
{
public:
	TArray<struct FFrozenAfflictionItem>               IceParts;                                                 // 0x0028(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UMaterialInterface*                          MaterialOverride;                                         // 0x0038(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FName                                       ParticleBone;                                             // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UMaterialInterface*>                  IceMaterials;                                             // 0x0048(0x0010) (CPF_Edit, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FrozenAfflictionEffect");
		return ptr;
	}

};


// Class FSD.BurningAfflictionEffect
// 0x0008 (0x0030 - 0x0028)
class UBurningAfflictionEffect : public UAfflictionEffect
{
public:
	EFrozenBitsSize                                    FireParticleSize;                                         // 0x0028(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BurningAfflictionEffect");
		return ptr;
	}

};


// Class FSD.BoneParticlesAfflictionEffect
// 0x0018 (0x0040 - 0x0028)
class UBoneParticlesAfflictionEffect : public UAfflictionEffect
{
public:
	TArray<class UParticleSystem*>                     Particles;                                                // 0x0028(0x0010) (CPF_Edit, CPF_EditFixedSize, CPF_ZeroConstructor)
	class USoundCue*                                   Sound;                                                    // 0x0038(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BoneParticlesAfflictionEffect");
		return ptr;
	}

};


// Class FSD.FSDPawn
// 0x0018 (0x03A0 - 0x0388)
class AFSDPawn : public APawn
{
public:
	class UStatusEffectsComponent*                     StatusEffects;                                            // 0x0388(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UEnemyTemperatureComponent*                  Temperature;                                              // 0x0390(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               IsFrozen;                                                 // 0x0398(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               CanFlee;                                                  // 0x0399(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsFleeing;                                                // 0x039A(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x039B(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDPawn");
		return ptr;
	}


	void UnFreeze();
	void StopFleeing();
	void StartFleeing(const struct FVector& fromLocation);
	void SetAlerted(bool isAlerted);
	void OnUnFrozen();
	void OnStoppedFleeing();
	void OnStartedFleeing();
	void OnRep_IsFrozen();
	void OnFrozen();
	void OnArmorPartsDestroyedFromRadialDamage(TArray<unsigned char> destroyedParts);
	bool GetIsAlerted();
	void Freeze();
	void All_ArmorPartsDestroyed(TArray<unsigned char> parts);
};


// Class FSD.DeepPathfinderCharacter
// 0x0098 (0x0438 - 0x03A0)
class ADeepPathfinderCharacter : public AFSDPawn
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x03A0(0x0018) MISSED OFFSET
	class UDeepPathfinderMovement*                     PathfinderMovement;                                       // 0x03B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x03C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FGameplayTagContainer                       GameplayTags;                                             // 0x03C8(0x0020) (CPF_Edit, CPF_BlueprintVisible)
	struct FName                                       IsAlertedKey;                                             // 0x03E8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FName                                       CenterMassSocketName;                                     // 0x03F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDeepPatherFinderCharacterAfflictionComponent* affliction;                                               // 0x03F8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              AnimationOffset;                                          // 0x0400(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               CanPlayerStandOn;                                         // 0x0404(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               UseDormancy;                                              // 0x0405(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0406(0x0002) MISSED OFFSET
	float                                              StaggerDurationMultiplier;                                // 0x0408(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsHidden;                                                 // 0x040C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x040D(0x0003) MISSED OFFSET
	float                                              AttackerRadius;                                           // 0x0410(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0414(0x0004) MISSED OFFSET
	TArray<class UMaterialInterface*>                  CachedMaterials;                                          // 0x0418(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	float                                              AllowedInFormationChance;                                 // 0x0428(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0xC];                                       // 0x042C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DeepPathfinderCharacter");
		return ptr;
	}


	void TryJoinFormation();
	void SetHidden(bool shouldHide);
	void LeaveFormation();
	class UHealthComponentBase* GetHealthComponent();
};


// Class FSD.EnemyDeepPathfinderCharacter
// 0x0020 (0x0458 - 0x0438)
class AEnemyDeepPathfinderCharacter : public ADeepPathfinderCharacter
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0438(0x0008) MISSED OFFSET
	class UEnemyHealthComponent*                       HealthComponent;                                          // 0x0440(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FQueuedMontage                              QueuedMontage;                                            // 0x0448(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyDeepPathfinderCharacter");
		return ptr;
	}


	void OnRep_QueuedMontage();
};


// Class FSD.AFlyingBug
// 0x01A0 (0x05F8 - 0x0458)
class AAFlyingBug : public AEnemyDeepPathfinderCharacter
{
public:
	class UDashPoints*                                 DashPointsComponent;                                      // 0x0458(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UEnemyComponent*                             EnemyComponent;                                           // 0x0460(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UPawnStatsComponent*                         PawnStats;                                                // 0x0468(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UOutlineComponent*                           Outline;                                                  // 0x0470(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UPawnSensingComponent*                       Senses;                                                   // 0x0478(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USphereComponent*                            ExplosionSphere;                                          // 0x0480(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	TArray<class UAnimSequenceBase*>                   HitReactions;                                             // 0x0488(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	struct FScriptMulticastDelegate                    OnStopDash;                                               // 0x0498(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStartDash;                                              // 0x04A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStartFizzle;                                            // 0x04B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	float                                              FirstHitReactBlendIn;                                     // 0x04C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              OverrideHitReactBlendIn;                                  // 0x04CC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               SetLifeTime;                                              // 0x04D0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04D1(0x0003) MISSED OFFSET
	TWeakObjectPtr<class UAudioComponent>              WingSoundComponent;                                       // 0x04D4(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04DC(0x0004) MISSED OFFSET
	class USoundBase*                                  WingSound;                                                // 0x04E0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               UsesAttackStance;                                         // 0x04E8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x04E9(0x0003) MISSED OFFSET
	float                                              AcceptedDashradius;                                       // 0x04EC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              DashSpeed;                                                // 0x04F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x04F4(0x0004) MISSED OFFSET
	struct FRuntimeFloatCurve                          DashSpeedCurve;                                           // 0x04F8(0x0078) (CPF_Edit, CPF_DisableEditOnInstance)
	float                                              ModifiedDashSpeed;                                        // 0x0570(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              AttackModeRotationSpeed;                                  // 0x0574(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0578(0x0004) MISSED OFFSET
	bool                                               StopLogicOnDeath;                                         // 0x057C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x057D(0x0003) MISSED OFFSET
	float                                              SlowdownRadius;                                           // 0x0580(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	struct FVector_NetQuantize                         DashOriginLocation;                                       // 0x0584(0x000C) (CPF_Net, CPF_Transient)
	struct FVector_NetQuantize                         DashLocation;                                             // 0x0590(0x000C) (CPF_Net, CPF_Transient)
	struct FVector_NetQuantize                         RagdollImpact;                                            // 0x059C(0x000C) (CPF_Net, CPF_Transient)
	class AActor*                                      RotateTarget;                                             // 0x05A8(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               LookStraight;                                             // 0x05B0(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               IsDashing;                                                // 0x05B1(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               AttackStance;                                             // 0x05B2(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               ShouldExposeWeakPoint;                                    // 0x05B3(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               UsingVoiceChatter;                                        // 0x05B4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x05B5(0x0003) MISSED OFFSET
	float                                              MinChatterDelay;                                          // 0x05B8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              MaxChatterDelay;                                          // 0x05BC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              NextChatterTime;                                          // 0x05C0(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x05C4(0x0004) MISSED OFFSET
	class USoundBase*                                  ChatterSound;                                             // 0x05C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class UEnemyRangedAttack*                          RangedAttack;                                             // 0x05D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              CurrentChatterComponent;                                  // 0x05D8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               UseDefaultRagdoll;                                        // 0x05E0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x05E1(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAlertNearbyEnemies;                                     // 0x05E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AFlyingBug");
		return ptr;
	}


	void StopDashing();
	void StartDashing();
	void SetExternallyControlled(bool isExternallyControlled);
	void SetDashLocation(const struct FVector& newDashLocation);
	void SetAttackStance(bool isAttackStance);
	void OnRep_RagdollImpact();
	void OnRep_DashLocation();
	void OnRep_ChatterTime();
	void OnFlyingBugDeath(class UHealthComponentBase* aHealthComponent);
	void OnDamaged(float Amount);
	bool GetValidDashPoint(bool Surround);
	bool GetIsInAttackStance();
	bool GetIsDashing();
	struct FVector GetDashLocation();
	void AlertNearbyEnemies();
};


// Class FSD.EnemyAnimInstance
// 0x0040 (0x03A0 - 0x0360)
class UEnemyAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0360(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnMeleeAttackNotify;                                      // 0x0368(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStopLeadingNotify;                                      // 0x0378(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	bool                                               IsAlive;                                                  // 0x0388(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0389(0x0003) MISSED OFFSET
	float                                              RandomStartPosition;                                      // 0x038C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UHealthComponentBase*                        HealthComponent;                                          // 0x0390(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0398(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyAnimInstance");
		return ptr;
	}


	bool IsSlotPlayingAnyAnimation(const struct FName& SlotNodeName);
	class USkeletalMeshComponent* GetSkeletalMesh();
};


// Class FSD.SimpleMovingEnemyAnimInstance
// 0x0030 (0x03D0 - 0x03A0)
class USimpleMovingEnemyAnimInstance : public UEnemyAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03A0(0x0008) MISSED OFFSET
	float                                              WalkCycleSpeed;                                           // 0x03A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              StartMovingSpeed;                                         // 0x03AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              StopMovingSpeed;                                          // 0x03B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              WalkCycleMinRate;                                         // 0x03B4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              WalkCyclePlayRate;                                        // 0x03B8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              MeshScale;                                                // 0x03BC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsMoving;                                                 // 0x03C0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x03C1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SimpleMovingEnemyAnimInstance");
		return ptr;
	}


	void SetMeshScale(float NewScale);
};


// Class FSD.FlyingBugAnimInstance
// 0x0000 (0x03D0 - 0x03D0)
class UFlyingBugAnimInstance : public USimpleMovingEnemyAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FlyingBugAnimInstance");
		return ptr;
	}

};


// Class FSD.AIFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UAIFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AIFunctionLibrary");
		return ptr;
	}


	static int MakeEnemiesFleeFromArea(class UObject* WorldContextObject, const struct FVector& Center, float Radius, int maxEnemiesAffected);
	static bool IsEnemyAlertet(class APawn* enemy);
	static class APlayerCharacter* GetPlayerTarget(class AActor* From, float MaxDistance, bool MustBeAlive, bool MustBeUnparalyzed, bool AccountForAttackers, class AActor* ignoreTarget, bool IsFlying);
	static class APlayerCharacter* ConsiderChangingTarget(class APlayerCharacter* CurrentTarget, class AActor* From, float MaxDistance, bool MustBeAlive, bool MustBeUnparalyzed, bool CurrentTargetMustBeAlive, bool IsFlying);
	static void AlertEnemy(class APawn* enemy);
	static void AlertEnemiesInRange(class UObject* WorldContextObject, const struct FVector& Origin, float Range, class APawn* alerter);
};


// Class FSD.AmmoCountWidget
// 0x0020 (0x0228 - 0x0208)
class UAmmoCountWidget : public UUserWidget
{
public:
	class APlayerCharacter*                            Character;                                                // 0x0208(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class AItem*                                       Item;                                                     // 0x0210(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UItemAggregator*                             Aggregator;                                               // 0x0218(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0220(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AmmoCountWidget");
		return ptr;
	}


	void OnVisibleChanged(bool Visible, bool showClipCount);
	void OnTotalVisibleChanged(bool Visible);
	void OnTotalChanged(int Total);
	void OnItemTotalChanged(int Value);
	void OnItemEquipped(class AItem* NewItem);
	void OnItemAmountChanged(int Value);
	void OnAmountChanged(int Count);
	void DoItemEquipped();
};


// Class FSD.ItemAggregator
// 0x0018 (0x0108 - 0x00F0)
class UItemAggregator : public UActorComponent
{
public:
	struct FText                                       CounterText;                                              // 0x00F0(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ItemAggregator");
		return ptr;
	}


	void UnbindAllEvents();
};


// Class FSD.ClipBasedItemAggregator
// 0x0078 (0x0180 - 0x0108)
class UClipBasedItemAggregator : public UItemAggregator
{
public:
	struct FScriptMulticastDelegate                    OnClipAmountChanged;                                      // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTotalAmountChanged;                                     // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClipAndTotalChanged;                                    // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReloadTimeChanged;                                      // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReloadComplete;                                         // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReloadStarted;                                          // 0x0158(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMaxAmmoCapacityChanged;                                 // 0x0168(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	bool                                               ShowTotalAmount;                                          // 0x0178(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0179(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ClipBasedItemAggregator");
		return ptr;
	}


	void ReloadStarted();
	void ReloadComplete();
	int GetTotalAmount();
	int GetClipAmount();
};


// Class FSD.AmmoDriveWeaponAggregator
// 0x0008 (0x0188 - 0x0180)
class UAmmoDriveWeaponAggregator : public UClipBasedItemAggregator
{
public:
	class AAmmoDrivenWeapon*                           Weapon;                                                   // 0x0180(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AmmoDriveWeaponAggregator");
		return ptr;
	}

};


// Class FSD.WeaponTriggerStrategy
// 0x0000 (0x0028 - 0x0028)
class UWeaponTriggerStrategy : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.WeaponTriggerStrategy");
		return ptr;
	}

};


// Class FSD.Item
// 0x00D0 (0x03F8 - 0x0328)
class AItem : public AActor
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0328(0x0028) MISSED OFFSET
	struct FVector                                     FPCameraOffset;                                           // 0x0350(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               EnableDangerousSaveGameIDEditing;                         // 0x035C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x035D(0x0003) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x0360(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class APlayerCharacter*                            Character;                                                // 0x0370(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UUpgradableItemComponent*                    UpgradableItem;                                           // 0x0378(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UClass*                                      CameraShake;                                              // 0x0380(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               CameraShakeOnStartUsing;                                  // 0x0388(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               CameraShakeOnEquip;                                       // 0x0389(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0xE];                                       // 0x038A(0x000E) MISSED OFFSET
	class UCurveFloat*                                 HeatCurve;                                                // 0x0398(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CooldownRate;                                             // 0x03A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              UnjamDuration;                                            // 0x03A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CurrentTemperature;                                       // 0x03A8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03AC(0x0004) MISSED OFFSET
	class USoundBase*                                  AudioTemperature;                                         // 0x03B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FName                                       TemperatureFloatParam;                                    // 0x03B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAudioComponent*                             TemperatureAudioComponent;                                // 0x03C0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               Overheated;                                               // 0x03C8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x03C9(0x0007) MISSED OFFSET
	class UDialogDataAsset*                            ShoutOverheated;                                          // 0x03D0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bAimAssistEnabled;                                        // 0x03D8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x03D9(0x0003) MISSED OFFSET
	float                                              MovementRateWhileUsing;                                   // 0x03DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               CanInspectItem;                                           // 0x03E0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x03E1(0x0007) MISSED OFFSET
	class UClass*                                      CustomIconWidget;                                         // 0x03E8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsEquipped;                                               // 0x03F0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               isUsing;                                                  // 0x03F1(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0x6];                                       // 0x03F2(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Item");
		return ptr;
	}


	void UpdateSkin();
	void Server_StartUsing(bool isUsing);
	void RecieveUnequipped();
	void RecieveStopUsing();
	void RecieveStartUsing();
	void RecieveEquipped();
	void RecieveCycledItem();
	void Recieve_UpdateMeshses(bool IsFirstPerson);
	void ReceiveResupply(float percentage);
	void Receive_Overheated();
	void OnTemperatureChanged(float Temperature, bool Overheated);
	void OnRep_IsUsing(bool OldValue);
	void OnOwnerDestroyed(class AActor* owningActor);
	bool IsLocallyControlled();
	bool IsFirstPerson();
	class UClass* GetWeaponViewClass();
	struct FText GetItemName();
	class UTexture2D* GetItemIconLine();
	class UTexture2D* GetItemIconBG();
	static class AItem* GetItemDefaultObject(class UClass* itemClass);
	struct FText GetItemCategory();
	class USceneComponent* GetHeatingAudioSceneComponent();
	class UItemCharacterAnimationSet* GetCharacterAnimationSet();
	struct FString GetAnalyticsItemName();
	struct FString GetAnalyticsItemCategory();
	void AddedToInventory(class APlayerCharacter* ItemOwner);
};


// Class FSD.AnimatedItem
// 0x0050 (0x0448 - 0x03F8)
class AAnimatedItem : public AItem
{
public:
	class USkinnableComponent*                         Skinnable;                                                // 0x03F8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UPlayerAnimInstance*                         FPAnimInstance;                                           // 0x0400(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UPlayerAnimInstance*                         TPAnimInstance;                                           // 0x0408(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class USkeletalMeshComponent*                      FPMesh;                                                   // 0x0410(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USkeletalMeshComponent*                      TPMesh;                                                   // 0x0418(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UAnimMontage*                                FP_EquipAnimation;                                        // 0x0420(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                TP_EquipAnimation;                                        // 0x0428(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              EquipDuration;                                            // 0x0430(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0434(0x0004) MISSED OFFSET
	class UItemCharacterAnimationSet*                  CharacterAnimationSet;                                    // 0x0438(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0440(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimatedItem");
		return ptr;
	}


	struct FTransform GetMuzzle();
	class USkeletalMeshComponent* GetItemMesh();
};


// Class FSD.AmmoDrivenWeapon
// 0x0240 (0x0688 - 0x0448)
class AAmmoDrivenWeapon : public AAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0448(0x0020) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnClipCountChanged;                                       // 0x0468(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UWeaponFireComponent*                        WeaponFire;                                               // 0x0478(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UAmmoDriveWeaponAggregator*                  Aggregator;                                               // 0x0480(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               LoopFireAnimation;                                        // 0x0488(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0489(0x0003) MISSED OFFSET
	float                                              LoopFireAnimationBlendoutTime;                            // 0x048C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                FP_FireAnimation;                                         // 0x0490(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                TP_FireAnimation;                                         // 0x0498(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                FP_ReloadAnimation;                                       // 0x04A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FItemAnimationItem                          OverheatAnimation;                                        // 0x04A8(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<struct FItemAnimationItem>                  GunslingAnimations;                                       // 0x04C0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UAnimMontage*                                TP_ReloadAnimation;                                       // 0x04D0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                WPN_Fire;                                                 // 0x04D8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                WPN_FireLastBullet;                                       // 0x04E0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                WPN_Reload;                                               // 0x04E8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                WPN_Reload_TP;                                            // 0x04F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             MuzzleParticles;                                          // 0x04F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             TPMuzzleParticles;                                        // 0x0500(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             TracerParticles;                                          // 0x0508(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinTracerDistance;                                        // 0x0510(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TracerSpeed;                                              // 0x0514(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             CasingParticles;                                          // 0x0518(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class ULightComponent*                             MuzzleFlashLight;                                         // 0x0520(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FRuntimeFloatCurve                          MuzzleFlashLightCurve;                                    // 0x0528(0x0078) (CPF_Edit)
	unsigned char                                      UnknownData02[0x8];                                       // 0x05A0(0x0008) MISSED OFFSET
	class USoundCue*                                   FireSound;                                                // 0x05A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   FireSoundTail;                                            // 0x05B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsFireSoundTail2D;                                        // 0x05B8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x05B9(0x0007) MISSED OFFSET
	class UForceFeedbackEffect*                        FireForceFeedbackEffect;                                  // 0x05C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAudioComponent*                             FireSoundInstance;                                        // 0x05C8(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              FireSoundFadeDuration;                                    // 0x05D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x05D4(0x0004) MISSED OFFSET
	class USoundCue*                                   ReloadSound;                                              // 0x05D8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                BulletsRemainingForNearEmptySound;                        // 0x05E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x05E4(0x0004) MISSED OFFSET
	class USoundCue*                                   NearEmptySound;                                           // 0x05E8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   WeaponEmptySound;                                         // 0x05F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            ShoutShotFired;                                           // 0x05F8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            ShoutOutOfAmmo;                                           // 0x0600(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            ShoutReloading;                                           // 0x0608(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                MaxAmmo;                                                  // 0x0610(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                ClipSize;                                                 // 0x0614(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                ShotCost;                                                 // 0x0618(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RateOfFire;                                               // 0x061C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                BurstCount;                                               // 0x0620(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BurstCycleTime;                                           // 0x0624(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ReloadDuration;                                           // 0x0628(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                AmmoCount;                                                // 0x062C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                ClipCount;                                                // 0x0630(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              CycleTimeLeft;                                            // 0x0634(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0638(0x0004) MISSED OFFSET
	float                                              ReloadTimeLeft;                                           // 0x063C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               AutomaticReload;                                          // 0x0640(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               CanReload;                                                // 0x0641(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0x2];                                       // 0x0642(0x0002) MISSED OFFSET
	struct FRecoilSettings                             RecoilSettings;                                           // 0x0644(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	bool                                               HasAutomaticFire;                                         // 0x066C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsFiring;                                                 // 0x066D(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0x18];                                      // 0x066E(0x0018) MISSED OFFSET
	EAmmoWeaponState                                   WeaponState;                                              // 0x0686(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData09[0x1];                                       // 0x0687(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AmmoDrivenWeapon");
		return ptr;
	}


	void Upgraded_Blueprint_Implementation(TArray<class UItemUpgrade*> upgrades);
	void Server_ReloadWeapon();
	void Server_PlayBurstFire(unsigned char shotCount);
	void Server_Gunsling(unsigned char Index);
	void RecieveFiredWeapon();
	void Receive_ReloadEnd();
	void Receive_ReloadBegin();
	void Receive_IsFiringChanged(bool NewValue);
	void OnWeaponFireEnded();
	void OnWeaponFired(const struct FVector& Location);
	void OnRep_IsFiring();
	bool IsClipFull();
	void InstantlyReload();
	void Client_RefillAmmo(float percentage);
	void All_SimulateReload();
	void All_PlayBurstFire(unsigned char shotCount);
	void All_Gunsling(unsigned char Index);
};


// Class FSD.AssaultRifle
// 0x0020 (0x06A8 - 0x0688)
class AAssaultRifle : public AAmmoDrivenWeapon
{
public:
	float                                              KillsResetAccuracyDuration;                               // 0x0688(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               KillsTriggersStatusEffect;                                // 0x068C(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x13];                                      // 0x068D(0x0013) MISSED OFFSET
	class UClass*                                      KillTriggeredStatusEffect;                                // 0x06A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AssaultRifle");
		return ptr;
	}


	void OnTimerElapsed();
	void OnEnemyKilled(class AActor* Target, class UFSDPhysicalMaterial* PhysMat);
	void Client_ResetAccuracy();
};


// Class FSD.SawedOffShotgun
// 0x0060 (0x06E8 - 0x0688)
class ASawedOffShotgun : public AAmmoDrivenWeapon
{
public:
	class UDamageComponent*                            DamageComponent;                                          // 0x0688(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDamageComponent*                            ShockWaveDamageComponent;                                 // 0x0690(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              FearFactorOnFire;                                         // 0x0698(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FearFactorOnFireRadius;                                   // 0x069C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ShockwaveEnabled;                                         // 0x06A0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x06A1(0x0003) MISSED OFFSET
	float                                              ShockWaveDistance;                                        // 0x06A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ShockWaveRadius;                                          // 0x06A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ShockWaveLength;                                          // 0x06AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AutoReloadDuration;                                       // 0x06B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x06B4(0x0004) MISSED OFFSET
	class USoundCue*                                   AutoReloadCompleteCue;                                    // 0x06B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x28];                                      // 0x06C0(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SawedOffShotgun");
		return ptr;
	}


	void SetShockWaveDamageComponent(class UDamageComponent* Component);
};


// Class FSD.BurstWeapon
// 0x0028 (0x06B0 - 0x0688)
class ABurstWeapon : public AAmmoDrivenWeapon
{
public:
	class UDamageComponent*                            Damage;                                                   // 0x0688(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDamageComponent*                            BurstFireBonusDamage;                                     // 0x0690(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0698(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BurstWeapon");
		return ptr;
	}


	void OnTargetDamaged(class UHealthComponentBase* Health, float Amount, class UFSDPhysicalMaterial* PhysicalMaterial);
};


// Class FSD.Revoler
// 0x0018 (0x06A0 - 0x0688)
class ARevoler : public AAmmoDrivenWeapon
{
public:
	float                                              OnKillFearFactor;                                         // 0x0688(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              OnKillFearRange;                                          // 0x068C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0690(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Revoler");
		return ptr;
	}


	void OnTargetKilled(class AActor* Target, class UFSDPhysicalMaterial* PhysMat);
};


// Class FSD.BasicPistol
// 0x0018 (0x06A0 - 0x0688)
class ABasicPistol : public AAmmoDrivenWeapon
{
public:
	float                                              ConsecutiveHitsDamageBonus;                               // 0x0688(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x068C(0x000C) MISSED OFFSET
	float                                              ConsecutiveHitsMaxBonus;                                  // 0x0698(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x069C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BasicPistol");
		return ptr;
	}


	void OnTargetDamaged(class UHealthComponentBase* Health, float Amount, class UFSDPhysicalMaterial* PhysicalMaterial);
};


// Class FSD.ElectricalSMG
// 0x0030 (0x06B8 - 0x0688)
class AElectricalSMG : public AAmmoDrivenWeapon
{
public:
	class UClass*                                      AoEStatusEffect;                                          // 0x0688(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             AoEParticle;                                              // 0x0690(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   AoESound;                                                 // 0x0698(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AoEStatusEffectChance;                                    // 0x06A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AoEStatusEffectRange;                                     // 0x06A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x06A8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ElectricalSMG");
		return ptr;
	}


	void OnStatusEffectPushed(class UHealthComponentBase* Health);
	void All_OnAoETriggered(const struct FVector_NetQuantize& Location, const struct FVector_NetQuantizeNormal& Normal);
};


// Class FSD.AutoShotgun
// 0x0008 (0x0690 - 0x0688)
class AAutoShotgun : public AAmmoDrivenWeapon
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0688(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AutoShotgun");
		return ptr;
	}


	void OnTargetDamaged(class UHealthComponentBase* Health, float Amount, class UFSDPhysicalMaterial* PhysicalMaterial);
};


// Class FSD.LineCutter
// 0x0018 (0x06A0 - 0x0688)
class ALineCutter : public AAmmoDrivenWeapon
{
public:
	TArray<class UItemUpgrade*>                        upgrades;                                                 // 0x0688(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TWeakObjectPtr<class AProjectileBase>              LastProjectile;                                           // 0x0698(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LineCutter");
		return ptr;
	}


	void OnRep_LastProjectile();
	void OnProjectileLaunched(class AProjectileBase* Projectile);
};


// Class FSD.AmmoDrivenWeaponAnimInstance
// 0x0010 (0x0370 - 0x0360)
class UAmmoDrivenWeaponAnimInstance : public UAnimInstance
{
public:
	bool                                               IsFiring;                                                 // 0x0360(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0361(0x0003) MISSED OFFSET
	float                                              ClipFullPercentage;                                       // 0x0364(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0368(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AmmoDrivenWeaponAnimInstance");
		return ptr;
	}


	bool IsFull();
	bool IsEmpty();
};


// Class FSD.PlatformGunAnimInstance
// 0x0010 (0x0380 - 0x0370)
class UPlatformGunAnimInstance : public UAmmoDrivenWeaponAnimInstance
{
public:
	float                                              LerpSpeed;                                                // 0x0370(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FiredSpinRate;                                            // 0x0374(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0378(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlatformGunAnimInstance");
		return ptr;
	}


	void WeaponFired();
};


// Class FSD.AreaDamageComponent
// 0x0010 (0x0250 - 0x0240)
class UAreaDamageComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0240(0x0008) MISSED OFFSET
	float                                              DamageInterval;                                           // 0x0248(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Damage;                                                   // 0x024C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AreaDamageComponent");
		return ptr;
	}


	void EndOverlap(class AActor* MyActor, class AActor* OtherActor);
	void BeginOverlap(class AActor* MyActor, class AActor* OtherActor);
};


// Class FSD.BaseArmorDamageComponent
// 0x0020 (0x0110 - 0x00F0)
class UBaseArmorDamageComponent : public UActorComponent
{
public:
	bool                                               ArmorDamageEnabled;                                       // 0x00F0(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET
	class UParticleSystem*                             BreakArmorParticles;                                      // 0x00F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFSDPhysicalMaterial*                        ArmorPhysmat;                                             // 0x0100(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x0108(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BaseArmorDamageComponent");
		return ptr;
	}

};


// Class FSD.SimpleArmorDamageComponent
// 0x0068 (0x0178 - 0x0110)
class USimpleArmorDamageComponent : public UBaseArmorDamageComponent
{
public:
	struct FScriptMulticastDelegate                    OnRadialArmorPartsDestroyedEvent;                         // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	float                                              ArmorStrength;                                            // 0x0120(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	TMap<struct FName, struct FDestructableBodypartItem> PhysBoneToArmor;                                          // 0x0128(0x0050) (CPF_Edit, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SimpleArmorDamageComponent");
		return ptr;
	}


	void DamageArmor_All(TArray<unsigned char> parts);
};


// Class FSD.ArmorHealthDamageComponent
// 0x0068 (0x0178 - 0x0110)
class UArmorHealthDamageComponent : public UBaseArmorDamageComponent
{
public:
	struct FScriptMulticastDelegate                    OnArmorPartDestroyedEvent;                                // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	TMap<struct FName, struct FArmorHealthItem>        PhysBoneToArmor;                                          // 0x0120(0x0050) (CPF_Edit, CPF_ZeroConstructor)
	uint32_t                                           ArmorDamageIndex;                                         // 0x0170(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0174(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ArmorHealthDamageComponent");
		return ptr;
	}


	void OnRep_ArmorDamageIndex(uint32_t OldValue);
};


// Class FSD.ArmorPiece
// 0x0078 (0x03A0 - 0x0328)
class AArmorPiece : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class UUpgradableGearComponent*                    Upgradable;                                               // 0x0330(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	TMap<class UPawnStat*, float>                      StatModifiers;                                            // 0x0338(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	struct FGuid                                       SavegameID;                                               // 0x0388(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      WeaponPreviewClass;                                       // 0x0398(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ArmorPiece");
		return ptr;
	}


	class UClass* GetWeaponViewClass();
	static class AArmorPiece* GetArmorPieceDefaultObject(class UClass* armorPieceClass);
};


// Class FSD.ThrowableItem
// 0x0068 (0x04B0 - 0x0448)
class AThrowableItem : public AAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0448(0x0008) MISSED OFFSET
	class UClass*                                      ThrowableClass;                                           // 0x0450(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                FPThrowMontage;                                           // 0x0458(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                TPThrowMontage;                                           // 0x0460(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ThrowVelocity;                                            // 0x0468(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              InheritOwnerVelocityScale;                                // 0x046C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ThrowAngle;                                               // 0x0470(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CooldownAfterThrow;                                       // 0x0474(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CooldownAfterDetonation;                                  // 0x0478(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ThrowDelay;                                               // 0x047C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ThrowZOffset;                                             // 0x0480(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CooldownLeft;                                             // 0x0484(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TArray<class UItemUpgrade*>                        upgrades;                                                 // 0x0488(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<TWeakObjectPtr<class AThrowableActor>>      ThrownActors;                                             // 0x0498(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x04A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ThrowableItem");
		return ptr;
	}


	void Simulate_Throw(class UClass* ActorClass);
	void Server_Throw(class UClass* ActorClass);
	void ReceiveItemThrown(class AThrowableActor* thrownActor);
	void ReceiveItemSpawned(class AThrowableActor* thrownActor);
	void OnThrownActorDestroyed(class AActor* Actor);
};


// Class FSD.ArmorRegeneratorItem
// 0x0010 (0x04C0 - 0x04B0)
class AArmorRegeneratorItem : public AThrowableItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04B0(0x0008) MISSED OFFSET
	class UCapacityHoldingItemAggregator*              Capacity;                                                 // 0x04B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ArmorRegeneratorItem");
		return ptr;
	}

};


// Class FSD.ThrowableActor
// 0x0010 (0x0338 - 0x0328)
class AThrowableActor : public AActor
{
public:
	class UProjectileMovementComponent*                Movement;                                                 // 0x0328(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               IsMoving;                                                 // 0x0330(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0331(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ThrowableActor");
		return ptr;
	}


	void ReceiveHitObject();
	void OnRep_IsMoving();
};


// Class FSD.ArmorRegeneratorActor
// 0x0008 (0x0340 - 0x0338)
class AArmorRegeneratorActor : public AThrowableActor
{
public:
	float                                              GeneratorRadius;                                          // 0x0338(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              GeneratorLifetime;                                        // 0x033C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ArmorRegeneratorActor");
		return ptr;
	}

};


// Class FSD.AttackerPositioningComponent
// 0x0068 (0x0158 - 0x00F0)
class UAttackerPositioningComponent : public UActorComponent
{
public:
	TArray<struct FAttackerInfo>                       Attackers;                                                // 0x00F0(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	TArray<int>                                        FreePositions;                                            // 0x0100(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	TArray<struct FAttackerInfo>                       FlyingAttackers;                                          // 0x0110(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	TArray<int>                                        FlyingFreePositions;                                      // 0x0120(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	float                                              CharacterPersonalSphere;                                  // 0x0130(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CharacterHalfHeight;                                      // 0x0134(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0138(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AttackerPositioningComponent");
		return ptr;
	}


	void UnregisterAttacker(class AActor* Attacker, bool IsFlying);
	void RegisterAttacker(class AActor* Attacker, bool IsFlying);
	void OnFlyingAttackerDeath(class UHealthComponentBase* HealthComponent);
	void OnAttackerDeath(class UHealthComponentBase* HealthComponent);
	struct FVector GetFlyingAttackerPosition(class AActor* Attacker, float AttackerRadius);
	struct FVector GetAttackerPosition(class AActor* Attacker, float AttackerRadius);
};


// Class FSD.PlayerAttackPositionComponent
// 0x0000 (0x0158 - 0x0158)
class UPlayerAttackPositionComponent : public UAttackerPositioningComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerAttackPositionComponent");
		return ptr;
	}

};


// Class FSD.AudioFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UAudioFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AudioFunctionLibrary");
		return ptr;
	}


	static float SetSoundClassVolume(class USoundClass* SoundClass, float Volume);
	static float GetSoundClassVolume(class USoundClass* SoundClass);
};


// Class FSD.SoundClassWidget
// 0x0000 (0x0208 - 0x0208)
class USoundClassWidget : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SoundClassWidget");
		return ptr;
	}

};


// Class FSD.AutoCannon
// 0x00A8 (0x0730 - 0x0688)
class AAutoCannon : public AAmmoDrivenWeapon
{
public:
	struct FRuntimeFloatCurve                          FireRateCurve;                                            // 0x0688(0x0078) (CPF_Edit)
	float                                              FireTimeReductionScale;                                   // 0x0700(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FireTimeIncreaseScale;                                    // 0x0704(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DamageBonusAtFullROF;                                     // 0x0708(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               StatusEffectAtFullROF;                                    // 0x070C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x070D(0x0003) MISSED OFFSET
	float                                              FireTimeForMaxRateOfFireBonus;                            // 0x0710(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              StartLoopingSoundAt;                                      // 0x0714(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      StatusAtFullROF;                                          // 0x0718(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                WPN_Fire_3;                                               // 0x0720(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0728(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AutoCannon");
		return ptr;
	}


	void Server_SetStatusActive(bool IsActive);
};


// Class FSD.AutoCannonAnimInstance
// 0x0000 (0x0360 - 0x0360)
class UAutoCannonAnimInstance : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AutoCannonAnimInstance");
		return ptr;
	}

};


// Class FSD.AutoCarverComponent
// 0x0020 (0x0610 - 0x05F0)
class UAutoCarverComponent : public UStaticMeshComponent
{
public:
	float                                              Frequency;                                                // 0x05F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinDistanceMoved;                                         // 0x05F4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ECarveFilterType                                   Filter;                                                   // 0x05F8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x17];                                      // 0x05F9(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AutoCarverComponent");
		return ptr;
	}


	void ForceCarve();
};


// Class FSD.STLMeshCarverComponent
// 0x0010 (0x0250 - 0x0240)
class USTLMeshCarverComponent : public USceneComponent
{
public:
	class USTLMeshCarver*                              MeshCarver;                                               // 0x0240(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ECarveFilterType                                   Filter;                                                   // 0x0248(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0249(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.STLMeshCarverComponent");
		return ptr;
	}

};


// Class FSD.MeshCarverComponent
// 0x0010 (0x0600 - 0x05F0)
class UMeshCarverComponent : public UStaticMeshComponent
{
public:
	ECarveFilterType                                   Filter;                                                   // 0x05F0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x05F1(0x0003) MISSED OFFSET
	float                                              ExpensiveNoise;                                           // 0x05F4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x05F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MeshCarverComponent");
		return ptr;
	}


	void Carve();
};


// Class FSD.LevelGenerationCarverComponent
// 0x0020 (0x0260 - 0x0240)
class ULevelGenerationCarverComponent : public USceneComponent
{
public:
	class UStaticMesh*                                 ConvexCarver;                                             // 0x0240(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainMaterial*                            TerrainMaterial;                                          // 0x0248(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ECarveFilterType                                   Filter;                                                   // 0x0250(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0251(0x0003) MISSED OFFSET
	float                                              ConvexExpensiveNoise;                                     // 0x0254(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ECarveOptionsCellSize                              CarveCellSize;                                            // 0x0258(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0259(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LevelGenerationCarverComponent");
		return ptr;
	}

};


// Class FSD.InstantMeshCarver
// 0x0028 (0x0350 - 0x0328)
class AInstantMeshCarver : public AActor
{
public:
	class UStaticMeshComponent*                        CarvingMesh;                                              // 0x0328(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              CarvingMeshExpensiveNoise;                                // 0x0330(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ECarveOptionsCellSize                              CarvingMeshExpensiveNoiseCellSize;                        // 0x0334(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0335(0x0003) MISSED OFFSET
	class USTLMeshCarver*                              STLCarvingMesh;                                           // 0x0338(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainMaterial*                            TerrainMaterial;                                          // 0x0340(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ECarveFilterType                                   Filter;                                                   // 0x0348(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0349(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.InstantMeshCarver");
		return ptr;
	}

};


// Class FSD.RandomizedInstantMeshCarver
// 0x0038 (0x0360 - 0x0328)
class ARandomizedInstantMeshCarver : public AActor
{
public:
	TArray<class UStaticMesh*>                         CarvingMeshes;                                            // 0x0328(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst)
	TArray<class USTLMeshCarver*>                      STLCarvingMeshes;                                         // 0x0338(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	struct FRandRange                                  RandomScale;                                              // 0x0348(0x0008) (CPF_Edit)
	class UTerrainMaterial*                            TerrainMaterial;                                          // 0x0350(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ECarveFilterType                                   Filter;                                                   // 0x0358(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0359(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RandomizedInstantMeshCarver");
		return ptr;
	}

};


// Class FSD.CapacityBasedItemAggregator
// 0x0078 (0x0180 - 0x0108)
class UCapacityBasedItemAggregator : public UItemAggregator
{
public:
	struct FScriptMulticastDelegate                    OnCurrentAmountChanged;                                   // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMaxAmountChanged;                                       // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClipAndTotalChanged;                                    // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReloadTimeChanged;                                      // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReloadComplete;                                         // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReloadStarted;                                          // 0x0158(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMaxAmmoCapacityChanged;                                 // 0x0168(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	bool                                               showClipCount;                                            // 0x0178(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0179(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CapacityBasedItemAggregator");
		return ptr;
	}


	void ReloadStarted();
	void ReloadComplete();
	int GetMaxAmount();
	int GetCurrentAmount();
};


// Class FSD.AutoMinerAggregator
// 0x0008 (0x0188 - 0x0180)
class UAutoMinerAggregator : public UCapacityBasedItemAggregator
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0180(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AutoMinerAggregator");
		return ptr;
	}

};


// Class FSD.DualAnimatedItem
// 0x0058 (0x0450 - 0x03F8)
class ADualAnimatedItem : public AItem
{
public:
	class UAnimInstance*                               FPAnimInstance;                                           // 0x03F8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UPlayerAnimInstance*                         TPAnimInstance;                                           // 0x0400(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class USkeletalMeshComponent*                      FPRMesh;                                                  // 0x0408(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USkeletalMeshComponent*                      FPLMesh;                                                  // 0x0410(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USkeletalMeshComponent*                      TPRMesh;                                                  // 0x0418(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USkeletalMeshComponent*                      TPLMesh;                                                  // 0x0420(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UAnimMontage*                                FP_EquipAnimation;                                        // 0x0428(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                TP_EquipAnimation;                                        // 0x0430(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              EquipDuration;                                            // 0x0438(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x043C(0x0004) MISSED OFFSET
	class UItemCharacterAnimationSet*                  CharacterAnimationSet;                                    // 0x0440(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0448(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DualAnimatedItem");
		return ptr;
	}


	class USkeletalMeshComponent* GetRItemMesh();
	class USkeletalMeshComponent* GetLItemMesh();
};


// Class FSD.AutoMinerItem
// 0x0120 (0x0570 - 0x0450)
class AAutoMinerItem : public ADualAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0450(0x0018) MISSED OFFSET
	class UDamageComponent*                            DamageComponent;                                          // 0x0468(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UAudioComponent*                             AudioComponent;                                           // 0x0470(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UAutoMinerAggregator*                        Aggregator;                                               // 0x0478(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UAnimMontage*                                FPMineMontage;                                            // 0x0480(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                TPMineMontage;                                            // 0x0488(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                FPOverheat;                                               // 0x0490(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                TPOverheat;                                               // 0x0498(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                FPGunsling;                                               // 0x04A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                TPGunsling;                                               // 0x04A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FName                                       MiningSpeedAudioParamterName;                             // 0x04B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             DrillParticles;                                           // 0x04B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UForceFeedbackEffect*                        DrillRumble;                                              // 0x04C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BlockParticlesScaleFP;                                    // 0x04C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BlockParticlesScaleTP;                                    // 0x04CC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EAutoMiningState                                   State;                                                    // 0x04D0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x04D1(0x0003) MISSED OFFSET
	float                                              MovementPenalty;                                          // 0x04D4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MiningRate;                                               // 0x04D8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              HeatReductionPerKill;                                     // 0x04DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     CarveSize;                                                // 0x04E0(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CarveNoise;                                               // 0x04EC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CarverRayCastLength;                                      // 0x04F0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TimeToNextMine;                                           // 0x04F4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              CurrentDrillSpeed;                                        // 0x04F8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              DamageDistance;                                           // 0x04FC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DamageRadius;                                             // 0x0500(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FriendlyDamageRadius;                                     // 0x0504(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DamageRate;                                               // 0x0508(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Damage;                                                   // 0x050C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	float                                              ArmorDamageMultiplier;                                    // 0x0510(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0514(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0518(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	float                                              friendlyFireModifier;                                     // 0x0520(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	float                                              MaxFuel;                                                  // 0x0524(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Fuel;                                                     // 0x0528(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              FuelUsePerDig;                                            // 0x052C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FuelUsePerMelee;                                          // 0x0530(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0534(0x0004) MISSED OFFSET
	class UDialogDataAsset*                            ShoutOutOfFuel;                                           // 0x0538(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<struct FHitResult>                          HitCache;                                                 // 0x0540(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<struct FAutoMinerDamageItem>                DamageCache;                                              // 0x0550(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0560(0x0008) MISSED OFFSET
	bool                                               IsMining;                                                 // 0x0568(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsGunslinging;                                            // 0x0569(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x056A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AutoMinerItem");
		return ptr;
	}


	void Server_StopMining();
	void Server_StartMining();
	void Server_DoDamage(TArray<struct FAutoMinerDamageItem> Targets);
	void Server_DigBlock(const struct FVector_NetQuantize& Start, const struct FVector_NetQuantize& End);
	void OnTargetKilled(class AActor* Target, class UFSDPhysicalMaterial* PhysMat);
	void OnStopDrilling();
	void OnStartDrilling();
	void OnRep_SimulatingMining();
	void OnRep_IsGunslinging();
	void Client_Resupply(float percentage);
	void BP_OnDrillDamage();
	void All_SimulateDigDebris(const struct FVector_NetQuantize& Position, int DebrisIndex);
	void All_SimulateDigBlock(const struct FVector_NetQuantize& Position, bool spawnParticles, int Material);
	void All_SimulateDamage(TArray<struct FAutoMinerDamageItem> Targets);
};


// Class FSD.AutoMinerAnimInstance
// 0x0010 (0x0370 - 0x0360)
class UAutoMinerAnimInstance : public UAnimInstance
{
public:
	class AAutoMinerItem*                              Item;                                                     // 0x0360(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0368(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AutoMinerAnimInstance");
		return ptr;
	}

};


// Class FSD.WindowWidget
// 0x0008 (0x0210 - 0x0208)
class UWindowWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x5];                                       // 0x0208(0x0005) MISSED OFFSET
	bool                                               bHandleCloseCommand;                                      // 0x020D(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x020E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.WindowWidget");
		return ptr;
	}


	void ReceiveSelectPreviousCommand();
	void ReceiveSelectNextCommand();
	void ReceiveSelectCharacterCommand();
	void ReceiveOkCommand();
	void ReceiveCloseCommand();
	void OnShown();
	void OnNewTopWindow();
	void OnClosed();
	void ConsumeCommand();
	void CloseThisWindow();
};


// Class FSD.BarMenuWidget
// 0x0008 (0x0218 - 0x0210)
class UBarMenuWidget : public UWindowWidget
{
public:
	TWeakObjectPtr<class ASpaceRigBar>                 SpaceRigBar;                                              // 0x0210(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BarMenuWidget");
		return ptr;
	}

};


// Class FSD.EnemyPawn
// 0x0080 (0x0420 - 0x03A0)
class AEnemyPawn : public AFSDPawn
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x03A0(0x0018) MISSED OFFSET
	class UEnemyHealthComponent*                       Health;                                                   // 0x03B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UPawnStatsComponent*                         Stats;                                                    // 0x03C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UEnemyPawnAfflictionComponent*               affliction;                                               // 0x03C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UEnemyComponent*                             enemy;                                                    // 0x03D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FName                                       CenterMassSocketName;                                     // 0x03D8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FQueuedMontage                              QueuedMontage;                                            // 0x03E0(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FGameplayTagContainer                       GameplayTags;                                             // 0x03F0(0x0020) (CPF_Edit, CPF_BlueprintVisible)
	TArray<class UMaterialInterface*>                  CachedMaterials;                                          // 0x0410(0x0010) (CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyPawn");
		return ptr;
	}


	void OnRep_QueuedMontage();
	class USkeletalMeshComponent* GetMesh();
};


// Class FSD.BarnacleEnemy
// 0x00A0 (0x04C0 - 0x0420)
class ABarnacleEnemy : public AEnemyPawn
{
public:
	class USkeletalMeshComponent*                      SkeletalMesh;                                             // 0x0420(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              BiteDamage;                                               // 0x0428(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BitesPerSecond;                                           // 0x042C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxDistanceXY;                                            // 0x0430(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              GrapDistance;                                             // 0x0434(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              GrapDelay;                                                // 0x0438(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TentacleSpeed;                                            // 0x043C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TentacleRetractSpeed;                                     // 0x0440(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RetractDuration;                                          // 0x0444(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TentaclePullSpeed;                                        // 0x0448(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TentacleDropPlayerSpeed;                                  // 0x044C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TentacleDropGroundDistance;                               // 0x0450(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxDropPlayerDuration;                                    // 0x0454(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TentacleAttachOffset;                                     // 0x0458(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BiteDistance;                                             // 0x045C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RevivedGracePeriod;                                       // 0x0460(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0464(0x0004) MISSED OFFSET
	class UPawnAffliction*                             CaveLeechSenseAffliction;                                 // 0x0468(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              StateTime;                                                // 0x0470(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	EBarnacleState                                     State;                                                    // 0x0474(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0475(0x0003) MISSED OFFSET
	struct FVector_NetQuantize                         TentacleLocation;                                         // 0x0478(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_Transient)
	struct FVector_NetQuantize                         TentacleVelocity;                                         // 0x0484(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_Transient)
	TWeakObjectPtr<class AActor>                       Target;                                                   // 0x0490(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UHealthComponent*                            HealthTarget;                                             // 0x0498(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USplineMeshComponent*                        TentacleSpline;                                           // 0x04A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneComponent*                             TentacleHead;                                             // 0x04A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x04B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BarnacleEnemy");
		return ptr;
	}


	void OnRep_State();
	struct FVector GetTentacleTargetLocation();
	struct FVector GetMouthLocation();
	void Died(class UHealthComponentBase* HealthComponent);
	void Damaged(float Amount);
	void BP_OnTentacleLocationChanged(const struct FVector& Location);
	void BP_OnStateChanged(EBarnacleState NewState);
	void BP_OnBite(class UHealthComponent* TargetHealth);
};


// Class FSD.WeaponFireComponent
// 0x0040 (0x0130 - 0x00F0)
class UWeaponFireComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnWeaponFired;                                            // 0x00F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWeaponFireEnded;                                        // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	TScriptInterface<class UWeaponFireOwner>           Weapon;                                                   // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0128(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.WeaponFireComponent");
		return ptr;
	}


	void StopFire();
	void Server_SetShotPower(float shotPower);
	void Fire(const struct FVector& Origin, const struct FVector_NetQuantizeNormal& Direction);
};


// Class FSD.BasicWeaponFireComponent
// 0x0000 (0x0130 - 0x0130)
class UBasicWeaponFireComponent : public UWeaponFireComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BasicWeaponFireComponent");
		return ptr;
	}


	void Server_FireWeapon();
	void Server_EndFire();
	void All_WeaponFired();
};


// Class FSD.BeltDrivenWeapon
// 0x0030 (0x06B8 - 0x0688)
class ABeltDrivenWeapon : public AAmmoDrivenWeapon
{
public:
	class UAudioComponent*                             BarrelAudio;                                              // 0x0688(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USoundCue*                                   BarrelSound;                                              // 0x0690(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BarrelFadeIn;                                             // 0x0698(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BarrelFadeOut;                                            // 0x069C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UCurveFloat*                                 BarrelPitchCurve;                                         // 0x06A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BarrelSpinUpTime;                                         // 0x06A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BarrelSpinDownTime;                                       // 0x06AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CurrentSpinRate;                                          // 0x06B0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               Simulate_SpinBarrel;                                      // 0x06B4(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x06B5(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BeltDrivenWeapon");
		return ptr;
	}


	void Server_StopBarrel();
	void Server_StartBarrel();
};


// Class FSD.GatlingGun
// 0x0028 (0x06E0 - 0x06B8)
class AGatlingGun : public ABeltDrivenWeapon
{
public:
	float                                              DamageMultiplierAtMaxStabilization;                       // 0x06B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x06BC(0x0004) MISSED OFFSET
	class UParticleSystem*                             HotShellsTracerParticles;                                 // 0x06C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x06C8(0x0008) MISSED OFFSET
	float                                              HeatRemovedOnKill;                                        // 0x06D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               CriticalOverheatEnabled;                                  // 0x06D4(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               HotShellsOn;                                              // 0x06D5(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0xA];                                       // 0x06D6(0x000A) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GatlingGun");
		return ptr;
	}


	void Server_SetHotShellsOn(bool hotShellsIsOn);
	void OnRep_HotShellsTracerOn();
	void OnEnemyKilled(class AActor* Target, class UFSDPhysicalMaterial* PhysMat);
	void Client_RemoveHeat();
};


// Class FSD.BeltDrivenAnimInstance
// 0x0030 (0x0390 - 0x0360)
class UBeltDrivenAnimInstance : public UAnimInstance
{
public:
	bool                                               IsFiring;                                                 // 0x0360(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               Overheated;                                               // 0x0361(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0362(0x0002) MISSED OFFSET
	struct FVector                                     ExternalForce;                                            // 0x0364(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              ExternalForceScale;                                       // 0x0370(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0374(0x0004) MISSED OFFSET
	struct FName                                       ExternalForceBoneName;                                    // 0x0378(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0380(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BeltDrivenAnimInstance");
		return ptr;
	}

};


// Class FSD.Biome
// 0x02E8 (0x0318 - 0x0030)
class UBiome : public UDataAsset
{
public:
	struct FText                                       BiomeName;                                                // 0x0030(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       BiomeShortName;                                           // 0x0048(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       BiomeDescription;                                         // 0x0060(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FColor                                      BiomeColor;                                               // 0x0078(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                BiomeIndex;                                               // 0x007C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FString                                     BiomeAnalyticsIndex;                                      // 0x0080(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TSoftObjectPtr<class UTexture2D>                   BiomePicture;                                             // 0x0090(0x0028) (CPF_Edit)
	TSoftObjectPtr<class UTexture2D>                   BiomeIcon;                                                // 0x00B8(0x0028) (CPF_Edit)
	TSoftObjectPtr<class UTexture2D>                   BiomeWorldMap;                                            // 0x00E0(0x0028) (CPF_Edit)
	TSoftObjectPtr<class UClass>                       BiomeMapWidget;                                           // 0x0108(0x0028) (CPF_Edit)
	struct FRandRange                                  DepthRange;                                               // 0x0130(0x0008) (CPF_Edit)
	class UParticleSystem*                             AtmosphericParticles;                                     // 0x0138(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UClass*>                              CaveScriptComponents;                                     // 0x0140(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<class UDebrisSet*>                          Debris;                                                   // 0x0150(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TSoftObjectPtr<class UClass>                       DebrisActor;                                              // 0x0160(0x0028) (CPF_Edit)
	TArray<struct FBiomeDebrisInfluencerVariant>       DebrisInfluencerVariants;                                 // 0x0188(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TSoftObjectPtr<class UClass>                       PostProcessActorClass;                                    // 0x0198(0x0028) (CPF_Edit)
	class UTerrainMaterial*                            RockMaterial;                                             // 0x01C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainMaterial*                            DirtMaterial;                                             // 0x01C8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainMaterial*                            BurnedMaterialOverride;                                   // 0x01D0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<struct FBiomeNoiseItem>                     RoomNoises;                                               // 0x01D8(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UMissionStat*                                MissionCompleted;                                         // 0x01E8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          CeilingNoise;                                             // 0x01F0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDetailNoise*                                CeilingDetailNoise;                                       // 0x01F8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          WallNoise;                                                // 0x0200(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDetailNoise*                                WallDetailNoise;                                          // 0x0208(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          FloorNoise;                                               // 0x0210(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDetailNoise*                                FloorDetailNoise;                                         // 0x0218(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          PillarNoise;                                              // 0x0220(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDetailNoise*                                PillarDetailNoise;                                        // 0x0228(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UPillarSettings*                             PillarSettings;                                           // 0x0230(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UTunnelSetting*>                      TunnelSettings;                                           // 0x0238(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	class UFloodFillSettings*                          TunnelCeilingNoise;                                       // 0x0248(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          TunnelWallNoise;                                          // 0x0250(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          TunnelFloorNoise;                                         // 0x0258(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<struct FResourceSpawner>                    resources;                                                // 0x0260(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<class UEnemyDescriptor*>                    Enemies;                                                  // 0x0270(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UEnemyDescriptor*>                    StationaryEnemies;                                        // 0x0280(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UEnemyDescriptor*>                    Critters;                                                 // 0x0290(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TSoftObjectPtr<class USoundCue>                    AmbientSounds;                                            // 0x02A0(0x0028) (CPF_Edit)
	struct FReverbSettings                             ReverbSettings;                                           // 0x02C8(0x0020) (CPF_Edit)
	float                                              SmallCaveReverbRadius;                                    // 0x02E8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02EC(0x0004) MISSED OFFSET
	class UReverbEffect*                               SmallCaveReverb;                                          // 0x02F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MediumCaveReverbRadius;                                   // 0x02F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x02FC(0x0004) MISSED OFFSET
	class UReverbEffect*                               MediumCaveReverb;                                         // 0x0300(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              LargeCaveReverbRadius;                                    // 0x0308(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x030C(0x0004) MISSED OFFSET
	class UReverbEffect*                               LargeCaveReverb;                                          // 0x0310(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Biome");
		return ptr;
	}


	void PreloadAssets();
	TSoftObjectPtr<class UClass> GetDebrisActorSoftClass();
	class UTexture2D* GetBiomeWorldMap();
	class UTexture2D* GetBiomePicture();
	struct FText GetBiomeName();
	class UClass* GetBiomeMapWidget();
	int GetBiomeIndex();
	class UTexture2D* GetBiomeIcon();
	struct FString GetBiomeAnalyticsIndex();
	class USoundCue* GetAmbientSounds();
};


// Class FSD.BobbingComponent
// 0x0030 (0x0270 - 0x0240)
class UBobbingComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0240(0x0008) MISSED OFFSET
	class AActor*                                      OwnerActor;                                               // 0x0248(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              BobSpeed;                                                 // 0x0250(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BobSize;                                                  // 0x0254(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              OrentationChecksPerSecond;                                // 0x0258(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x025C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BobbingComponent");
		return ptr;
	}


	void SetOwner(class AActor* AActor);
};


// Class FSD.BoltActionWeapon
// 0x0070 (0x06F8 - 0x0688)
class ABoltActionWeapon : public AAmmoDrivenWeapon
{
public:
	class UDamageComponent*                            DamageComponent;                                          // 0x0688(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UHitscanBaseComponent*                       HitscanComponent;                                         // 0x0690(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              ZoomSpreadAmount;                                         // 0x0698(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ChargeSpeed;                                              // 0x069C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   ZoomedInAudio;                                            // 0x06A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ChargedFoVChange;                                         // 0x06A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ChargedFoVFadeSpeed;                                      // 0x06AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinCharge;                                                // 0x06B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              SlowMovementAtCharge;                                     // 0x06B4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FullChargeDamageBonus;                                    // 0x06B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AimedShotStaggerChance;                                   // 0x06BC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AimedWeakspotKilLRange;                                   // 0x06C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x14];                                      // 0x06C4(0x0014) MISSED OFFSET
	bool                                               IsMovementSlowed;                                         // 0x06D8(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x17];                                      // 0x06D9(0x0017) MISSED OFFSET
	bool                                               ChargeAffectsDamage;                                      // 0x06F0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               Charging;                                                 // 0x06F1(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x06F2(0x0002) MISSED OFFSET
	float                                              ChargeProgress;                                           // 0x06F4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BoltActionWeapon");
		return ptr;
	}


	void SetOverheated(bool IsOverheated);
	void Server_SetIsMovementSlowed(bool bisMovementSlowed);
	void OnTargetKilled(class AActor* Target, class UFSDPhysicalMaterial* PhysicalMaterial);
};


// Class FSD.BoltActionWeaponAnimInstance
// 0x0000 (0x0360 - 0x0360)
class UBoltActionWeaponAnimInstance : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BoltActionWeaponAnimInstance");
		return ptr;
	}

};


// Class FSD.Bomber
// 0x0170 (0x0768 - 0x05F8)
class ABomber : public AAFlyingBug
{
public:
	struct FScriptMulticastDelegate                    OnFirstBomberDeath;                                       // 0x05F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0608(0x000C) MISSED OFFSET
	float                                              RagdollForceModifier;                                     // 0x0614(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0618(0x0018) MISSED OFFSET
	class UParticleSystem*                             deathParticles;                                           // 0x0630(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class USoundBase*                                  deathSound;                                               // 0x0638(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class USoundBase*                                  DeathPanicSound;                                          // 0x0640(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              PanicAudioComponent;                                      // 0x0648(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	TWeakObjectPtr<class UParticleSystemComponent>     AcidEmitterL;                                             // 0x0650(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	TWeakObjectPtr<class UParticleSystemComponent>     AcidEmitterR;                                             // 0x0658(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0660(0x0004) MISSED OFFSET
	TWeakObjectPtr<class UParticleSystemComponent>     BleedParticlesComponent;                                  // 0x0664(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x066C(0x0004) MISSED OFFSET
	class UParticleSystem*                             BleedParticles;                                           // 0x0670(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               HasDied;                                                  // 0x0678(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0679(0x0003) MISSED OFFSET
	float                                              DeathYRotationSpeed;                                      // 0x067C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              DeathXRotationSpeed;                                      // 0x0680(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              SearchRange;                                              // 0x0684(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x30];                                      // 0x0688(0x0030) MISSED OFFSET
	class USoundBase*                                  BladderDestroyedNoise;                                    // 0x06B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class UArmorHealthDamageComponent*                 ArmorDamage;                                              // 0x06C0(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneComponent*                             LeftAcidSpot;                                             // 0x06C8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneComponent*                             RightAcidSpot;                                            // 0x06D0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               DieNormally;                                              // 0x06D8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               IsRightDestroyed;                                         // 0x06D9(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsLeftDestroyed;                                          // 0x06DA(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsSpinning;                                               // 0x06DB(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x06DC(0x0004) MISSED OFFSET
	float                                              NewPointMax;                                              // 0x06E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              NewPointMin;                                              // 0x06E4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              DeathSpeed;                                               // 0x06E8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              DeathAcceleration;                                        // 0x06EC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0x18];                                      // 0x06F0(0x0018) MISSED OFFSET
	class UClass*                                      AcidProjectile;                                           // 0x0708(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class USceneComponent*                             DropAcidLocation;                                         // 0x0710(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              AcidRate;                                                 // 0x0718(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x071C(0x0004) MISSED OFFSET
	class USoundBase*                                  AcidDropStartSound;                                       // 0x0720(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              StartSoundComponent;                                      // 0x0728(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USoundBase*                                  AcidDropLoopSound;                                        // 0x0730(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              LoopSoundComponent;                                       // 0x0738(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USoundBase*                                  AcidDropEndSound;                                         // 0x0740(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              EndSoundComponent;                                        // 0x0748(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0750(0x0004) MISSED OFFSET
	float                                              PostDeathAcidTime;                                        // 0x0754(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData10[0x8];                                       // 0x0758(0x0008) MISSED OFFSET
	bool                                               DropAcid;                                                 // 0x0760(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData11[0x7];                                       // 0x0761(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Bomber");
		return ptr;
	}


	void SetDropAcid(bool aDropAcid);
	void OnRep_DropAcid();
	void OnRep_Death();
	void OnBladderDamage(float Amount);
	void OnArmorDestroyed(const struct FName& Name);
	bool GetDropAcid();
	bool AreBladdersDestroyed();
};


// Class FSD.BomberAnimInstance
// 0x0010 (0x03E0 - 0x03D0)
class UBomberAnimInstance : public UFlyingBugAnimInstance
{
public:
	bool                                               IsBombing;                                                // 0x03D0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsSpiraling;                                              // 0x03D1(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0xE];                                       // 0x03D2(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BomberAnimInstance");
		return ptr;
	}

};


// Class FSD.BoscoAbillity
// 0x0038 (0x0068 - 0x0030)
class UBoscoAbillity : public UDataAsset
{
public:
	struct FName                                       AbillityName;                                             // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequenceBase*                           AbillityAnimation;                                        // 0x0038(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundBase*                                  VoiceOnUse;                                               // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EBoscoAbillityTargetPreference                     TargetType;                                               // 0x0048(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	float                                              Cooldown;                                                 // 0x004C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              WindUp;                                                   // 0x0050(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Duration;                                                 // 0x0054(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Range;                                                    // 0x0058(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RechargeTime;                                             // 0x005C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                MaxCharges;                                               // 0x0060(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               TargetActorIfValid;                                       // 0x0064(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               RotateTowardsTarget;                                      // 0x0065(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0066(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BoscoAbillity");
		return ptr;
	}

};


// Class FSD.BoscoSpawnActorAbillity
// 0x0008 (0x0070 - 0x0068)
class UBoscoSpawnActorAbillity : public UBoscoAbillity
{
public:
	class UClass*                                      SpawnedActorClass;                                        // 0x0068(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BoscoSpawnActorAbillity");
		return ptr;
	}

};


// Class FSD.BoscoProjectileAbillity
// 0x0008 (0x0070 - 0x0068)
class UBoscoProjectileAbillity : public UBoscoAbillity
{
public:
	class UClass*                                      projectileClass;                                          // 0x0068(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BoscoProjectileAbillity");
		return ptr;
	}

};


// Class FSD.Bosco
// 0x02F0 (0x0728 - 0x0438)
class ABosco : public ADeepPathfinderCharacter
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0438(0x0020) MISSED OFFSET
	class UHealthComponent*                            HealthComponent;                                          // 0x0458(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UBoscoAbillityComponent*                     AbillityComponent;                                        // 0x0460(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDamageComponent*                            Damage;                                                   // 0x0468(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDroneMiningToolBase*                        MiningTool;                                               // 0x0470(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDialogDataAsset*                            MineOrderShout;                                           // 0x0478(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            KillOrderShout;                                           // 0x0480(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            GoToOrderShout;                                           // 0x0488(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            ReviveOrderShout;                                         // 0x0490(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            ReviveThankShout;                                         // 0x0498(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            GeneralCallShout;                                         // 0x04A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            RocketAbillityShout;                                      // 0x04A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            CryoGrenadeAbillityShout;                                 // 0x04B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundBase*                                  MineResponse;                                             // 0x04B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class USoundBase*                                  CombatResponse;                                           // 0x04C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class USoundBase*                                  LightResponse;                                            // 0x04C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class USoundBase*                                  ReviveResponse;                                           // 0x04D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class USoundBase*                                  AbillityResponse;                                         // 0x04D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              ResponseTime;                                             // 0x04E0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04E4(0x0004) MISSED OFFSET
	class USoundBase*                                  CurrentResponse;                                          // 0x04E8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x04F0(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnReviveused;                                             // 0x04F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStateChanged;                                           // 0x0508(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSelfDestruct;                                           // 0x0518(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0528(0x0008) MISSED OFFSET
	class USoundBase*                                  AbillityErrorSound;                                       // 0x0530(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              INcreasedMiningArea;                                      // 0x0538(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x053C(0x0008) MISSED OFFSET
	float                                              TimeToResetMiningBoost;                                   // 0x0544(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MiningBoosMultiplier;                                     // 0x0548(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0xC];                                       // 0x054C(0x000C) MISSED OFFSET
	TArray<class UItemUpgrade*>                        upgrades;                                                 // 0x0558(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	class UBoscoProjectileAbillity*                    RocketAbillity;                                           // 0x0568(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UBoscoProjectileAbillity*                    CryoGrenadeAbillity;                                      // 0x0570(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0578(0x0004) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x057C(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x058C(0x0004) MISSED OFFSET
	class USkeletalMeshComponent*                      BSkeletalMesh;                                            // 0x0590(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UHitscanComponent*                           DroneHitScan;                                             // 0x0598(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UAudioComponent*                             MomentumSound;                                            // 0x05A0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UUpgradableBoscoComponent*                   Upgradable;                                               // 0x05A8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0x8];                                       // 0x05B0(0x0008) MISSED OFFSET
	class UAnimSequenceBase*                           SaluteAnimation;                                          // 0x05B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	TArray<class UAnimSequenceBase*>                   HitReaction;                                              // 0x05C0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance)
	unsigned char                                      UnknownData09[0x4];                                       // 0x05D0(0x0004) MISSED OFFSET
	float                                              SaluteDuration;                                           // 0x05D4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class UPointLightComponent*                        BPointLight;                                              // 0x05D8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USpotLightComponent*                         BSpotLight;                                               // 0x05E0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	TArray<struct FColor>                              LightColors;                                              // 0x05E8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance)
	struct FColor                                      currentLightColor;                                        // 0x05F8(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x05FC(0x0004) MISSED OFFSET
	TArray<class UBoscoAbillity*>                      CombatAbillities;                                         // 0x0600(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance)
	unsigned char                                      UnknownData11[0x4];                                       // 0x0610(0x0004) MISSED OFFSET
	float                                              MaxLightIntensity;                                        // 0x0614(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              MaxLightRadius;                                           // 0x0618(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              MinLightIntensity;                                        // 0x061C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              MinLightRadius;                                           // 0x0620(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              SecondsToChange;                                          // 0x0624(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData12[0x8];                                       // 0x0628(0x0008) MISSED OFFSET
	class AActor*                                      RotateTarget;                                             // 0x0630(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     LookAtLocation;                                           // 0x0638(0x000C) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsRotateMode;                                             // 0x0644(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0645(0x0003) MISSED OFFSET
	class USoundCue*                                   ShootSound;                                               // 0x0648(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              ShootSoundFadeout;                                        // 0x0650(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0654(0x0004) MISSED OFFSET
	class USoundCue*                                   ShootSoundTail;                                           // 0x0658(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAudioComponent*                             ShootSoundInstance;                                       // 0x0660(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UParticleSystem*                             MuzzleEffect;                                             // 0x0668(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class UParticleSystem*                             TracerEffect;                                             // 0x0670(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              FireRate;                                                 // 0x0678(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	int                                                MinShotsInBurst;                                          // 0x067C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	int                                                MaxShotsInBurst;                                          // 0x0680(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              MaxRandomBurstCooldown;                                   // 0x0684(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              MinRandomBurstCooldown;                                   // 0x0688(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              MaxFiringAngle;                                           // 0x068C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData15[0x38];                                      // 0x0690(0x0038) MISSED OFFSET
	float                                              MaxEngagementRange;                                       // 0x06C8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              MinTracerDistance;                                        // 0x06CC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              TracerSpeed;                                              // 0x06D0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData16[0x4];                                       // 0x06D4(0x0004) MISSED OFFSET
	bool                                               IsFiring;                                                 // 0x06D8(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData17[0x7];                                       // 0x06D9(0x0007) MISSED OFFSET
	class USoundBase*                                  ReviveSirens;                                             // 0x06E0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              ReviveSirensComponent;                                    // 0x06E8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	int                                                MaxRevives;                                               // 0x06F0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              DistanceToFacePlayer;                                     // 0x06F4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              RotationSpeed;                                            // 0x06F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              PrepareToMineRange;                                       // 0x06FC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              MiningRange;                                              // 0x0700(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              MiningRate;                                               // 0x0704(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData18[0x4];                                       // 0x0708(0x0004) MISSED OFFSET
	bool                                               IsInRangeToMine;                                          // 0x070C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsPreparedToMine;                                         // 0x070D(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsMining;                                                 // 0x070E(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsReviving;                                               // 0x070F(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData19[0x8];                                       // 0x0710(0x0008) MISSED OFFSET
	class ABoscoController*                            DroneController;                                          // 0x0718(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	EDroneAIState                                      CurrentState;                                             // 0x0720(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData20[0x7];                                       // 0x0721(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Bosco");
		return ptr;
	}


	void UseABillity();
	void StartSelfDestruct();
	void SetMovementAudio(class UAudioComponent* aSound);
	void SetIsReviving(bool aIsReviving);
	void ReviveCounterChanged(int RemainingCharges);
	void OnWeaponFired(const struct FHitResult& aHitResult);
	void OnRep_State(EDroneAIState prevState);
	void OnReadyToShoot();
	void OnPlayerSalute();
	void OnNotReadyToShoot();
	void OnHit(float Amount, float BaseAmount, class UPrimitiveComponent* Component, class UFSDPhysicalMaterial* PhysMat, const struct FName& BoneName);
	void MineEffects(class UTerrainMaterial* aTerrainMaterial, const struct FVector_NetQuantize& aLocation, const struct FRotator& aRotation);
	class UUpgradableBoscoComponent* GetUpgradeComponent();
	int GetReviveCharges();
	class UBoscoAbillityComponent* GetPlayerAbillity();
	EDroneAIState GetCurrentState();
	void FireEffects(const struct FVector& aFireDirection);
};


// Class FSD.BoscoAnimInstance
// 0x0030 (0x0390 - 0x0360)
class UBoscoAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0360(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnWeaponsNotReady;                                        // 0x0368(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference)
	float                                              DigAnimPlayRate;                                          // 0x0378(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	EDroneAIState                                      CurrentState;                                             // 0x037C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsReadyToMine;                                            // 0x037D(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsMining;                                                 // 0x037E(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsFiring;                                                 // 0x037F(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsReviving;                                               // 0x0380(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0381(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BoscoAnimInstance");
		return ptr;
	}

};


// Class FSD.BoscoWeaponsFoldedOutNotify
// 0x0000 (0x0038 - 0x0038)
class UBoscoWeaponsFoldedOutNotify : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BoscoWeaponsFoldedOutNotify");
		return ptr;
	}

};


// Class FSD.BoscoWeaponsFoldedInNotify
// 0x0000 (0x0038 - 0x0038)
class UBoscoWeaponsFoldedInNotify : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BoscoWeaponsFoldedInNotify");
		return ptr;
	}

};


// Class FSD.BoscoAbillityComponent
// 0x00A0 (0x0190 - 0x00F0)
class UBoscoAbillityComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnAbillityChargeProgress;                                 // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAbillityChargeUsed;                                     // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	TArray<class UItemUpgrade*>                        upgrades;                                                 // 0x0110(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0120(0x0010) MISSED OFFSET
	class UClass*                                      projectileClass;                                          // 0x0130(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UAnimSequenceBase*                           Animation;                                                // 0x0138(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class USoundBase*                                  VoiceOnUse;                                               // 0x0140(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TWeakObjectPtr<class AActor>                       Target;                                                   // 0x0148(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TWeakObjectPtr<class ABosco>                       AbillityOwner;                                            // 0x0150(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x38];                                      // 0x0158(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BoscoAbillityComponent");
		return ptr;
	}


	int GetMaxCharges();
	int GetCharges();
};


// Class FSD.FSDAIController
// 0x0018 (0x0450 - 0x0438)
class AFSDAIController : public AAIController
{
public:
	struct FScriptMulticastDelegate                    OnMessageBehaviorTreeEvent;                               // 0x0438(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	int                                                LOSTraceChannel;                                          // 0x0448(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x044C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDAIController");
		return ptr;
	}


	void SetAlerted(bool isAlerted);
	void RegisterBlackboardChanges(const struct FName& Key);
	void Recieve_BlackboardValueChanged(const struct FName& KeyName);
	bool GetIsAlerted();
};


// Class FSD.BoscoController
// 0x0140 (0x0590 - 0x0450)
class ABoscoController : public AFSDAIController
{
public:
	class UBehaviorTree*                               BehaviourTree;                                            // 0x0450(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              CheckOutOfTheWayInterval;                                 // 0x0458(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x045C(0x0005) MISSED OFFSET
	bool                                               IgnoreRock;                                               // 0x0461(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0462(0x0002) MISSED OFFSET
	float                                              DistCountAsSameHit;                                       // 0x0464(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0xB0];                                      // 0x0468(0x00B0) MISSED OFFSET
	float                                              SearchForEnemiesInterval;                                 // 0x0518(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x051C(0x0004) MISSED OFFSET
	float                                              SaluteDelay;                                              // 0x0520(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0524(0x0004) MISSED OFFSET
	float                                              SaluteCooldown;                                           // 0x0528(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x052C(0x0004) MISSED OFFSET
	float                                              CheckGraberInterval;                                      // 0x0530(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0534(0x0004) MISSED OFFSET
	float                                              ReviveHealthPercentage;                                   // 0x0538(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0xC];                                       // 0x053C(0x000C) MISSED OFFSET
	TWeakObjectPtr<class ABosco>                       BoscoUnit;                                                // 0x0548(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<TWeakObjectPtr<class APlayerCharacter>>     ControllingPlayers;                                       // 0x0550(0x0010) (CPF_ZeroConstructor)
	unsigned char                                      UnknownData08[0x1C];                                      // 0x0560(0x001C) MISSED OFFSET
	TWeakObjectPtr<class AGem>                         gemActor;                                                 // 0x057C(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData09[0xC];                                       // 0x0584(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BoscoController");
		return ptr;
	}


	void ReviveTarget();
	void RegisterPlayer(class APlayerCharacter* APlayerCharacter);
	void OnSecondaryLaserPointer(class AActor* aTarget, const struct FVector& aLocation);
	void OnPlayerShout(class APlayerCharacter* APlayerCharacter);
	void OnPlayerSalute();
	void OnPlayerLeave(class AFSDPlayerState* APlayerState);
	void OnLaserPointer(class AActor* aTarget, ELaserPointerTargetType aROI, const struct FVector& aMineLocation, class AActor* AGem);
	void OnKilledEnemy(class UHealthComponentBase* HealthComponent);
	void OnJobFinished();
	struct FVector GetPointNearPlayers();
	void GenerateNewRelativeLocation(class AActor* aTarget, const struct FVector& aLocation, float aRange, float aHeightRestriction, float aMinRange, bool aTryToStayOutOfTheWay, bool aStayBehind);
};


// Class FSD.BoxFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UBoxFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BoxFunctionLibrary");
		return ptr;
	}


	static struct FCoreUObject_FBox CreateBoxAt(const struct FVector& Location, const struct FVector& Size);
	static struct FVector ClosestPointToBox(const struct FVector& Pos, const struct FCoreUObject_FBox& Box);
	static float BoxSize(const struct FCoreUObject_FBox& Box);
	static struct FVector BoxExtends(const struct FCoreUObject_FBox& Box);
	static struct FVector BoxCenter(const struct FCoreUObject_FBox& Box);
};


// Class FSD.GenerationComponent
// 0x0000 (0x0560 - 0x0560)
class UGenerationComponent : public UPrimitiveComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GenerationComponent");
		return ptr;
	}

};


// Class FSD.BoxGenerationComponent
// 0x0020 (0x0580 - 0x0560)
class UBoxGenerationComponent : public UGenerationComponent
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0560(0x0004) MISSED OFFSET
	bool                                               IsCarver;                                                 // 0x0564(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0565(0x0003) MISSED OFFSET
	float                                              NoiseRange;                                               // 0x0568(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               Visible;                                                  // 0x056C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x056D(0x0003) MISSED OFFSET
	class UFloodFillSettings*                          Noise;                                                    // 0x0570(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0578(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BoxGenerationComponent");
		return ptr;
	}

};


// Class FSD.GenerationItem
// 0x0008 (0x0330 - 0x0328)
class AGenerationItem : public AActor
{
public:
	bool                                               Visible;                                                  // 0x0328(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               AddToLevel;                                               // 0x0329(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x032A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GenerationItem");
		return ptr;
	}

};


// Class FSD.BoxGenerationItem
// 0x0008 (0x0338 - 0x0330)
class ABoxGenerationItem : public AGenerationItem
{
public:
	class UBoxGenerationComponent*                     BoxComponent;                                             // 0x0330(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BoxGenerationItem");
		return ptr;
	}

};


// Class FSD.BTDecorator_CanSeeTarget
// 0x0040 (0x00A8 - 0x0068)
class UBTDecorator_CanSeeTarget : public UBTDecorator
{
public:
	bool                                               UseAsync;                                                 // 0x0068(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	float                                              MaxRange;                                                 // 0x006C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     EyeLocationOffset;                                        // 0x0070(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	struct FBlackboardKeySelector                      TargetKey;                                                // 0x0080(0x0028) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTDecorator_CanSeeTarget");
		return ptr;
	}

};


// Class FSD.BTDecorator_InRange
// 0x0010 (0x00A0 - 0x0090)
class UBTDecorator_InRange : public UBTDecorator_BlackboardBase
{
public:
	float                                              MinRange;                                                 // 0x0090(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxRange;                                                 // 0x0094(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EFAIDistanceType                                   GeometricDistanceType;                                    // 0x0098(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTDecorator_InRange");
		return ptr;
	}

};


// Class FSD.BTDecorator_InRangeBB
// 0x0058 (0x00E8 - 0x0090)
class UBTDecorator_InRangeBB : public UBTDecorator_BlackboardBase
{
public:
	struct FBlackboardKeySelector                      MinRangeKey;                                              // 0x0090(0x0028) (CPF_Edit)
	struct FBlackboardKeySelector                      MaxRangeKey;                                              // 0x00B8(0x0028) (CPF_Edit)
	EFAIDistanceType                                   GeometricDistanceType;                                    // 0x00E0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00E1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTDecorator_InRangeBB");
		return ptr;
	}

};


// Class FSD.BTDecorator_RandomCooldown
// 0x0008 (0x0070 - 0x0068)
class UBTDecorator_RandomCooldown : public UBTDecorator
{
public:
	struct FRandRange                                  CoolDownTime;                                             // 0x0068(0x0008) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTDecorator_RandomCooldown");
		return ptr;
	}

};


// Class FSD.BTDecorator_SharedCooldown
// 0x0030 (0x0098 - 0x0068)
class UBTDecorator_SharedCooldown : public UBTDecorator
{
public:
	struct FRandRange                                  CoolDownTime;                                             // 0x0068(0x0008) (CPF_Edit)
	struct FBlackboardKeySelector                      CooldownKey;                                              // 0x0070(0x0028) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTDecorator_SharedCooldown");
		return ptr;
	}

};


// Class FSD.BTDecorator_SharedAttackCooldown
// 0x0030 (0x0098 - 0x0068)
class UBTDecorator_SharedAttackCooldown : public UBTDecorator
{
public:
	struct FRandRange                                  CoolDownTime;                                             // 0x0068(0x0008) (CPF_Edit)
	struct FBlackboardKeySelector                      CooldownKey;                                              // 0x0070(0x0028) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTDecorator_SharedAttackCooldown");
		return ptr;
	}

};


// Class FSD.BTService_FindPlayer
// 0x0030 (0x00A0 - 0x0070)
class UBTService_FindPlayer : public UBTService
{
public:
	struct FBlackboardKeySelector                      TargetKey;                                                // 0x0070(0x0028) (CPF_Edit)
	bool                                               MustBeAlive;                                              // 0x0098(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               SwithToBetterTargets;                                     // 0x0099(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               RegisterForPositioning;                                   // 0x009A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsFlying;                                                 // 0x009B(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x009C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTService_FindPlayer");
		return ptr;
	}

};


// Class FSD.BTService_SetStance
// 0x0030 (0x00A0 - 0x0070)
class UBTService_SetStance : public UBTService
{
public:
	struct FBlackboardKeySelector                      TargetLocationKey;                                        // 0x0070(0x0028) (CPF_Edit)
	float                                              distance;                                                 // 0x0098(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x009C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTService_SetStance");
		return ptr;
	}

};


// Class FSD.BTService_UpdateMoveToTarget
// 0x0058 (0x00C8 - 0x0070)
class UBTService_UpdateMoveToTarget : public UBTService
{
public:
	struct FBlackboardKeySelector                      TargetKey;                                                // 0x0070(0x0028) (CPF_Edit)
	struct FBlackboardKeySelector                      TargetLocationKey;                                        // 0x0098(0x0028) (CPF_Edit)
	float                                              LookAheadTime;                                            // 0x00C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              VerticalOffset;                                           // 0x00C4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTService_UpdateMoveToTarget");
		return ptr;
	}

};


// Class FSD.BTService_UpdateFlyingMoveToTarget
// 0x0058 (0x00C8 - 0x0070)
class UBTService_UpdateFlyingMoveToTarget : public UBTService
{
public:
	struct FBlackboardKeySelector                      TargetKey;                                                // 0x0070(0x0028) (CPF_Edit)
	struct FBlackboardKeySelector                      TargetLocationKey;                                        // 0x0098(0x0028) (CPF_Edit)
	float                                              LookAheadTime;                                            // 0x00C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTService_UpdateFlyingMoveToTarget");
		return ptr;
	}

};


// Class FSD.BTService_UpdateMoveInFormation
// 0x0038 (0x00A8 - 0x0070)
class UBTService_UpdateMoveInFormation : public UBTService
{
public:
	float                                              LookAheadTime;                                            // 0x0070(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	struct FBlackboardKeySelector                      TargetLocationKey;                                        // 0x0078(0x0028) (CPF_Edit)
	float                                              AttackerRadius;                                           // 0x00A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTService_UpdateMoveInFormation");
		return ptr;
	}

};


// Class FSD.BTTask_FakePhysicsMove
// 0x0030 (0x00C8 - 0x0098)
class UBTTask_FakePhysicsMove : public UBTTask_BlackboardBase
{
public:
	float                                              MinTime;                                                  // 0x0098(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              EndMaxSpeed;                                              // 0x009C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     InitialLocalVelocity;                                     // 0x00A0(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     InitialGlobalVelocity;                                    // 0x00AC(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               EndRequireSolidGround;                                    // 0x00B8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET
	class UFakeMoverSettings*                          MoveSettings;                                             // 0x00C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTTask_FakePhysicsMove");
		return ptr;
	}

};


// Class FSD.BTTask_FindPointNearCeiling
// 0x0010 (0x00A8 - 0x0098)
class UBTTask_FindPointNearCeiling : public UBTTask_BlackboardBase
{
public:
	float                                              CloseToCeilingBias;                                       // 0x0098(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              LookForCeilingLength;                                     // 0x009C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              SearchRadius;                                             // 0x00A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTTask_FindPointNearCeiling");
		return ptr;
	}

};


// Class FSD.BTTask_MoveToTarget
// 0x0008 (0x00A0 - 0x0098)
class UBTTask_MoveToTarget : public UBTTask_BlackboardBase
{
public:
	float                                              AcceptableRadius;                                         // 0x0098(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x009C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTTask_MoveToTarget");
		return ptr;
	}

};


// Class FSD.BTTask_SetAttacking
// 0x0000 (0x0098 - 0x0098)
class UBTTask_SetAttacking : public UBTTask_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTTask_SetAttacking");
		return ptr;
	}

};


// Class FSD.BTTask_TriggerAI
// 0x0008 (0x0078 - 0x0070)
class UBTTask_TriggerAI : public UBTTaskNode
{
public:
	struct FName                                       TriggerName;                                              // 0x0070(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTTask_TriggerAI");
		return ptr;
	}

};


// Class FSD.BTTask_MessageAI
// 0x0008 (0x0078 - 0x0070)
class UBTTask_MessageAI : public UBTTaskNode
{
public:
	struct FName                                       MessageName;                                              // 0x0070(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BTTask_MessageAI");
		return ptr;
	}

};


// Class FSD.CalldownItem
// 0x0060 (0x04A8 - 0x0448)
class ACalldownItem : public AAnimatedItem
{
public:
	class UClass*                                      ItemPlacerClass;                                          // 0x0448(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      SupplyPodClass;                                           // 0x0450(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UResourceData*                               ResouceRequired;                                          // 0x0458(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FText                                       OrderDescription;                                         // 0x0460(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       LogText;                                                  // 0x0478(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	class UClass*                                      ResupplyBeacon;                                           // 0x0490(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UItemPlacerAggregator*                       ItemPlacerInstance;                                       // 0x0498(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              Cooldown;                                                 // 0x04A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CooldownRemaining;                                        // 0x04A4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CalldownItem");
		return ptr;
	}


	void Server_Call_Resupply(const struct FVector& Location);
};


// Class FSD.CampaignManager
// 0x0038 (0x0060 - 0x0028)
class UCampaignManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	class UClass*                                      MainCampaign;                                             // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UClass*>                              WeeklyCampaigns;                                          // 0x0038(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UClass*>                              SideCampaigns;                                            // 0x0048(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UCampaign*                                   ActiveCampaign;                                           // 0x0058(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CampaignManager");
		return ptr;
	}


	void StartNewCampaign(class UClass* campaignClass, class UFSDSaveGame* SaveGame);
	void SkipMainCampaign(class AFSDPlayerController* Player);
	bool IsWeeklyCampaignCompleted(class UObject* WorldContext);
	bool IsInCampaignMission(class AFSDPlayerController* Player);
	bool IsCampaignMission(class UObject* WorldContextObject, class UGeneratedMission* Mission);
	bool IsActiveCampaign(class UCampaign* Campaign);
	TArray<class UClass*> GetUncompletedCampaigns(class AFSDPlayerController* Player);
	class UGeneratedMission* GetCampaingMissionFromSeeds(class UObject* WorldContextObject, int GlobalSeed, int MissionSeed);
	class UGeneratedMission* GetCampaingMission(TArray<class UGeneratedMission*> missions, int MissionSeed);
	void AbortActiveCampaign(class UFSDSaveGame* SaveGame);
};


// Class FSD.Campaign
// 0x0138 (0x0160 - 0x0028)
class UCampaign : public UObject
{
public:
	TArray<class UCampaignMission*>                    missions;                                                 // 0x0028(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<class UCampaignRequirement*>                Requirements;                                             // 0x0038(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TSoftObjectPtr<class UClass>                       RequiredCharacter;                                        // 0x0048(0x0028) (CPF_Edit)
	int                                                Progress;                                                 // 0x0070(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FGuid                                       SavegameID;                                               // 0x0074(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               CanAbort;                                                 // 0x0084(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               CanSkip;                                                  // 0x0085(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0086(0x0002) MISSED OFFSET
	ECampaignMutators                                  Mutators;                                                 // 0x0088(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0086(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData02[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	struct FText                                       TitlePrefix;                                              // 0x0090(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       Title;                                                    // 0x00A8(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       DescriptionHeader;                                        // 0x00C0(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       Description;                                              // 0x00D8(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       RewardText;                                               // 0x00F0(0x0018) (CPF_Edit, CPF_BlueprintVisible)
	struct FText                                       RewardFlavorText;                                         // 0x0108(0x0018) (CPF_Edit, CPF_BlueprintVisible)
	class UTexture2D*                                  Icon;                                                     // 0x0120(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TSoftObjectPtr<class UTexture2D>                   Picture;                                                  // 0x0128(0x0028) (CPF_Edit)
	bool                                               IsWeeklyCampaing;                                         // 0x0150(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0151(0x0007) MISSED OFFSET
	class UMissionStat*                                CampaignCompletedMissionStat;                             // 0x0158(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Campaign");
		return ptr;
	}


	bool StartSOLOMission(class UObject* WorldContextObject);
	bool IsComplete();
	static bool IsCampaignComplete(class UObject* WorldContext, class UClass* Campaign);
	class UClass* GetRequiredCharacter();
	static class UCampaign* GetReference(class UClass* Campaign);
	class UCampaignMission* GetPreviousMission();
	class UTexture2D* GetPicture();
	static struct FText GetCampaignTitle(class UClass* Campaign);
	class UCampaignMission* GetActiveMission();
	bool CanStartCampaign(class AFSDPlayerController* Player);
};


// Class FSD.CampaignMission
// 0x0040 (0x0070 - 0x0030)
class UCampaignMission : public UDataAsset
{
public:
	class UPlanetZone*                                 PlanetZone;                                               // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRequiredMissionItem                        Mission;                                                  // 0x0038(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UReward*>                             Rewards;                                                  // 0x0050(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	class UDialogDataAsset*                            MissionCompleteShout;                                     // 0x0060(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               SoloOnly;                                                 // 0x0068(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CampaignMission");
		return ptr;
	}


	class UMissionTemplate* GetMissionTemplate();
};


// Class FSD.CampaignRequirement
// 0x0000 (0x0028 - 0x0028)
class UCampaignRequirement : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CampaignRequirement");
		return ptr;
	}

};


// Class FSD.CaracterLevelCampaignRequirement
// 0x0010 (0x0038 - 0x0028)
class UCaracterLevelCampaignRequirement : public UCampaignRequirement
{
public:
	class UPlayerCharacterID*                          characterID;                                              // 0x0028(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                LevelRequirement;                                         // 0x0030(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CaracterLevelCampaignRequirement");
		return ptr;
	}

};


// Class FSD.PlayerRankCampaignRequirement
// 0x0008 (0x0030 - 0x0028)
class UPlayerRankCampaignRequirement : public UCampaignRequirement
{
public:
	int                                                RankRequirement;                                          // 0x0028(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerRankCampaignRequirement");
		return ptr;
	}

};


// Class FSD.RetirementCampaignRequirement
// 0x0010 (0x0038 - 0x0028)
class URetirementCampaignRequirement : public UCampaignRequirement
{
public:
	class UPlayerCharacterID*                          characterID;                                              // 0x0028(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                LevelRequirement;                                         // 0x0030(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RetirementCampaignRequirement");
		return ptr;
	}

};


// Class FSD.WeeklyTimerCampaignRequirement
// 0x0000 (0x0028 - 0x0028)
class UWeeklyTimerCampaignRequirement : public UCampaignRequirement
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.WeeklyTimerCampaignRequirement");
		return ptr;
	}


	struct FTimespan GetWeeklyTimeLeft(class AFSDPlayerController* Player);
	struct FTimespan GetTimeUntillNewCampaign(class AFSDPlayerController* Player);
	bool GetHasCompleted(class AFSDPlayerController* Player);
};


// Class FSD.CapacityHoldingItemAggregator
// 0x0018 (0x0198 - 0x0180)
class UCapacityHoldingItemAggregator : public UCapacityBasedItemAggregator
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0180(0x0010) MISSED OFFSET
	int                                                MaxAmmo;                                                  // 0x0190(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                AmmoCount;                                                // 0x0194(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CapacityHoldingItemAggregator");
		return ptr;
	}


	void UseAmmo(int Count);
	void SetMaxAmmo(int InMaxAmmo, bool InChangeCurrentAmount);
	void Resupply(float percentage);
	void OnRep_MaxAmmo();
	void OnRep_AmmoCount();
	void AddAmmo(int Amount);
};


// Class FSD.CappedResource
// 0x0050 (0x0078 - 0x0028)
class UCappedResource : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnChanged;                                                // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIncreased;                                              // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFull;                                                   // 0x0048(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UResourceData*                               Data;                                                     // 0x0058(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              currentAmount;                                            // 0x0060(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxAmount;                                                // 0x0064(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TotalCollected;                                           // 0x0068(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                FullFlag;                                                 // 0x006C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0070(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CappedResource");
		return ptr;
	}


	float TransferAll(class UCappedResource* Receiver);
	float Transfer(float Amount, class UCappedResource* Receiver);
	void OnRep_FullFlag(int OldValue);
	void OnRep_CurrentAmount(float OldAmount);
	bool IsObjectiveResource(class UObject* WorldContext, bool* IsCompleted);
	bool IsFull();
	bool IsEmpty();
	bool IsCraftingResource();
	struct FText GetTitle();
	struct FColor GetColor();
	float GetCapacityPct();
	float Deduct(float Amount);
	float Add(float Amount);
};


// Class FSD.UsableComponentBase
// 0x0028 (0x0118 - 0x00F0)
class UUsableComponentBase : public UActorComponent
{
public:
	float                                              UseCooldown;                                              // 0x00F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               MustBeGroundedToUse;                                      // 0x00F4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F5(0x0003) MISSED OFFSET
	class UUseAnimationSetting*                        AnimationSettings;                                        // 0x00F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                Priority;                                                 // 0x0100(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	class USceneComponent*                             RestrictToCollider;                                       // 0x0108(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	EUseRestriction                                    UseRestrictionAllowance;                                  // 0x0110(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0111(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.UsableComponentBase");
		return ptr;
	}


	struct FText GetUseText(class APlayerCharacter* user);
	bool GetHideProgressBar(class APlayerCharacter* user);
	bool GetHideActionText(class APlayerCharacter* user);
};


// Class FSD.UsableComponent
// 0x0028 (0x0140 - 0x0118)
class UUsableComponent : public UUsableComponentBase
{
public:
	class UDialogDataAsset*                            ShoutBegin;                                               // 0x0118(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FText                                       UseText;                                                  // 0x0120(0x0018) (CPF_Edit)
	bool                                               ResetOnFail;                                              // 0x0138(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0139(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.UsableComponent");
		return ptr;
	}


	void SetUseText(const struct FText& NewText);
	bool HasDuration();
};


// Class FSD.InstantUsable
// 0x0030 (0x0170 - 0x0140)
class UInstantUsable : public UUsableComponent
{
public:
	struct FScriptMulticastDelegate                    OnUsedBy;                                                 // 0x0140(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUsableChanged;                                          // 0x0150(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class USoundCue*                                   AudioCompletedUse;                                        // 0x0160(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               Usable;                                                   // 0x0168(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0169(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.InstantUsable");
		return ptr;
	}


	void SetCanUse(bool canUse);
	void OnRep_Usable();
};


// Class FSD.CarriableInstantUsable
// 0x0000 (0x0170 - 0x0170)
class UCarriableInstantUsable : public UInstantUsable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CarriableInstantUsable");
		return ptr;
	}

};


// Class FSD.CarriableComponent
// 0x0030 (0x0120 - 0x00F0)
class UCarriableComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnPickedUp;                                               // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDropped;                                                // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class APlayerCharacter*                            CarriedBy;                                                // 0x0110(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	EUseRestriction                                    UseRestriction;                                           // 0x0118(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0119(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CarriableComponent");
		return ptr;
	}


	void PickupItem(class APlayerCharacter* byCharacter);
	void OnRep_CarriedBy();
	void DropItem();
};


// Class FSD.CaveEntranceComponent
// 0x0000 (0x0560 - 0x0560)
class UCaveEntranceComponent : public UPrimitiveComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CaveEntranceComponent");
		return ptr;
	}

};


// Class FSD.CaveEntrance
// 0x0010 (0x0340 - 0x0330)
class ACaveEntrance : public AGenerationItem
{
public:
	class UCaveEntranceComponent*                      CaveEntranceComponent;                                    // 0x0330(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	ECaveEntranceType                                  EntranceType;                                             // 0x0338(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               HasBeenConverted;                                         // 0x0339(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x033A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CaveEntrance");
		return ptr;
	}

};


// Class FSD.SpawnActorItem
// 0x0030 (0x0360 - 0x0330)
class ASpawnActorItem : public AGenerationItem
{
public:
	class UClass*                                      ActorToSpawn;                                             // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EItemAdjustmentType                                Adjustment;                                               // 0x0338(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0339(0x0003) MISSED OFFSET
	struct FVector                                     ScaleMin;                                                 // 0x033C(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     ScaleMax;                                                 // 0x0348(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRotator                                    RotationDelta;                                            // 0x0354(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SpawnActorItem");
		return ptr;
	}

};


// Class FSD.SubRoomItem
// 0x0010 (0x0340 - 0x0330)
class ASubRoomItem : public AGenerationItem
{
public:
	class URoomGenerator*                              RoomGenerator;                                            // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                Layer;                                                    // 0x0338(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x033C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SubRoomItem");
		return ptr;
	}

};


// Class FSD.DropPodCalldownLocationItem
// 0x0008 (0x0338 - 0x0330)
class ADropPodCalldownLocationItem : public AGenerationItem
{
public:
	class UClass*                                      CalldownClass;                                            // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DropPodCalldownLocationItem");
		return ptr;
	}

};


// Class FSD.ProceduralSetup
// 0x0248 (0x0570 - 0x0328)
class AProceduralSetup : public AActor
{
public:
	bool                                               ShowRoomEntrances;                                        // 0x0328(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ShowPathObstacles;                                        // 0x0329(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ShowItemNoisePattern;                                     // 0x032A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x032B(0x0001) MISSED OFFSET
	int                                                Seed;                                                     // 0x032C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0330(0x0004) MISSED OFFSET
	struct FRandomStream                               RandomStream;                                             // 0x0334(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient)
	struct FRandomStream                               RandomStreamServer;                                       // 0x033C(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient)
	struct FRandomStream                               RandomStreamAsync;                                        // 0x0344(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient)
	struct FRandomStream                               RandomStreamAsyncServer;                                  // 0x034C(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0354(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnEncounterSpawnedEvent;                                  // 0x0358(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference)
	unsigned char                                      UnknownData03[0x68];                                      // 0x0368(0x0068) MISSED OFFSET
	class ADeepCSGWorld*                               CSGWorld;                                                 // 0x03D0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UFloodFillSettings*                          PathfinderNoise;                                          // 0x03D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<struct FVeinResource>                       VeinResources;                                            // 0x03E0(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<struct FCarvedResource>                     CarvedResources;                                          // 0x03F0(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	class UGlobalMissionParameters*                    GlobalMissionParameters;                                  // 0x0400(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      MissionDNA;                                               // 0x0408(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TArray<struct FGemResourceAmount>                  GemResourcesToGenerate;                                   // 0x0410(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0420(0x0008) MISSED OFFSET
	TArray<struct FCollectableSpawnableItem>           CollectablesToGenerate;                                   // 0x0428(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	ESpawnSettings                                     SpawnSettings;                                            // 0x0438(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0439(0x0007) MISSED OFFSET
	class UCaveInfluencer*                             DirtInfluencer;                                           // 0x0440(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DirtInfluencerRange;                                      // 0x0448(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x044C(0x0008) MISSED OFFSET
	float                                              PathZPenalty;                                             // 0x0454(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PathDirectionPenalty;                                     // 0x0458(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0xC];                                       // 0x045C(0x000C) MISSED OFFSET
	TArray<struct FRoomNode>                           Rooms;                                                    // 0x0468(0x0010) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient)
	TArray<struct FTunnelNode>                         Tunnels;                                                  // 0x0478(0x0010) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient)
	struct FGeneratedInfluenceSets                     GeneratedInfluenceSets;                                   // 0x0488(0x0018) (CPF_BlueprintVisible, CPF_Transient)
	struct FGeneratedInstantCarvers                    GeneratedInstantCarvers;                                  // 0x04A0(0x0028) (CPF_BlueprintVisible, CPF_Transient)
	class UBiome*                                      Biome;                                                    // 0x04C8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              missionLength;                                            // 0x04D0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x04D4(0x0004) MISSED OFFSET
	class URoomDecorationObject*                       MiningpodCalldownLocationDecoration;                      // 0x04D8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<struct FPathObstacle>                       PathObstacles;                                            // 0x04E0(0x0010) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient)
	struct FInfluenceMap                               InfluenceMap;                                             // 0x04F0(0x0050) (CPF_BlueprintVisible, CPF_Transient)
	TArray<class UResourceData*>                       SpawnedResources;                                         // 0x0540(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	float                                              CaveDepth;                                                // 0x0550(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0554(0x0004) MISSED OFFSET
	class AActor*                                      PostProcessActor;                                         // 0x0558(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData10[0x10];                                      // 0x0560(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ProceduralSetup");
		return ptr;
	}


	static void SpawnItems_Async(class AProceduralSetup* setup, const struct FLatentActionInfo& LatentInfo);
	void SpawnItems();
	void SpawnEncounters();
	void SetSeed(int Seed);
	void SetObjectivesCompleted();
	void ResetData();
	void RemoveBLockedEntrances();
	void OnPLSDataRecieved();
	void OnObjectivesCompleted();
	bool IsGeneratedDataReady();
	class UMissionDNA* GetMissionDNA();
	class ADeepCSGWorld* GetCSGWorld();
	static void GenerateRoomsFromGraph_Async(class AProceduralSetup* setup, const struct FLatentActionInfo& LatentInfo);
	void GenerateRoomsFromGraph();
	void GenerateRoomGenerator();
	static void GenerateResourceVeins_Async(class AProceduralSetup* setup, const struct FLatentActionInfo& LatentInfo);
	void GenerateResourceVeins();
	void GenerateLandscape();
	struct FVector FindLocationInDirection(const struct FVector& Origin, const struct FVector& Direction, float horizontalDeviation, float verticalDeviation, const struct FRandRange& distance, float additionalDistance);
	void FindEntrancesForAllConnections();
	static void FillTunnels_Async(class AProceduralSetup* setup, const struct FLatentActionInfo& LatentInfo);
	void FillTunnels();
	void EndRoom(int ID);
	void DoneCarving();
	bool DoAsyncThreadGeneration();
	void CreateTunnelPaths();
	void CreateSecretRooms();
	void CreateGeneratedInfluenceSet();
	int ConnectRooms(struct FRoomNode* From, struct FRoomNode* to);
	int ConnectRoomIds(int fromID, int toID);
	void CommitCarving(bool finalCommit, bool generateMesh);
	void CarveWithGeneratedInstantCarvers();
	int BeginRoom(const struct FVector& Location, float Rotation, bool CanHaveEnemies, class URoomGenerator* baseGenerator, float resourceMultiplayer, struct FVector* outCenter, struct FRoomNode* outRoom);
	void BeginLiveGeneration();
	void BeginGenerating();
	void AddToRoom(int ID, const struct FVector& Location, float Rotation, class URoomGenerator* additionalRoomGenerator);
	int AddRoom(const struct FVector& Location, bool CanHaveEnemies, class URoomGeneratorBase* RoomGenerator, bool canBeRotated, float ResourceMultiplier, struct FVector* outCenter, struct FRoomNode* outRoom);
	void AddInfluenceToTunnelEntrances(class UCaveInfluencer* Influencer, float Range);
	void AddDebrisVariantsToRooms();
	void AddDebrisCollider(const struct FDebrisCapsule& Capsule);
	void AddCaveInfluence(class UCaveInfluencer* Influencer, const struct FVector& Location, float Range);
	void AddAirParticlesCollider(const struct FDebrisCapsule& Capsule);
};


// Class FSD.CaveBurner
// 0x0038 (0x05A8 - 0x0570)
class ACaveBurner : public AProceduralSetup
{
public:
	float                                              RoomRadius;                                               // 0x0570(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0574(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       RoomTags;                                                 // 0x0578(0x0020) (CPF_Edit)
	bool                                               CanOnlyBeUsedOnce;                                        // 0x0598(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0599(0x0007) MISSED OFFSET
	class URoomGenerator*                              RoomGenerator;                                            // 0x05A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CaveBurner");
		return ptr;
	}

};


// Class FSD.RoomBurner
// 0x0098 (0x03C0 - 0x0328)
class ARoomBurner : public AActor
{
public:
	bool                                               LiveUpdateEditor;                                         // 0x0328(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ERoomMirror                                        MirrorTest;                                               // 0x0329(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x032A(0x0006) MISSED OFFSET
	class URoomGenerator*                              RoomGenerator;                                            // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData)
	float                                              RoomRadius;                                               // 0x0338(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ERoomMirroringSupport                              MirrorSupport;                                            // 0x033C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ShowRoomCollider;                                         // 0x033D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x033E(0x0002) MISSED OFFSET
	struct FGameplayTagContainer                       RoomTags;                                                 // 0x0340(0x0020) (CPF_Edit)
	int                                                Seed;                                                     // 0x0360(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0364(0x0004) MISSED OFFSET
	class UBiome*                                      Biome;                                                    // 0x0368(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDifficultySetting*                          Difficulty;                                               // 0x0370(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               GenerateDebris;                                           // 0x0378(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               GenerateItems;                                            // 0x0379(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               GenerateResources;                                        // 0x037A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               SpawnEncounters;                                          // 0x037B(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x037C(0x0004) MISSED OFFSET
	class UEnemyDescriptor*                            TestEnemy;                                                // 0x0380(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                TestEnemyCount;                                           // 0x0388(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x038C(0x0004) MISSED OFFSET
	class UMissionTemplate*                            MissionTemplate;                                          // 0x0390(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMissionTemplate*                            CustomMissionTemplate;                                    // 0x0398(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	class ADeepCSGWorld*                               CSGWorld;                                                 // 0x03A0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class AProceduralSetup*                            PLSLiveEditor;                                            // 0x03A8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x03B0(0x0008) MISSED OFFSET
	class URoomGenerator*                              LiveEditRoomGenerator;                                    // 0x03B8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RoomBurner");
		return ptr;
	}


	void SpawnEncounter(class AProceduralSetup* setup);
};


// Class FSD.RoomPieceBurner
// 0x0018 (0x03D8 - 0x03C0)
class ARoomPieceBurner : public ARoomBurner
{
public:
	class URoomPiece*                                  RoomPiece;                                                // 0x03C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<ERoomPieceSide>                             ConnectedSides;                                           // 0x03C8(0x0010) (CPF_Edit, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RoomPieceBurner");
		return ptr;
	}

};


// Class FSD.InfluenceTester
// 0x0010 (0x0338 - 0x0328)
class AInfluenceTester : public AActor
{
public:
	class UCaveInfluencer*                             Influencer;                                               // 0x0328(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USphereComponent*                            Sphere;                                                   // 0x0330(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.InfluenceTester");
		return ptr;
	}

};


// Class FSD.DeepGraphEdge
// 0x0018 (0x0340 - 0x0328)
class ADeepGraphEdge : public AActor
{
public:
	struct FEdgeType                                   Info;                                                     // 0x0328(0x0018) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DeepGraphEdge");
		return ptr;
	}

};


// Class FSD.DeepGraphNode
// 0x0010 (0x0338 - 0x0328)
class ADeepGraphNode : public AActor
{
public:
	struct FNodeType                                   Info;                                                     // 0x0328(0x0010) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DeepGraphNode");
		return ptr;
	}

};


// Class FSD.SplitEdgeProduction
// 0x0090 (0x03B8 - 0x0328)
class ASplitEdgeProduction : public AActor
{
public:
	struct FSplitEdgeProdEditor                        Info;                                                     // 0x0328(0x0090) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SplitEdgeProduction");
		return ptr;
	}

};


// Class FSD.CaveGraphVisualize
// 0x0000 (0x0328 - 0x0328)
class ACaveGraphVisualize : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CaveGraphVisualize");
		return ptr;
	}

};


// Class FSD.CaveObject
// 0x0000 (0x0328 - 0x0328)
class ACaveObject : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CaveObject");
		return ptr;
	}


	void TriggerNetworkUpdate();
	void ResumeNetworkUpdates();
	void Recieve_OnGameStarted();
	void PauseNetworkUpdates();
};


// Class FSD.CaveScriptComponent
// 0x0000 (0x00F0 - 0x00F0)
class UCaveScriptComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CaveScriptComponent");
		return ptr;
	}

};


// Class FSD.CaveVine
// 0x0068 (0x0390 - 0x0328)
class ACaveVine : public AActor
{
public:
	TEnumAsByte<ECollisionChannel>                     GroundCollisionChannel;                                   // 0x0328(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0329(0x0003) MISSED OFFSET
	float                                              IdleSwingSpeed;                                           // 0x032C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ChaseSpeed;                                               // 0x0330(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxReach;                                                 // 0x0334(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              GroundOffset;                                             // 0x0338(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              NoiseRadius;                                              // 0x033C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              NoiseSpeed;                                               // 0x0340(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0344(0x0004) MISSED OFFSET
	class USplineMeshComponent*                        SplineMeshComponent;                                      // 0x0348(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneComponent*                             VineHead;                                                 // 0x0350(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FVector                                     VineVelocity;                                             // 0x0358(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     VineLocation;                                             // 0x0364(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     VineStartLocation;                                        // 0x0370(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TWeakObjectPtr<class UHealthComponent>             Target;                                                   // 0x037C(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0384(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CaveVine");
		return ptr;
	}


	void BP_OnTargetChanged(class UHealthComponent* NewTarget);
	void BP_OnInitialized();
};


// Class FSD.CaveWorm
// 0x0008 (0x0440 - 0x0438)
class ACaveWorm : public ADeepPathfinderCharacter
{
public:
	class UEnemyHealthComponent*                       HealthComponent;                                          // 0x0438(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CaveWorm");
		return ptr;
	}


	static void SpawnResource(class UObject* WorldContext, class UResourceData* Data, float Size, const struct FTransform& Transform, const struct FVector& Impulse, const struct FVector& DropOffset);
	void DropResource(class UResourceData* Data, float Size, const struct FVector& Impulse, const struct FVector& DropOffset);
};


// Class FSD.Maggot
// 0x0008 (0x0440 - 0x0438)
class AMaggot : public ADeepPathfinderCharacter
{
public:
	class USimpleHealthComponent*                      HealthComponent;                                          // 0x0438(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Maggot");
		return ptr;
	}

};


// Class FSD.CellIdFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UCellIdFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CellIdFunctionLibrary");
		return ptr;
	}

};


// Class FSD.CharacterCameraController
// 0x0020 (0x0110 - 0x00F0)
class UCharacterCameraController : public UActorComponent
{
public:
	float                                              StartFOV;                                                 // 0x00F0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              targetFov;                                                // 0x00F4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TargetFOVSpeed;                                           // 0x00F8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x0100(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UCameraComponent*                            Camera;                                                   // 0x0108(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CharacterCameraController");
		return ptr;
	}


	void ResetFOV(float FadeSpeed);
	void FOVChanged(float NewFOV);
	void FadeToFOVRelative(float targetFov, float FadeSpeed);
	void FadeToFOV(float targetFov, float FadeSpeed);
};


// Class FSD.CharacterGearComponent
// 0x0790 (0x0880 - 0x00F0)
class UCharacterGearComponent : public UActorComponent
{
public:
	class UCharacterVanityItems*                       AvailableVanityItems;                                     // 0x00F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UHeadVanityItem*                             DefaultHead;                                              // 0x00F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UBeardVanityItem*                            DefaultBeard;                                             // 0x0100(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UArmorVanityItem*                            DefaultArmor;                                             // 0x0108(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UBeardColorVanityItem*                       DefaultBeardColor;                                        // 0x0110(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UItemMaterialVanityItem*                     DefaultSkinColor;                                         // 0x0118(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UEyeBrowsVanityItem*                         DefaultEyebrows;                                          // 0x0120(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMoustacheVanityItem*                        DefaultMoustache;                                         // 0x0128(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USideburnsVanityItem*                        DefaultSideburns;                                         // 0x0130(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UBeardColorVanityItem*                       ShownBeardColor;                                          // 0x0138(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UMaterialInterface*                          ArmorMaterial;                                            // 0x0140(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	EHeadVanityType                                    HeadVanityType;                                           // 0x0148(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0149(0x0007) MISSED OFFSET
	TArray<class UVanityItem*>                         EquippedVanity;                                           // 0x0150(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Transient)
	class UMaterialInterface*                          SkinMaterial;                                             // 0x0160(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UMaterialInterface*>                  CachedMaterials;                                          // 0x0168(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0178(0x0008) MISSED OFFSET
	struct FPredefinedCharacterMeshData                Headwear;                                                 // 0x0180(0x0030)
	struct FPredefinedCharacterMeshData                Beard;                                                    // 0x01B0(0x0030)
	struct FPredefinedCharacterMeshData                Face;                                                     // 0x01E0(0x0030)
	struct FPredefinedCharacterMeshData                LeftShoulder;                                             // 0x0210(0x0030)
	struct FPredefinedCharacterMeshData                RightShoulder;                                            // 0x0240(0x0030)
	struct FPredefinedCharacterMeshData                LeftUpperArm;                                             // 0x0270(0x0030)
	struct FPredefinedCharacterMeshData                LeftLowerArm1;                                            // 0x02A0(0x0030)
	struct FPredefinedCharacterMeshData                LeftLowerArm2;                                            // 0x02D0(0x0030)
	struct FPredefinedCharacterMeshData                LeftHand;                                                 // 0x0300(0x0030)
	struct FPredefinedCharacterMeshData                LeftHandAttach;                                           // 0x0330(0x0030)
	struct FPredefinedCharacterMeshData                RightUpperArm;                                            // 0x0360(0x0030)
	struct FPredefinedCharacterMeshData                RightLowerArm1;                                           // 0x0390(0x0030)
	struct FPredefinedCharacterMeshData                RightLowerArm2;                                           // 0x03C0(0x0030)
	struct FPredefinedCharacterMeshData                RightHand;                                                // 0x03F0(0x0030)
	struct FPredefinedCharacterMeshData                RightHandAttach;                                          // 0x0420(0x0030)
	struct FPredefinedCharacterMeshData                UpperTorso;                                               // 0x0450(0x0030)
	struct FPredefinedCharacterMeshData                MiddleTorso;                                              // 0x0480(0x0030)
	struct FPredefinedCharacterMeshData                LowerTorso;                                               // 0x04B0(0x0030)
	struct FPredefinedCharacterMeshData                UpperBack;                                                // 0x04E0(0x0030)
	struct FPredefinedCharacterMeshData                MiddleBack;                                               // 0x0510(0x0030)
	struct FPredefinedCharacterMeshData                LowerBack;                                                // 0x0540(0x0030)
	struct FPredefinedCharacterMeshData                LeftHip;                                                  // 0x0570(0x0030)
	struct FPredefinedCharacterMeshData                RightHip;                                                 // 0x05A0(0x0030)
	struct FPredefinedCharacterMeshData                FrontHip;                                                 // 0x05D0(0x0030)
	struct FPredefinedCharacterMeshData                LeftUpperLeg;                                             // 0x0600(0x0030)
	struct FPredefinedCharacterMeshData                LeftLowerLeg;                                             // 0x0630(0x0030)
	struct FPredefinedCharacterMeshData                LeftFoot;                                                 // 0x0660(0x0030)
	struct FPredefinedCharacterMeshData                LeftToe;                                                  // 0x0690(0x0030)
	struct FPredefinedCharacterMeshData                RightUpperLeg;                                            // 0x06C0(0x0030)
	struct FPredefinedCharacterMeshData                RightLowerLeg;                                            // 0x06F0(0x0030)
	struct FPredefinedCharacterMeshData                RightFoot;                                                // 0x0720(0x0030)
	struct FPredefinedCharacterMeshData                RightToe;                                                 // 0x0750(0x0030)
	TMap<EVanitySlot, class USkeletalMeshComponent*>   VanityMeshes;                                             // 0x0780(0x0050) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)
	TMap<struct FName, class UStaticMeshComponent*>    TPMeshes;                                                 // 0x07D0(0x0050) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)
	TMap<struct FName, class UStaticMeshComponent*>    FPMeshes;                                                 // 0x0820(0x0050) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0870(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CharacterGearComponent");
		return ptr;
	}


	void UpdateMeshes();
	void UpdateEquippedVanity();
	void SetEquippedVanityInViewer(TArray<class UVanityItem*> Vanity);
	void Server_SetEquippedVanity(TArray<class UVanityItem*> equippedItems);
	static class UVanityItem* Receive_GetEquippedVanityItem(class UObject* WorldContextObject, class UClass* Character, EVanitySlot Slot);
	class UCharacterVanityItems* Receive_GetAvailableVanityItems(class UObject* WorldContextObject, class UClass* Character);
	void OnRep_EquippedVanity();
	class UVanityItem* GetEquippedVanityItem(EVanitySlot Slot);
	class UCharacterVanityItems* GetAvailableVanityItems();
};


// Class FSD.CharacterIntoxicationComponent
// 0x0050 (0x0140 - 0x00F0)
class UCharacterIntoxicationComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnIntoxicationChanged;                                    // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPassOutDrunk;                                           // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class APlayerCharacter*                            Character;                                                // 0x0110(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	EIntoxicationState                                 CurrentState;                                             // 0x0118(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0119(0x0003) MISSED OFFSET
	struct FLerpingPercent                             IntoxicationPercent;                                      // 0x011C(0x0008) (CPF_Net, CPF_Transient)
	float                                              IntoxicationLerpSpeed;                                    // 0x0124(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TimeDrunk;                                                // 0x0128(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FCountDownFloat                             SoberingUpCoolDown;                                       // 0x012C(0x000C) (CPF_Edit)
	unsigned char                                      SoberingPercent;                                          // 0x0138(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0139(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CharacterIntoxicationComponent");
		return ptr;
	}


	void ReceiveStateChange(EIntoxicationState NewState);
	void ReceivePassOutDrunk();
	void ReceiveDrunkTick(float DeltaTime, float DrunkTime);
	void ReceiveDrunkEnd();
	void ReceiveDrunkBegin();
	void PassOutDrunkSignature__DelegateSignature(class APlayerCharacter* Player);
	bool IsPassOutDrunk();
	bool IsOnSpaceRig();
	bool IsLocallyControlled();
	bool IsDrunk();
	void IntoxicationProgressSignature__DelegateSignature(class APlayerCharacter* Player, float Progress);
	bool HasAuthority();
	float GetSoberingUpCoolDown();
	float GetIntoxicationProgressMapped(class UCurveFloat* Curve);
	float GetIntoxicationProgress();
	int GetAlcoholPct(EDrinkableAlcoholStrength Strength);
	void Consume(class UDrinkableDataAsset* Drinkable);
	void ClearIntoxication();
};


// Class FSD.CharacterRecoilComponent
// 0x0030 (0x0120 - 0x00F0)
class UCharacterRecoilComponent : public UActorComponent
{
public:
	struct FVector                                     Recoil;                                                   // 0x00F0(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     RecoilVelocity;                                           // 0x00FC(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     PrevError;                                                // 0x0108(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0114(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CharacterRecoilComponent");
		return ptr;
	}

};


// Class FSD.CharacterStateComponent
// 0x0038 (0x0128 - 0x00F0)
class UCharacterStateComponent : public UActorComponent
{
public:
	unsigned char                                      StateId;                                                  // 0x00F0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x00F8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UDialogDataAsset*                            EnterStateShout;                                          // 0x0100(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            ExitStateShout;                                           // 0x0108(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            AttentionShout;                                           // 0x0110(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UPlayerMovementComponent*                    PlayerMovement;                                           // 0x0118(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0120(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CharacterStateComponent");
		return ptr;
	}


	void ReceiveStateTick(float DeltaTime);
	void ReceiveStateExit();
	void ReceiveStateEnter();
	bool IsLocallyControlled();
	bool HasAuthority();
	float GetStateTime();
	unsigned char GetStateID();
	bool GetStateActive();
	class UPlayerMovementComponent* GetCharacterMovement();
};


// Class FSD.CharacterUseComponent
// 0x0080 (0x0170 - 0x00F0)
class UCharacterUseComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnDepositingBegin;                                        // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDepositingEnd;                                          // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UUsableComponentBase*                        ActiveUsablee;                                            // 0x0110(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UUsableComponentBase*                        HoveringUsable;                                           // 0x0118(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneComponent*                             ActiveUsableCollider;                                     // 0x0120(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USphereComponent*                            UseCollider;                                              // 0x0128(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USoundBase*                                  AudioBeginDepositing;                                     // 0x0130(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundBase*                                  AudioEndDepositing;                                       // 0x0138(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              UseDistance;                                              // 0x0140(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EUseRestriction                                    UseRestriction;                                           // 0x0144(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0145(0x0003) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x0148(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0150(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CharacterUseComponent");
		return ptr;
	}


	void Server_SetCanUse(EUseRestriction UseRestriction);
	void Server_EndUse();
	void Server_BeginUse(class UUsableComponentBase* Usable);
	void OnRep_ActiveUsablee(class UUsableComponentBase* lastUsable);
	void OnCharacterStateChanged(ECharacterState NewState);
	bool IsLookingAtUsable();
	bool IsLookingAtDepositable();
	float GetUseProgress();
	bool GetIsUsing();
	bool GetIsDepositing();
	void All_PlaySingleUse(class UUsableComponentBase* Usable);
};


// Class FSD.CharacterSelectionSwitcher
// 0x0000 (0x0328 - 0x0328)
class ACharacterSelectionSwitcher : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CharacterSelectionSwitcher");
		return ptr;
	}


	void OnVanityItemEquipped(EVanitySlot Slot);
	void Hide();
	class APlayerCharacter* GetActiveCharacter();
};


// Class FSD.ChargedWeapon
// 0x0090 (0x0718 - 0x0688)
class AChargedWeapon : public AAmmoDrivenWeapon
{
public:
	struct FScriptMulticastDelegate                    OnChargeChanged;                                          // 0x0688(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHeatChanged;                                            // 0x0698(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x06A8(0x0008) MISSED OFFSET
	class UAnimMontage*                                FP_OverheatAnim;                                          // 0x06B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                FP_ChargeupMontage;                                       // 0x06B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             ChargeupParticles;                                        // 0x06C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystemComponent*                    ChargeupParticleInstance;                                 // 0x06C8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UParticleSystem*                             ChargeupFireMuzzleFlash;                                  // 0x06D0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   NormalFiresound;                                          // 0x06D8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class USoundCue*                                   FullyChargedFireSound;                                    // 0x06E0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ChargeSpeed;                                              // 0x06E8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               Charging;                                                 // 0x06EC(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x06ED(0x0003) MISSED OFFSET
	float                                              ChargeProgress;                                           // 0x06F0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                ShotCostAtFullCharge;                                     // 0x06F4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TotalHeat;                                                // 0x06F8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x06FC(0x0004) MISSED OFFSET
	float                                              CoolingRate;                                              // 0x0700(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              HeatPerSecondWhileCharging;                               // 0x0704(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              HeatPerSecondWhenCharged;                                 // 0x0708(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              HeatPerNormalShot;                                        // 0x070C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              HeatPerChargedShot;                                       // 0x0710(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0714(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ChargedWeapon");
		return ptr;
	}


	void SetOverheated(bool IsOverheated);
	void Server_SetIsCharging(bool isChargingValue);
	void RecieveChargeProgressChanged(float NewChargeProgress);
	void ReceiveOverheatedChanged(bool IsOverheated);
	bool GetIsCharging();
};


// Class FSD.ChargedWeaponAnimInstance
// 0x0020 (0x0380 - 0x0360)
class UChargedWeaponAnimInstance : public UAnimInstance
{
public:
	float                                              ChargeupPlayRateSpeedChange;                              // 0x0360(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ChargedownPlayRateSpeedChange;                            // 0x0364(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxChargeupPlayRate;                                      // 0x0368(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x036C(0x0004) MISSED OFFSET
	class AChargedWeapon*                              Weapon;                                                   // 0x0370(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0378(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ChargedWeaponAnimInstance");
		return ptr;
	}

};


// Class FSD.ProjectileBase
// 0x0088 (0x03B0 - 0x0328)
class AProjectileBase : public AActor
{
public:
	struct FProjectileImpact                           ProjectileImpact;                                         // 0x0328(0x0030) (CPF_Net, CPF_Transient)
	bool                                               Exploded;                                                 // 0x0358(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0359(0x0007) MISSED OFFSET
	class USphereComponent*                            CollisionComponent;                                       // 0x0360(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              LifeSpan;                                                 // 0x0368(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              VelocityMultiplier;                                       // 0x036C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              GravityMultiplier;                                        // 0x0370(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               AffectedByDifficultySpeedModifier;                        // 0x0374(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3B];                                      // 0x0375(0x003B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ProjectileBase");
		return ptr;
	}


	void OnRep_ProjectileImpact();
	void OnImpacted(const struct FHitResult& HitResult);
	void OnClientInitialized();
	void MakeBouncy();
	void InitVelocity(const struct FVector& ShootDirection);
	void DisableAndDestroy();
	void Client_SmoothPosition(const struct FVector_NetQuantize& ServerPosition, float ServerSpeed);
};


// Class FSD.Projectile
// 0x0008 (0x03B8 - 0x03B0)
class AProjectile : public AProjectileBase
{
public:
	class UProjectileMovementComponent*                MovementComponent;                                        // 0x03B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Projectile");
		return ptr;
	}


	static class AProjectileBase* SpawnProjectile(class UObject* WorldContextObject, class UClass* projectileClass, class APawn* projectileOwner, const struct FVector& Origin, const struct FRotator& velocityDirection);
	static class AProjectileBase* SpawnBallisticProjectile(class UObject* WorldContextObject, class UClass* projectileClass, class APawn* projectileOwner, const struct FVector& Origin, const struct FVector& Velocity);
	void OnImpact(const struct FHitResult& HitResult);
};


// Class FSD.ChargedProjectile
// 0x0008 (0x03C0 - 0x03B8)
class AChargedProjectile : public AProjectile
{
public:
	bool                                               ExplodesWhenDead;                                         // 0x03B8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               AoEDamageInFlight;                                        // 0x03B9(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x03BA(0x0002) MISSED OFFSET
	float                                              DirectDamageReduction;                                    // 0x03BC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ChargedProjectile");
		return ptr;
	}


	void OnAoEDamageEnabled();
};


// Class FSD.ChromaComponent
// 0x00D0 (0x01C0 - 0x00F0)
class UChromaComponent : public UActorComponent
{
public:
	struct FLinearColor                                HealthBarColor;                                           // 0x00F0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                DamageEffectColor;                                        // 0x0100(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                DownedEffectColor;                                        // 0x0110(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                ShieldBarColor;                                           // 0x0120(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                ShieldEffectColor;                                        // 0x0130(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                WeaponColor;                                              // 0x0140(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                WeaponEquipedColor;                                       // 0x0150(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                GrenadeColor;                                             // 0x0160(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                WASDColor;                                                // 0x0170(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                RessuplyColor;                                            // 0x0180(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                ReloadColor;                                              // 0x0190(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EFSDChromaEffect                                   ActiveEffect;                                             // 0x01A0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01A1(0x0003) MISSED OFFSET
	float                                              EffectDuration;                                           // 0x01A4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	uint32_t                                           EffectSeed;                                               // 0x01A8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x01AC(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ChromaComponent");
		return ptr;
	}


	void TriggerEffect(EFSDChromaEffect effect);
};


// Class FSD.UpgradableGearComponent
// 0x0120 (0x0210 - 0x00F0)
class UUpgradableGearComponent : public UActorComponent
{
public:
	TArray<struct FUpgradeTier>                        UpgradeTiers;                                             // 0x00F0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	class UTexture2D*                                  IconLine;                                                 // 0x0100(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTexture2D*                                  IconBG;                                                   // 0x0108(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TSoftObjectPtr<class UTexture2D>                   PreviewImage;                                             // 0x0110(0x0028) (CPF_Edit, CPF_EditConst)
	TSoftObjectPtr<class UClass>                       PreviewActor;                                             // 0x0138(0x0028) (CPF_Edit)
	struct FText                                       Name;                                                     // 0x0160(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       Category;                                                 // 0x0178(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       Description;                                              // 0x0190(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	int                                                CreditCost;                                               // 0x01A8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01AC(0x0004) MISSED OFFSET
	TMap<class UResourceData*, float>                  ResourceCost;                                             // 0x01B0(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<struct FMasteryItem>                        masteryLevels;                                            // 0x0200(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.UpgradableGearComponent");
		return ptr;
	}


	static void SetGearStatText(const struct FText& Text, struct FGearStatEntry* entry);
	static bool PurchaseItem(class UClass* Item, class AFSDPlayerState* Player);
	static void MirrorUpgradePreviewStatus(struct FGearStatEntry* From, struct FGearStatEntry* to);
	static bool IsUpgradeEquipped(class UClass* itemClass, class UItemUpgrade* Upgrade, class AFSDPlayerState* Player);
	static bool IsTierUnLocked(class UClass* itemClass, int tierIndex, class AFSDPlayerState* Player, class UPlayerCharacterID* characterID);
	static bool IsItemUnlocked(class UClass* Item, class AFSDPlayerState* Player);
	static bool IsItemOwned(class UClass* Item, class AFSDPlayerState* Player);
	static int GetUpgradeTier(class UClass* itemClass, class UItemUpgrade* ItemUpgrade);
	struct FString GetSourceGearName();
	class UTexture2D* GetPreviewImage();
	class UClass* GetPreviewActorClass();
	static int GetMasteryProgress(class UClass* Item, class AFSDPlayerState* Player, int* maxMastery);
	static TArray<struct FMasteryItem> GetMasteryLevels(class UClass* Item);
	static bool GetMasteryForLevel(TArray<struct FMasteryItem> masteryLevels, int Level, struct FMasteryItem* outLevel);
	static TArray<struct FUpgradeTier> GetItemUpgradeTiers(class UClass* itemClass);
	static EItemUpgradeStatus GetItemUpgradeStatus(class UClass* itemClass, class UItemUpgrade* ItemUpgrade, class AFSDPlayerState* Player, class UPlayerCharacterID* characterID);
	static TArray<class UItemUpgrade*> GetItemUpgrades(class UClass* itemClass, class UClass* UpgradeClass, class AFSDPlayerState* Player, unsigned char upgradeIndex);
	static class UClass* GetItemPreviewClass(class UClass* itemClass);
	static bool GetItemMasteryForLevel(class UClass* Item, int Level, struct FMasteryItem* outLevel);
	static TArray<struct FCraftingCost> GetItemCost(class UClass* Item);
	static TArray<struct FGearStatEntry> GetGearStats(class AFSDPlayerState* PlayerState, class UClass* ActorClass);
	static struct FString GetGearSourceName(class UClass* itemClass, class UItemUpgrade* ItemUpgrade);
	static TArray<class UItemUpgrade*> GetEquippedUpgrades(class UClass* itemClass, class AFSDPlayerState* Player);
	static class UItemUpgrade* GetEquippedUpgradeAtTier(class UClass* itemClass, int tierIndex, class AFSDPlayerState* Player);
	TArray<struct FCraftingCost> GetCraftingCost();
	TArray<class UItemUpgrade*> GetAllUpgrades();
	static void ClearEquippedUpgrade(class UClass* itemClass, int tierIndex, class AFSDPlayerState* Player);
	static void CheckMasteryUnlocks(class UClass* itemClass, class AFSDPlayerController* Player);
	static bool CanAffordUpgrade(class UItemUpgrade* Upgrade, class AFSDPlayerState* Player);
	static bool CanAffordItem(class UClass* Item, class AFSDPlayerState* Player);
};


// Class FSD.UpgradableItemComponent
// 0x0000 (0x0210 - 0x0210)
class UUpgradableItemComponent : public UUpgradableGearComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.UpgradableItemComponent");
		return ptr;
	}

};


// Class FSD.UpgradableBoscoComponent
// 0x0000 (0x0210 - 0x0210)
class UUpgradableBoscoComponent : public UUpgradableGearComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.UpgradableBoscoComponent");
		return ptr;
	}

};


// Class FSD.CharacterShoutsData
// 0x00A8 (0x00D8 - 0x0030)
class UCharacterShoutsData : public UDataAsset
{
public:
	struct FCharacterShouts                            Shouts;                                                   // 0x0030(0x00A8) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CharacterShoutsData");
		return ptr;
	}

};


// Class FSD.ShoutWidget
// 0x0000 (0x0208 - 0x0208)
class UShoutWidget : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ShoutWidget");
		return ptr;
	}


	void OnShout(class APlayerCharacter* Sender, const struct FDialogStruct& Shout, bool IsSubtitle);
	static struct FString GetTimeString(int Seconds);
	static void GetSplitTimeString(int Seconds, struct FString* MinutesString, struct FString* SecondsString);
	struct FString GetCountDownString(int Seconds);
};


// Class FSD.CommunicationComponent
// 0x0180 (0x0270 - 0x00F0)
class UCommunicationComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnMissionShout;                                           // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMissionShoutEnd;                                        // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMixerAnnouncement;                                      // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerShouted;                                          // 0x0120(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMissionControlFinished;                                 // 0x0130(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	bool                                               ShoutingEnabled;                                          // 0x0140(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0141(0x0007) MISSED OFFSET
	class UClass*                                      ShoutWidgetType;                                          // 0x0148(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UCharacterShoutsData*                        CharacterShouts;                                          // 0x0150(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PitchMultiplier;                                          // 0x0158(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinShoutDelay;                                            // 0x015C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CloseRangeShoutDistance;                                  // 0x0160(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0164(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       KillShoutAllowedTags;                                     // 0x0168(0x0020) (CPF_Edit)
	class UAudioComponent*                             MissionShoutComponent;                                    // 0x0188(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0190(0x0008) MISSED OFFSET
	bool                                               bMissionControlPaused;                                    // 0x0198(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0199(0x0007) MISSED OFFSET
	TMap<class APlayerCharacter*, class UShoutWidget*> ActiveShouts;                                             // 0x01A0(0x0050) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)
	class APlayerCharacter*                            Character;                                                // 0x01F0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UDialogDataAsset*                            LastShout;                                                // 0x01F8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UAudioComponent*                             ShoutAudioComponent;                                      // 0x0200(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	TMap<class UDialogDataAsset*, float>               ShoutHistory;                                             // 0x0208(0x0050) (CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0258(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CommunicationComponent");
		return ptr;
	}


	void ShoutCustomOrDefault(class UDialogDataAsset* CustomShout, EShoutType DefaultShout);
	void ShoutCustom(class UDialogDataAsset* Shout);
	void Shout(EShoutType Shout);
	void SetMissionControlPaused(bool IsPaused);
	void ServerShout(class UDialogDataAsset* Shout);
	void ServerMixerAnnouncement(const struct FFSD_FMixerAnnouncement& Announcement);
	void ServerMissionShout(class UDialogDataAsset* Shout);
	static class UAudioComponent* PlayPitchedByClass(class UObject* WorldContextObject, class UClass* CharacterClass, class USoundBase* Sound, class UDialogDataAsset* Shout, EShoutType ShoutType, class UAudioComponent* AudioComponent);
	class UAudioComponent* PlayPitched(class USoundBase* Sound, class UDialogDataAsset* Shout, EShoutType ShoutType, bool IgnoreCoolDown, class UAudioComponent* AudioComponent, class UObject* WorldContextObject);
	void OnDamagedEnemy(const TScriptInterface<class UHealth>& EnemyHealth, float Damage, float DamageModifier, float HealthRemaining);
	static void MixerAnnouncementLocalOnly(class UObject* WorldContext, const struct FFSD_FMixerAnnouncement& Announcement);
	static void MixerAnnouncement(class UObject* WorldContext, const struct FFSD_FMixerAnnouncement& Announcement);
	static int MissionShoutLocally(class UObject* WorldContext, class UDialogDataAsset* Shout);
	static void MissionShout(class UObject* WorldContext, class UDialogDataAsset* Shout);
	bool IsMissionControlSpeaking();
	void ClientShout(class APlayerCharacter* Sender, class UDialogDataAsset* Shout, int Index);
	void ClientMixerAnnouncement(const struct FFSD_FMixerAnnouncement& Announcement);
	void ClientMissionShout(class UDialogDataAsset* Shout, int Index);
};


// Class FSD.ControllerIconSettings
// 0x0020 (0x0058 - 0x0038)
class UControllerIconSettings : public UDeveloperSettings
{
public:
	TArray<struct FActionIconMapping>                  Xbox_KeyIcons;                                            // 0x0038(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config)
	TArray<struct FActionIconMapping>                  MouseKeyboard_KeyIcons;                                   // 0x0048(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ControllerIconSettings");
		return ptr;
	}


	static bool FindMouseKeyboardKeyIcon(const struct FKey& Key, struct FActionIconMapping* KeyIcon);
	static bool FindControllerKeyIcon(const struct FKey& Key, struct FActionIconMapping* KeyIcon);
};


// Class FSD.ConvertedRobot
// 0x0300 (0x0758 - 0x0458)
class AConvertedRobot : public AEnemyDeepPathfinderCharacter
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	class UEnemyComponent*                             EnemyComponent;                                           // 0x0460(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UPawnStatsComponent*                         PawnStats;                                                // 0x0468(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UOutlineComponent*                           Outline;                                                  // 0x0470(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UHitscanComponent*                           HitScan;                                                  // 0x0478(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USingleUsableComponent*                      Usable;                                                   // 0x0480(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneComponent*                             TurretRoot;                                               // 0x0488(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USkeletalMeshComponent*                      TurretMesh;                                               // 0x0490(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UPointLightComponent*                        MuzzleFlash;                                              // 0x0498(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USpotLightComponent*                         SpotLight;                                                // 0x04A0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UStaticMeshComponent*                        LightCone;                                                // 0x04A8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UStaticMeshComponent*                        LaserBeam;                                                // 0x04B0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneComponent*                             ShieldRoot;                                               // 0x04B8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UStaticMeshComponent*                        InnerShield;                                              // 0x04C0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UStaticMeshComponent*                        OuterShield;                                              // 0x04C8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDamageComponent*                            Damage;                                                   // 0x04D0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FScriptMulticastDelegate                    OnStateChanged;                                           // 0x04D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShieldChanged;                                          // 0x04E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIntroductionStart;                                      // 0x04F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	bool                                               ForceSit;                                                 // 0x0508(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0509(0x0007) MISSED OFFSET
	class USoundBase*                                  LaserSound;                                               // 0x0510(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class USoundBase*                                  LastPowerDownSound;                                       // 0x0518(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class USoundBase*                                  PulsatingSound;                                           // 0x0520(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class USoundBase*                                  PowerUpSound;                                             // 0x0528(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              LaserSoundComp;                                           // 0x0530(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              PulsatingSoundComp;                                       // 0x0538(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0540(0x0010) MISSED OFFSET
	float                                              IntroductionTime;                                         // 0x0550(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsIntroducing;                                            // 0x0554(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IntroductionDone;                                         // 0x0555(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsGrowingShield;                                          // 0x0556(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x0557(0x0001) MISSED OFFSET
	float                                              BigShieldScale;                                           // 0x0558(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              SmallShieldScale;                                         // 0x055C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              ShieldGrowthRate;                                         // 0x0560(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              LerpExp;                                                  // 0x0564(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              MinimumShieldSize;                                        // 0x0568(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              TargetShieldSize;                                         // 0x056C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              IdleRotationSpeed;                                        // 0x0570(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0574(0x0004) MISSED OFFSET
	float                                              LaserScaleRate;                                           // 0x0578(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x057C(0x0004) MISSED OFFSET
	float                                              RotationTime;                                             // 0x0580(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x24];                                      // 0x0584(0x0024) MISSED OFFSET
	bool                                               DoSpecialWhenEnemy;                                       // 0x05A8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               DoSpecialWhenFriendly;                                    // 0x05A9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               PerfectTrackingWhenEnemy;                                 // 0x05AA(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               PerfectTrackingWhenFriendly;                              // 0x05AB(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x05AC(0x0004) MISSED OFFSET
	float                                              ChanceForGrenade;                                         // 0x05B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               ReplaceBurstAttack;                                       // 0x05B4(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x05B5(0x0003) MISSED OFFSET
	class USoundBase*                                  GrenadeFireSound;                                         // 0x05B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class UParticleSystem*                             GrenadeFireParticle;                                      // 0x05C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               IsFiring;                                                 // 0x05C8(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x05C9(0x0003) MISSED OFFSET
	float                                              TurretSpinSpeed;                                          // 0x05CC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	TArray<class AParasiteEnemy*>                      Parasites;                                                // 0x05D0(0x0010) (CPF_ZeroConstructor)
	int                                                SpawnParasiteNumer;                                       // 0x05E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	int                                                MaxParasiteSlots;                                         // 0x05E4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              ChanceToSpawnParasite;                                    // 0x05E8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x05EC(0x0004) MISSED OFFSET
	class UClass*                                      ParasiteClass;                                            // 0x05F0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData11[0x6];                                       // 0x05F8(0x0006) MISSED OFFSET
	bool                                               SpinTurret;                                               // 0x05FE(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData12[0x11];                                      // 0x05FF(0x0011) MISSED OFFSET
	class UClass*                                      SpecialAttackProjectile;                                  // 0x0610(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class UClass*                                      FriendlyProjectile;                                       // 0x0618(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData13[0xC];                                       // 0x0620(0x000C) MISSED OFFSET
	bool                                               HasLockedOn;                                              // 0x062C(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData14[0x3];                                       // 0x062D(0x0003) MISSED OFFSET
	class USoundBase*                                  TargetingSound;                                           // 0x0630(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class UAnimSequenceBase*                           GrenadeShotAnimation;                                     // 0x0638(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              LockonTime;                                               // 0x0640(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData15[0x4];                                       // 0x0644(0x0004) MISSED OFFSET
	class USoundCue*                                   ShootSound;                                               // 0x0648(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              ShootSoundFadeout;                                        // 0x0650(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData16[0x4];                                       // 0x0654(0x0004) MISSED OFFSET
	class UAudioComponent*                             ShootSoundInstance;                                       // 0x0658(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USoundCue*                                   ShootSoundTail;                                           // 0x0660(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             MuzzleEffect;                                             // 0x0668(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class UParticleSystem*                             TracerEffect;                                             // 0x0670(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	struct FRuntimeFloatCurve                          MuzzleLightCurve;                                         // 0x0678(0x0078) (CPF_Edit, CPF_DisableEditOnInstance)
	unsigned char                                      UnknownData17[0x8];                                       // 0x06F0(0x0008) MISSED OFFSET
	float                                              GunRange;                                                 // 0x06F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              FireRate;                                                 // 0x06FC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData18[0x4];                                       // 0x0700(0x0004) MISSED OFFSET
	float                                              BurstCooldown;                                            // 0x0704(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData19[0x4];                                       // 0x0708(0x0004) MISSED OFFSET
	int                                                MinBurst;                                                 // 0x070C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	int                                                MaxBurst;                                                 // 0x0710(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              DamageWhenFriendly;                                       // 0x0714(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              FriendlyFriendlyFireMultiplier;                           // 0x0718(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData20[0x4];                                       // 0x071C(0x0004) MISSED OFFSET
	bool                                               RotateTurretToTarget;                                     // 0x0720(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               StartedSpecialAttack;                                     // 0x0721(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	ERobotState                                        TeamState;                                                // 0x0722(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               IsWalking;                                                // 0x0723(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsDoingSpecialAttack;                                     // 0x0724(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData21[0x3];                                       // 0x0725(0x0003) MISSED OFFSET
	class UStaticMeshComponent*                        TurretRotation;                                           // 0x0728(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData22[0x18];                                      // 0x0730(0x0018) MISSED OFFSET
	class AActor*                                      CurrentTarget;                                            // 0x0748(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData23[0x8];                                       // 0x0750(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ConvertedRobot");
		return ptr;
	}


	void ParasiteDamaged(float aDamage);
	void OnWeaponsFired(const struct FHitResult& aHitResult);
	void OnUsed(class APlayerCharacter* aUser);
	void OnSeePawn(class APawn* APawn);
	void OnRep_TeamState();
	void OnRep_Target();
	void OnRep_SpinTurret();
	void OnRep_IsIntroducting();
	void OnRep_IsFiring();
	void OnRep_IsDoingSpecialAttack();
	void OnParasiteDeath(class AActor* AParasiteEnemy);
	ERobotState GetTeamState();
	struct FVector GetPlayerMediumPoint();
	TArray<class AParasiteEnemy*> GetParasites();
	bool GetHasPoweredDown();
	void FireEffects(const struct FVector_NetQuantize& aFireDirection);
	void DestroyAttatchPoint(class USceneComponent* aComponent);
	void CannonEffects();
};


// Class FSD.ConvertedRobotAnimInstance
// 0x0010 (0x0370 - 0x0360)
class UConvertedRobotAnimInstance : public UAnimInstance
{
public:
	bool                                               HasBeenPoweredDown;                                       // 0x0360(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               ForceSit;                                                 // 0x0361(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	ERobotState                                        RobotState;                                               // 0x0362(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0363(0x0001) MISSED OFFSET
	float                                              WalkingRate;                                              // 0x0364(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              NormalWalkSpeed;                                          // 0x0368(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x036C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ConvertedRobotAnimInstance");
		return ptr;
	}

};


// Class FSD.ConvertedRobotTurretAnimInstance
// 0x0000 (0x0360 - 0x0360)
class UConvertedRobotTurretAnimInstance : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ConvertedRobotTurretAnimInstance");
		return ptr;
	}

};


// Class FSD.EnemyAIController
// 0x0000 (0x0450 - 0x0450)
class AEnemyAIController : public AFSDAIController
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyAIController");
		return ptr;
	}

};


// Class FSD.ConvertedRobotController
// 0x0068 (0x04B8 - 0x0450)
class AConvertedRobotController : public AEnemyAIController
{
public:
	float                                              SpecialAttackRange;                                       // 0x0450(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              SpecialAttackFireRate;                                    // 0x0454(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0458(0x0020) MISSED OFFSET
	float                                              WaitBeforeSpecial;                                        // 0x0478(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x047C(0x0004) MISSED OFFSET
	float                                              WaitAfterSpecial;                                         // 0x0480(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0484(0x0008) MISSED OFFSET
	float                                              MinSpecialAttackCooldown;                                 // 0x048C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              MaxSpecialAttackCooldown;                                 // 0x0490(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0494(0x0004) MISSED OFFSET
	class UBehaviorTree*                               BehaviourTree;                                            // 0x0498(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              UpdateTargetInterval;                                     // 0x04A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x04A4(0x0004) MISSED OFFSET
	float                                              PowerDownAfterSeconds;                                    // 0x04A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0xC];                                       // 0x04AC(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ConvertedRobotController");
		return ptr;
	}

};


// Class FSD.CoolDownItemAggregator
// 0x0020 (0x0128 - 0x0108)
class UCoolDownItemAggregator : public UItemAggregator
{
public:
	float                                              CoolDownDuration;                                         // 0x0108(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	class USoundBase*                                  AudioCoolDownFinished;                                    // 0x0110(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CooldownRemaining;                                        // 0x0118(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               CoolDownIsPaused;                                         // 0x011C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x011D(0x0003) MISSED OFFSET
	class AItem*                                       Item;                                                     // 0x0120(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CoolDownItemAggregator");
		return ptr;
	}


	void SetPaused(bool IsPaused);
	bool IsCoolingDown();
	float GetCoolDownProgress();
	void ActivateCoolDown(bool startPaused);
};


// Class FSD.CraftableObject
// 0x00A0 (0x00D0 - 0x0030)
class UCraftableObject : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnUnlockFlagChanged;                                      // 0x0040(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UDLCBase*                                    RequiredDLC;                                              // 0x0050(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDLCBase*                                    CraftingRestrictionDLC;                                   // 0x0058(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FGuid                                       SavegameID;                                               // 0x0060(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	bool                                               bUnLockedFlag;                                            // 0x0070(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	int                                                CraftingPlayerRankRequired;                               // 0x0074(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	TMap<class UResourceData*, float>                  CraftingCost;                                             // 0x0078(0x0050) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst)
	int                                                CraftingCreditsCost;                                      // 0x00C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CraftableObject");
		return ptr;
	}


	void PreviewItem(class AFSDPlayerState* PlayerState, bool Show);
	void MarkAsUnLocked();
	bool IsOwned(class UClass* CharacterClass, class AFSDPlayerState* PlayerState);
	TArray<struct FCraftingCost> GetResourceCost();
	int GetRequiredPlayerRank();
	int GetCraftingCreditsCost();
	struct FText GetCraftableName();
	class UTexture2D* GetCraftableIcon();
	struct FText GetCraftableDescription();
	void CraftItem(class UClass* CharacterClass, class AFSDPlayerState* PlayerState);
	void ClearUnLockedMark();
	bool CanCraft(class AFSDPlayerState* PlayerState);
};


// Class FSD.CrosshairWidget
// 0x0000 (0x0208 - 0x0208)
class UCrosshairWidget : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CrosshairWidget");
		return ptr;
	}


	void SetData(class AItem* Item);
};


// Class FSD.CrosshairAggregator
// 0x0020 (0x0128 - 0x0108)
class UCrosshairAggregator : public UItemAggregator
{
public:
	struct FScriptMulticastDelegate                    OnCrosshairCreated;                                       // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UUserWidget*                                 CrosshairWidget;                                          // 0x0118(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	class UClass*                                      CrossHairType;                                            // 0x0120(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CrosshairAggregator");
		return ptr;
	}


	void SetCrosshair(class UUserWidget* Widget);
};


// Class FSD.CryosprayItem
// 0x0130 (0x07B8 - 0x0688)
class ACryosprayItem : public AAmmoDrivenWeapon
{
public:
	class UDamageComponent*                            DamageComponent;                                          // 0x0688(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UStickyFlameSpawner*                         StickyFlames;                                             // 0x0690(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDamageComponent*                            AoEColdDamageComponent;                                   // 0x0698(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UMotionAudioController*                      VelocityAudio;                                            // 0x06A0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UParticleSystemComponent*                    FlameParticleComponent;                                   // 0x06A8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UParticleSystem*                             ChargeupParticles;                                        // 0x06B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystemComponent*                    ChargeupParticleInstance;                                 // 0x06B8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FDecalData                                  ImpactDecal;                                              // 0x06C0(0x0018) (CPF_Edit)
	float                                              DecalDelay;                                               // 0x06D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x06DC(0x0004) MISSED OFFSET
	class UParticleSystem*                             ImpactParticles;                                          // 0x06E0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystemComponent*                    ImpactParticleInstance;                                   // 0x06E8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	TArray<struct FName>                               FlameParameterNames;                                      // 0x06F0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	float                                              DamageSphereRadius;                                       // 0x0700(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxFlameDistance;                                         // 0x0704(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FlameGrowthPerSecond;                                     // 0x0708(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              friendlyFireModifier;                                     // 0x070C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ChargeupTime;                                             // 0x0710(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ChargeDownTime;                                           // 0x0714(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0718(0x0001) MISSED OFFSET
	bool                                               IsCharging;                                               // 0x0719(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x071A(0x0002) MISSED OFFSET
	float                                              ChargeProgress;                                           // 0x071C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               bRepressurerising;                                        // 0x0720(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0721(0x0003) MISSED OFFSET
	float                                              RepressurerisingDoneAtPct;                                // 0x0724(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ChargeUpFadeOutTime;                                      // 0x0728(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x072C(0x0004) MISSED OFFSET
	class UAudioComponent*                             ChargeUpAudioComponent;                                   // 0x0730(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              PressureTime;                                             // 0x0738(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PressureDropMultiplier;                                   // 0x073C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PressureGainMultiplier;                                   // 0x0740(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CurrentPressure;                                          // 0x0744(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              RePressureDuration;                                       // 0x0748(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RePressureProgress;                                       // 0x074C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              IceDamage;                                                // 0x0750(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0754(0x0004) MISSED OFFSET
	class UDamageClass*                                IceDamageClass;                                           // 0x0758(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	float                                              ColdDamage;                                               // 0x0760(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0764(0x0004) MISSED OFFSET
	class UDamageClass*                                ColdDamageClass;                                          // 0x0768(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	TArray<class UItemUpgrade*>                        upgrades;                                                 // 0x0770(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	bool                                               LongReachEnabled;                                         // 0x0780(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0xF];                                       // 0x0781(0x000F) MISSED OFFSET
	bool                                               AoEColdEnabled;                                           // 0x0790(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0x27];                                      // 0x0791(0x0027) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CryosprayItem");
		return ptr;
	}


	void TriggerAoECold();
	void ServerDoDamage(const struct FVector_NetQuantize& Start, const struct FVector_NetQuantize& End, unsigned char power);
	void ReceiveRepressurisingChanged(bool Value);
	void OnTargetDamaged(class UHealthComponentBase* Health, float Amount, class UFSDPhysicalMaterial* PhysicalMaterial);
	void OnRep_IsCharging(bool OldValue);
};


// Class FSD.CryoSprayAnimInstance
// 0x0010 (0x0370 - 0x0360)
class UCryoSprayAnimInstance : public UAnimInstance
{
public:
	bool                                               IsFiring;                                                 // 0x0360(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0361(0x0003) MISSED OFFSET
	float                                              ChargeProgress;                                           // 0x0364(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              Pressure;                                                 // 0x0368(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x036C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CryoSprayAnimInstance");
		return ptr;
	}

};


// Class FSD.DailyMissionSettings
// 0x0018 (0x0048 - 0x0030)
class UDailyMissionSettings : public UDataAsset
{
public:
	TArray<class UMutator*>                            Mutators;                                                 // 0x0030(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor)
	class UClass*                                      SecondayObjective;                                        // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DailyMissionSettings");
		return ptr;
	}

};


// Class FSD.DailyMissionManager
// 0x0018 (0x0040 - 0x0028)
class UDailyMissionManager : public UObject
{
public:
	class UDailyMission*                               ActiveDailyMission;                                       // 0x0028(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UGeneratedMission*                           CurrentMission;                                           // 0x0030(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DailyMissionManager");
		return ptr;
	}


	class UDailyMission* GetDailyMission();
	class UGeneratedMission* GetCurrentSingleMission();
	bool CompleteCurrentSingleMission();
};


// Class FSD.DailyMission
// 0x0020 (0x0048 - 0x0028)
class UDailyMission : public UObject
{
public:
	TArray<class UGeneratedMission*>                   missions;                                                 // 0x0028(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	class UBiome*                                      Biome;                                                    // 0x0038(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                MissionsCompleted;                                        // 0x0040(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DailyMission");
		return ptr;
	}

};


// Class FSD.DamageBonusBase
// 0x0000 (0x0030 - 0x0030)
class UDamageBonusBase : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DamageBonusBase");
		return ptr;
	}

};


// Class FSD.FlatDamageBonus
// 0x0010 (0x0040 - 0x0030)
class UFlatDamageBonus : public UDamageBonusBase
{
public:
	float                                              Damage;                                                   // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0038(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FlatDamageBonus");
		return ptr;
	}

};


// Class FSD.TargetSpecificDamageBonus
// 0x0058 (0x0088 - 0x0030)
class UTargetSpecificDamageBonus : public UDamageBonusBase
{
public:
	float                                              Bonus;                                                    // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FGameplayTagQuery                           TagQuery;                                                 // 0x0038(0x0048) (CPF_Edit)
	struct FName                                       Key;                                                      // 0x0080(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TargetSpecificDamageBonus");
		return ptr;
	}

};


// Class FSD.DamageConversionBonus
// 0x0010 (0x0040 - 0x0030)
class UDamageConversionBonus : public UDamageBonusBase
{
public:
	class UDamageClass*                                DamageClass;                                              // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ConversionPercentage;                                     // 0x0038(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               DamageIsAdded;                                            // 0x003C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DamageConversionBonus");
		return ptr;
	}

};


// Class FSD.TargetStateDamageBonus
// 0x0010 (0x0040 - 0x0030)
class UTargetStateDamageBonus : public UDamageBonusBase
{
public:
	ETargetStateDamageBonusType                        TargetState;                                              // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              Bonus;                                                    // 0x0034(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDamageClass*                                DamageClass;                                              // 0x0038(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TargetStateDamageBonus");
		return ptr;
	}

};


// Class FSD.StatusDamageBonus
// 0x0020 (0x0050 - 0x0030)
class UStatusDamageBonus : public UDamageBonusBase
{
public:
	TArray<class UClass*>                              StatusEffects;                                            // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	float                                              Bonus;                                                    // 0x0040(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0048(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StatusDamageBonus");
		return ptr;
	}

};


// Class FSD.PushStatusEffectDamageBonus
// 0x0020 (0x0050 - 0x0030)
class UPushStatusEffectDamageBonus : public UDamageBonusBase
{
public:
	struct FScriptMulticastDelegate                    OnPushedEffect;                                           // 0x0030(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference)
	class UClass*                                      StatusEffect;                                             // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Chance;                                                   // 0x0048(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PushStatusEffectDamageBonus");
		return ptr;
	}

};


// Class FSD.FearAoEBonus
// 0x0008 (0x0038 - 0x0030)
class UFearAoEBonus : public UDamageBonusBase
{
public:
	float                                              FearFactor;                                               // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Range;                                                    // 0x0034(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FearAoEBonus");
		return ptr;
	}

};


// Class FSD.GatlingHotShellsBonus
// 0x0000 (0x0040 - 0x0040)
class UGatlingHotShellsBonus : public UDamageConversionBonus
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GatlingHotShellsBonus");
		return ptr;
	}

};


// Class FSD.DamageClass
// 0x0018 (0x0048 - 0x0030)
class UDamageClass : public UDataAsset
{
public:
	class UPawnStat*                                   ResistanceStat;                                           // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RagdollScale;                                             // 0x0038(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	class UTexture2D*                                  IndicatorImage;                                           // 0x0040(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DamageClass");
		return ptr;
	}

};


// Class FSD.DamageSettings
// 0x00B0 (0x00E0 - 0x0030)
class UDamageSettings : public UDataAsset
{
public:
	float                                              TemperatureChangePerColdDamagePoint;                      // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TemperatureChangePerIceDamagePoint;                       // 0x0034(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TemperatureChangePerHeatDamagePoint;                      // 0x0038(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TemperatureChangePerFireDamagePoint;                      // 0x003C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DeFrostPerPhysicalDamage;                                 // 0x0040(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	class UClass*                                      EnemyOnFireStatusEffect;                                  // 0x0048(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      PlayerOnFireStatusEffect;                                 // 0x0050(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<struct FDecalData>                          ImpactDecals;                                             // 0x0058(0x0010) (CPF_Edit, CPF_EditFixedSize, CPF_ZeroConstructor)
	struct FRuntimeFloatCurve                          ArmorToArmorDamageBreakingCurve;                          // 0x0068(0x0078) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DamageSettings");
		return ptr;
	}

};


// Class FSD.DamageComponent
// 0x00A0 (0x0190 - 0x00F0)
class UDamageComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTargetKilledEvent;                                      // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTargetDamagedEvent;                                     // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnNoTargetHitEvent;                                       // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0120(0x0004) MISSED OFFSET
	float                                              Damage;                                                   // 0x0124(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ArmorDamageMultiplier;                                    // 0x0128(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0130(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              WeakpointDamageMultiplier;                                // 0x0138(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              friendlyFireModifier;                                     // 0x013C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               StaggerOnlyOnWeakpointHit;                                // 0x0140(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0141(0x0003) MISSED OFFSET
	float                                              StaggerChance;                                            // 0x0144(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              StaggerDuration;                                          // 0x0148(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FearFactor;                                               // 0x014C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UDamageBonusBase*>                    DamageBonuses;                                            // 0x0150(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	bool                                               UseAreaOfEffect;                                          // 0x0160(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0161(0x0003) MISSED OFFSET
	float                                              RadialDamage;                                             // 0x0164(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDamageClass*                                RadialDamageClass;                                        // 0x0168(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinDamagePct;                                             // 0x0170(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DamageRadius;                                             // 0x0174(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              maxDamageRadius;                                          // 0x0178(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x14];                                      // 0x017C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DamageComponent");
		return ptr;
	}


	float GetDamage();
	void DamageTarget(class AActor* Target, const struct FVector& Location, class UPrimitiveComponent* HitComponent, class UFSDPhysicalMaterial* PhysMat);
};


// Class FSD.DashPoints
// 0x0058 (0x0148 - 0x00F0)
class UDashPoints : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET
	EDashPointsGenerationMode                          GenerationMode;                                           // 0x0100(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0101(0x0007) MISSED OFFSET
	class UDeepPathfinderMovement*                     Movement;                                                 // 0x0108(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              PointOffset;                                              // 0x0110(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxRangeFromPlayer;                                       // 0x0114(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinRangeFromPlayer;                                       // 0x0118(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinHeightAboveTarget;                                     // 0x011C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxHeightAboveTarget;                                     // 0x0120(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RandMin;                                                  // 0x0124(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RandMax;                                                  // 0x0128(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              safeReduction;                                            // 0x012C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class AActor*                                      targetActor;                                              // 0x0130(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0138(0x0008) MISSED OFFSET
	bool                                               DrawDebug;                                                // 0x0140(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               IgnoreRules;                                              // 0x0141(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0142(0x0002) MISSED OFFSET
	int                                                IgnoreTheClosestPoints;                                   // 0x0144(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DashPoints");
		return ptr;
	}


	void SetTargetActor(class AActor* Actor);
	struct FVector GetRandomValid(class AActor* targetActor, bool RandomPoint, bool* success);
	struct FVector GetFurthestValid(bool* success);
};


// Class FSD.DeadStateComponent
// 0x0008 (0x0130 - 0x0128)
class UDeadStateComponent : public UCharacterStateComponent
{
public:
	float                                              RespawnDelay;                                             // 0x0128(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DeadStateComponent");
		return ptr;
	}

};


// Class FSD.FSDDebrisSettings
// 0x0030 (0x0068 - 0x0038)
class UFSDDebrisSettings : public UDeveloperSettings
{
public:
	struct FSoftObjectPath                             DefaultInfluencerDensityCurve;                            // 0x0038(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_Config)
	struct FSoftObjectPath                             DefaultInfluencerSizeCurve;                               // 0x0050(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDDebrisSettings");
		return ptr;
	}

};


// Class FSD.CSGTriangleMapper
// 0x00A0 (0x00D0 - 0x0030)
class UCSGTriangleMapper : public UDataAsset
{
public:
	bool                                               Enabled;                                                  // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UTerrainMaterial*                            AttachToMaterial;                                         // 0x0038(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UTerrainType*>                        AttachToTypes;                                            // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	int                                                CellCategories;                                           // 0x0050(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DensityInM2;                                              // 0x0054(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinVerticalAngle;                                         // 0x0058(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxVerticalAngle;                                         // 0x005C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     ScaleMin;                                                 // 0x0060(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     ScaleMax;                                                 // 0x006C(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ScaleBias;                                                // 0x0078(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IndependentScaleAxes;                                     // 0x007C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x007D(0x0003) MISSED OFFSET
	struct FVector                                     BaseNormal;                                               // 0x0080(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              SurfaceNormalFactor;                                      // 0x008C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     SurfaceNormalLimiter;                                     // 0x0090(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RandomNormalFactor;                                       // 0x009C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RotationMinAngle;                                         // 0x00A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RotationMaxAngle;                                         // 0x00A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PosOffset;                                                // 0x00A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PosOffsetSurface;                                         // 0x00AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<struct FCellNoise>                          NoiseLayers;                                              // 0x00B0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	struct FDebrisCellNoiseParameters                  CellNoiseParameters;                                      // 0x00C0(0x0010) (CPF_Edit, CPF_EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CSGTriangleMapper");
		return ptr;
	}

};


// Class FSD.DebrisBase
// 0x0108 (0x01D8 - 0x00D0)
class UDebrisBase : public UCSGTriangleMapper
{
public:
	class UObject*                                     CaveInfluencer;                                           // 0x00D0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRuntimeFloatCurve                          InfluencerDensityCurve;                                   // 0x00D8(0x0078) (CPF_Edit)
	struct FRuntimeFloatCurve                          InfluencerSizeCurve;                                      // 0x0150(0x0078) (CPF_Edit)
	class UCurveFloat*                                 CaveInfluenceCurve;                                       // 0x01C8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UCurveFloat*                                 CaveInflunceSizeCurve;                                    // 0x01D0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DebrisBase");
		return ptr;
	}

};


// Class FSD.DebrisCarved
// 0x0058 (0x0230 - 0x01D8)
class UDebrisCarved : public UDebrisBase
{
public:
	EDebrisCarvedType                                  CarverType;                                               // 0x01D8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01D9(0x0007) MISSED OFFSET
	TArray<struct FUDebrisCarveMesh>                   Meshes;                                                   // 0x01E0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UTerrainMaterial*                            TerrainMaterial;                                          // 0x01F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FDebrisInfluence                            CaveInfluenceToAdd;                                       // 0x01F8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ECarveFilterType                                   Filter;                                                   // 0x0208(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0209(0x0003) MISSED OFFSET
	float                                              ExpensiveNoise;                                           // 0x020C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ECarveOptionsCellSize                              CarveCellSize;                                            // 0x0210(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0211(0x0003) MISSED OFFSET
	int                                                MinNumCarves;                                             // 0x0214(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                MaxNumCarves;                                             // 0x0218(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CarveOffsetRadius;                                        // 0x021C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      SpawnAttachClass;                                         // 0x0220(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AttachSpawnOffsetDistance;                                // 0x0228(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x022C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DebrisCarved");
		return ptr;
	}

};


// Class FSD.DebrisActorComponent
// 0x0000 (0x0240 - 0x0240)
class UDebrisActorComponent : public USceneComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DebrisActorComponent");
		return ptr;
	}

};


// Class FSD.DebrisItemComponent
// 0x0030 (0x0270 - 0x0240)
class UDebrisItemComponent : public UDebrisActorComponent
{
public:
	class UDebrisPositioning*                          Debris;                                                   // 0x0240(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	TArray<struct FDebrisItemActorItem>                Actors;                                                   // 0x0248(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	float                                              InfluenceRange;                                           // 0x0258(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               UseAmount;                                                // 0x025C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x025D(0x0003) MISSED OFFSET
	struct FIRandRange                                 Amount;                                                   // 0x0260(0x0008) (CPF_Edit)
	int                                                AmountSearchMultiplier;                                   // 0x0268(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x026C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DebrisItemComponent");
		return ptr;
	}

};


// Class FSD.DebrisDataComponent
// 0x0010 (0x0250 - 0x0240)
class UDebrisDataComponent : public UDebrisActorComponent
{
public:
	class UDebrisBase*                                 Debris;                                                   // 0x0240(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0248(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DebrisDataComponent");
		return ptr;
	}

};


// Class FSD.DebrisVeinComponent
// 0x0010 (0x0250 - 0x0240)
class UDebrisVeinComponent : public UDebrisActorComponent
{
public:
	class UTerrainMaterial*                            Material;                                                 // 0x0240(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UVeinResourceCreator*                        VeinCreator;                                              // 0x0248(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DebrisVeinComponent");
		return ptr;
	}

};


// Class FSD.DebrisPatchComponent
// 0x0010 (0x0250 - 0x0240)
class UDebrisPatchComponent : public UDebrisActorComponent
{
public:
	class UTerrainMaterial*                            Material;                                                 // 0x0240(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UPatchResourceCreator*                       PatchCreator;                                             // 0x0248(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DebrisPatchComponent");
		return ptr;
	}

};


// Class FSD.InfluencerComponent
// 0x00F0 (0x0330 - 0x0240)
class UInfluencerComponent : public UDebrisActorComponent
{
public:
	struct FRuntimeFloatCurve                          ProbabilityCurve;                                         // 0x0240(0x0078) (CPF_Edit)
	struct FRuntimeFloatCurve                          ScaleCurve;                                               // 0x02B8(0x0078) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.InfluencerComponent");
		return ptr;
	}

};


// Class FSD.DebrisProbabilityComponent
// 0x0010 (0x0250 - 0x0240)
class UDebrisProbabilityComponent : public UDebrisActorComponent
{
public:
	struct FRandRange                                  ProbabilityRange;                                         // 0x0240(0x0008) (CPF_Edit)
	bool                                               IsProbabilityShared;                                      // 0x0248(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0249(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DebrisProbabilityComponent");
		return ptr;
	}

};


// Class FSD.DebrisDataActor
// 0x0018 (0x0340 - 0x0328)
class ADebrisDataActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0328(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DebrisDataActor");
		return ptr;
	}

};


// Class FSD.DebrisInstances
// 0x0080 (0x07F0 - 0x0770)
class UDebrisInstances : public UHierarchicalInstancedStaticMeshComponent
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0770(0x0004) MISSED OFFSET
	int                                                DebrisIndex;                                              // 0x0774(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x78];                                      // 0x0778(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DebrisInstances");
		return ptr;
	}

};


// Class FSD.DebrisMesh
// 0x0050 (0x0228 - 0x01D8)
class UDebrisMesh : public UDebrisBase
{
public:
	TArray<struct FDebrisStaticMesh>                   Meshes;                                                   // 0x01D8(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UMaterialInterface*                          CommonMaterial;                                           // 0x01E8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FText                                       InGameName;                                               // 0x01F0(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       InGameDescription;                                        // 0x0208(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	float                                              StartCullDistance;                                        // 0x0220(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              EndCullDistance;                                          // 0x0224(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DebrisMesh");
		return ptr;
	}

};


// Class FSD.DebrisCellNoise
// 0x0028 (0x0058 - 0x0030)
class UDebrisCellNoise : public UDataAsset
{
public:
	int                                                Seed;                                                     // 0x0030(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     CellSize;                                                 // 0x0034(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                NumValues;                                                // 0x0040(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     InvCellSize;                                              // 0x0044(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               Initialized;                                              // 0x0050(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DebrisCellNoise");
		return ptr;
	}

};


// Class FSD.DebrisPositioning
// 0x0000 (0x01D8 - 0x01D8)
class UDebrisPositioning : public UDebrisBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DebrisPositioning");
		return ptr;
	}

};


// Class FSD.DebrisSet
// 0x0010 (0x0040 - 0x0030)
class UDebrisSet : public UDataAsset
{
public:
	TArray<class UDebrisBase*>                         Debris;                                                   // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DebrisSet");
		return ptr;
	}

};


// Class FSD.CustomItemPlacementHandling
// 0x0000 (0x0028 - 0x0028)
class UCustomItemPlacementHandling : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CustomItemPlacementHandling");
		return ptr;
	}

};


// Class FSD.InfluencerSpawnComponent
// 0x0010 (0x0250 - 0x0240)
class UInfluencerSpawnComponent : public USceneComponent
{
public:
	float                                              Range;                                                    // 0x0240(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0244(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.InfluencerSpawnComponent");
		return ptr;
	}

};


// Class FSD.DeepCSGSection
// 0x0008 (0x0330 - 0x0328)
class ADeepCSGSection : public AActor
{
public:
	class UDeepProceduralMeshComponent*                DeepMesh;                                                 // 0x0328(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DeepCSGSection");
		return ptr;
	}

};


// Class FSD.DeepCSGWorld
// 0xC558 (0xC880 - 0x0328)
class ADeepCSGWorld : public AActor
{
public:
	class UTerrainMaterial*                            DebugCarveInsideTerrainMaterial;                          // 0x0328(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainMaterial*                            DebugCarveOutsizeTerrainMaterial;                         // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainMaterial*                            DebugCarveEdgeTerrainMaterial;                            // 0x0338(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainMaterial*                            GoldTerrainMaterial;                                      // 0x0340(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainMaterial*                            MOMTerrrainMaterial;                                      // 0x0348(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainMaterial*                            NitraTerrrainMaterial;                                    // 0x0350(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainMaterial*                            EmptyTerrainMaterial;                                     // 0x0358(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainMaterial*                            DefaultBurntTerrainMaterial;                              // 0x0360(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainMaterial*                            DefaultHardRockMaterial;                                  // 0x0368(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainMaterial*                            DefaultBedRockMaterial;                                   // 0x0370(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainType*                                GoldTerrainType;                                          // 0x0378(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainType*                                MOMTerrainType;                                           // 0x0380(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainType*                                RockTerrainType;                                          // 0x0388(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainType*                                CrystalTerrainType;                                       // 0x0390(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainType*                                EmptyTerrainType;                                         // 0x0398(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainType*                                DirtTerrainType;                                          // 0x03A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainType*                                DefaultBurntTerrainType;                                  // 0x03A8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainMaterialsCollection*                 TerrainMaterials;                                         // 0x03B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UDebrisSet*>                          StandardDebrisSets;                                       // 0x03B8(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UDebrisBase*>                         AddedDebris;                                              // 0x03C8(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<class UDebrisCarved*>                       DebrisLargeCarved;                                        // 0x03D8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	TArray<class UDebrisCarved*>                       DebrisSmallCarved;                                        // 0x03E8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	TArray<class UDebrisBase*>                         DebrisMeshes;                                             // 0x03F8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	class UMaterialInterface*                          DefaultScannerMaterial;                                   // 0x0408(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class ADebrisDataActor*                            DebrisActorInstance;                                      // 0x0410(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                DebrisActorIndex;                                         // 0x0418(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x041C(0x0004) MISSED OFFSET
	class AProceduralSetup*                            ProceduralSetup;                                          // 0x0420(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0428(0x0018) MISSED OFFSET
	class UAsyncPathRequests*                          AsyncPathRequests;                                        // 0x0440(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FScriptMulticastDelegate                    OnBaseLayerCommitDone;                                    // 0x0448(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBaseLayerFinalCommitDone;                               // 0x0458(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	TArray<class AActor*>                              TerrainAttachedActors;                                    // 0x0468(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<TWeakObjectPtr<class UObject>>              TerrainListeners;                                         // 0x0478(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<class UDebrisBase*>                         RegisteredDebrisList;                                     // 0x0488(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<struct FDebrisWhenCarving>                  DebrisWhenCarvingList;                                    // 0x0498(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<class UDebrisInstances*>                    DebrisInstanceList;                                       // 0x04A8(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)
	TArray<TWeakObjectPtr<class UPrimitiveComponent>>  ShowAlwaysScannerComponents;                              // 0x04B8(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)
	TArray<TWeakObjectPtr<class UPrimitiveComponent>>  FogOfWarScannerComponents;                                // 0x04C8(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData02[0xC2A0];                                    // 0x04D8(0xC2A0) MISSED OFFSET
	struct FTerrainLateJoinData                        LateJoinData;                                             // 0xC778(0x0088) (CPF_Transient)
	TArray<struct FEncodedChunkId>                     visibleChunks;                                            // 0xC800(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData03[0x70];                                      // 0xC810(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DeepCSGWorld");
		return ptr;
	}


	void UnRegisterScannerComponent(class UPrimitiveComponent* Component);
	void TerrainOp_PickAxe(const struct FPickaxeDigOperationData& Data);
	void TerrainOp_Melt(const struct FMeltOperationData& Data);
	void TerrainOp_Explode(const struct FGrenadeExplodeOperationData& Data);
	void TerrainOp_Drill(const struct FDrillOperationData& Data);
	void TerrainOp_CarveSTLMesh(const struct FCarveWithSTLMeshOperationData& Data);
	void TerrainOp_CarveCollider(const struct FCarveWithColliderOperationData& Data);
	void SetVisibleToScanner(const struct FVector& Center, const struct FVector& Range);
	void SelectDebrisSettings();
	void ResetEntireWorld();
	void RemoveDebrisInstance_TerrainOp2(int instance, int Component);
	void RemoveDebrisInSphere(const struct FVector& Position, float Radius, bool onlyFragile, bool alsoDurable);
	void RegisterScannerComponent(class UPrimitiveComponent* Component, bool useFogOfWar);
	bool Raycast(const struct FVector& Start, const struct FVector& Direction, float MaxDistance, ELandscapeCellFilter Filter, struct FCSGRaycastHitInfo* HitInfo);
	bool Linecast(const struct FVector& Start, const struct FVector& End, ELandscapeCellFilter Filter, struct FCSGRaycastHitInfo* HitInfo);
	bool IsPositionVisibleToScanner(const struct FVector& Pos);
	bool IsPointInsideTerrain(const struct FVector& Pos);
	int GetTerrainHash();
	static int GetShadowQuality();
	class ADebrisDataActor* GetDebrisDataActor();
	void GetAllTerrainActorsAroundPoint(const struct FVector& Center, const struct FVector& Range, TArray<class AActor*>* TerrainActors);
	void GenerateAllMeshes();
	void FinishGeneration_Blocking();
	float FindTotalVolumeOfMaterialInWorld(class UTerrainMaterial* Material);
	void CarveWithSTLMeshUsingTransform(class USTLMeshCarver* MeshCarver, class UTerrainMaterial* Material, ECarveFilterType CarveFilter, const struct FTransform& Transform, EPreciousMaterialOptions Precious);
	void CarveWithSTLMesh(class USTLMeshCarver* MeshCarver, class UTerrainMaterial* Material, ECarveFilterType CarveFilter, const struct FVector& Pos, const struct FQuat& Orientation, const struct FVector& Scale, EPreciousMaterialOptions Precious);
	void CarveWithMeshUsingTransform(class UStaticMesh* StaticMesh, class UTerrainMaterial* Material, ECarveFilterType CarveFilter, const struct FTransform& Transform, float ExpensiveNoise, EPreciousMaterialOptions Precious);
	void CarveWithMesh(class UStaticMesh* StaticMesh, class UTerrainMaterial* Material, ECarveFilterType CarveFilter, const struct FVector& Pos, const struct FQuat& Orientation, const struct FVector& Scale, EPreciousMaterialOptions Precious);
	float CalcApproximateTerrainDensity(const struct FVector& Pos, float Radius);
	void BaseLayerCommitFinal(bool blocking);
	void BaseLayerCommit(bool blocking, bool scheduleTesselation);
	void AttachActorToTerrain(class AActor* Actor, const struct FVector& Pos);
	void ApplyDebrisCarvers();
	void ApplyBaseDebrisCarvers(TArray<class UDebrisCarved*> Carvers);
};


// Class FSD.AsyncPathRequestsInterface
// 0x0000 (0x0028 - 0x0028)
class UAsyncPathRequestsInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AsyncPathRequestsInterface");
		return ptr;
	}

};


// Class FSD.AsyncPathRequests
// 0x0018 (0x0108 - 0x00F0)
class UAsyncPathRequests : public UActorComponent
{
public:
	TArray<TWeakObjectPtr<class UObject>>              RequestListeners;                                         // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0100(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AsyncPathRequests");
		return ptr;
	}

};


// Class FSD.DeepPathfinderMovement
// 0x02C8 (0x0440 - 0x0178)
class UDeepPathfinderMovement : public UPawnMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0178(0x0008) MISSED OFFSET
	bool                                               UseDormancy;                                              // 0x0180(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0181(0x0003) MISSED OFFSET
	float                                              MaxPawnSpeed;                                             // 0x0184(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              StrafeSpeed;                                              // 0x0188(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinSlowdownAngle;                                         // 0x018C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxSlowdownAngle;                                         // 0x0190(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxStrafeDistance;                                        // 0x0194(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AlignDirectionSpeed;                                      // 0x0198(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FleeSpeedBoostMultiplier;                                 // 0x019C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxAcceleration;                                          // 0x01A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxBrakingDeceleration;                                   // 0x01A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              StanceDistance;                                           // 0x01A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AngleSpeedFilterFactor;                                   // 0x01AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	uint32_t                                           AIAvoidanceWeight;                                        // 0x01B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EDeepPathFinderType                                PathfinderType;                                           // 0x01B4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EDeepPathFinderSize                                PathfinderSize;                                           // 0x01B5(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EDeepPathFinderPreference                          PathfinderPreference;                                     // 0x01B6(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               AlignTowardsTargetIfStationary;                           // 0x01B7(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               AllowSlowTickRateWhenNotVisible;                          // 0x01B8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ForceAPathIfNoneFound;                                    // 0x01B9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x01BA(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPathBegin;                                              // 0x01C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPathFinished;                                           // 0x01D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRefreshDestination;                                     // 0x01E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStateChanged;                                           // 0x01F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData03[0x20];                                      // 0x0200(0x0020) MISSED OFFSET
	class ADeepCSGWorld*                               CSGWorld;                                                 // 0x0220(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	uint32_t                                           PathMovedDist;                                            // 0x0228(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	uint32_t                                           LocalPathMovedDist;                                       // 0x022C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FDeepRepPath                                Path;                                                     // 0x0230(0x00D0) (CPF_Net, CPF_Transient)
	class UFakeMoverSettings*                          MoveSettings;                                             // 0x0300(0x0008) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class AActor*                                      targetActor;                                              // 0x0308(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                CurrentPathIndex;                                         // 0x0310(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              CurrentPathFraction;                                      // 0x0314(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     Destination;                                              // 0x0318(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0324(0x0004) MISSED OFFSET
	class AActor*                                      DestinationActor;                                         // 0x0328(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              AcceptanceRadius;                                         // 0x0330(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               OnlyPartPath;                                             // 0x0334(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0335(0x0003) MISSED OFFSET
	float                                              PauseMovementTime;                                        // 0x0338(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	EDeepMovementMode                                  MoveMode;                                                 // 0x033C(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x033D(0x0003) MISSED OFFSET
	class UPawnStatsComponent*                         PawnStats;                                                // 0x0340(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0348(0x0004) MISSED OFFSET
	struct FVector                                     LastForwardDir;                                           // 0x034C(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              VerticalAngleSpeed;                                       // 0x0358(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              HorizontalAngleSpeed;                                     // 0x035C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsStrafing;                                               // 0x0360(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               HasOustandingPathRequest;                                 // 0x0361(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0x26];                                      // 0x0362(0x0026) MISSED OFFSET
	float                                              PostponedTickTime;                                        // 0x0388(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               LastMoveSuccessful;                                       // 0x038C(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               HandleRotation;                                           // 0x038D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData09[0x1A];                                      // 0x038E(0x001A) MISSED OFFSET
	struct FVector                                     UnfilteredPosition;                                       // 0x03A8(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              DampOmega;                                                // 0x03B4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               UseMovementSpring;                                        // 0x03B8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData10[0x7];                                       // 0x03B9(0x0007) MISSED OFFSET
	struct FFakeMoverState                             FakePhysicsMove;                                          // 0x03C0(0x0060) (CPF_Edit, CPF_BlueprintVisible)
	float                                              FakeSyncTime;                                             // 0x0420(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData11[0x1C];                                      // 0x0424(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DeepPathfinderMovement");
		return ptr;
	}


	void UpdateDestination(const struct FVector& Dest);
	void TeleportTo(const struct FVector& destLoc, const struct FRotator& destRot);
	void StopMove();
	void StopAttackStance();
	bool StartMoveToActor(class AActor* Dest, float AcceptanceRadius);
	bool StartMoveTo(const struct FVector& Dest, float AcceptanceRadius);
	bool StartFleeFrom(const struct FVector& dangerPos, float distance);
	void StartFakePhysicsMoveSet(class UFakeMoverSettings* MoveSettings);
	void StartFakePhysics(const struct FVector& Vel);
	void StartAttackStance(const struct FVector& stancePos);
	void SnapToPathfinder();
	void SetSlowDownAngles(float Min, float Max);
	void SetMaxSpeed(float Speed);
	void SetHandleRotation(bool flag);
	void SetFreezeAlignment(bool Freeze);
	void SetControlledExternally(bool controlled);
	void PauseMovement(float Time);
	bool PathExistTo(const struct FVector& Dest);
	bool PathExistsBetween(const struct FVector& From, const struct FVector& to);
	void OnRep_PathMovedDist(uint32_t lastPathMovedDist);
	void OnRep_Path(const struct FDeepRepPath& oldPath);
	void OnRep_MoveSettings(class UFakeMoverSettings* MoveSettings);
	bool IsFreezeAlignmentSet();
	float GetVerticalAngleSpeed();
	void GetRandomReachablePointAtApproximateDistance_Async(const struct FVector& Origin, float distance, const struct FLatentActionInfo& LatentInfo, bool* success, struct FVector* outPos);
	bool GetRandomReachablePointAtApproximateDistance(const struct FVector& Origin, float distance, struct FVector* outPos);
	struct FVector GetPathForwardDirection();
	EDeepMovementState GetMovementState();
	bool GetIsStrafing();
	float GetHorizontalAngleSpeed();
	class UFakeMoverSettings* GetCurrentFakePhysicsMoveSet();
	bool FlyToConnectedPosition(const struct FVector& destPos);
	struct FVector FindPathfinderPointAbove(const struct FVector& Pos);
	void FindNearestPathfinderPoint_Async(const struct FVector& Pos, float MaxDistance, const struct FLatentActionInfo& LatentInfo, bool* success, struct FVector* outPos);
	struct FVector FindNearestPathfinderPoint(const struct FVector& Pos, float MaxDistance);
	struct FQuat CalcPathfinderOrientation(const struct FVector& Pos, const struct FVector& forwardDir);
	void AddFakeMoverImpulse(const struct FVector& Impulse);
};


// Class FSD.DeepProceduralMeshComponent
// 0x0060 (0x05E0 - 0x0580)
class UDeepProceduralMeshComponent : public UMeshComponent
{
public:
	class UBodySetup*                                  ProcMeshBodySetup;                                        // 0x0580(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0588(0x0010) MISSED OFFSET
	class UTerrainMaterialsCollection*                 MaterialCollection;                                       // 0x0598(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UMaterialInterface*                          DefaultScannerMaterial;                                   // 0x05A0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x38];                                      // 0x05A8(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DeepProceduralMeshComponent");
		return ptr;
	}


	class UTerrainMaterial* FindTerrainMaterialFromPhysicalMaterial(class UFSDPhysicalMaterial* Material);
};


// Class FSD.DeepScanComponent
// 0x0058 (0x0148 - 0x00F0)
class UDeepScanComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x00F0(0x0040) MISSED OFFSET
	bool                                               ScanActive;                                               // 0x0130(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0131(0x0007) MISSED OFFSET
	class UTexture2D*                                  ScanTexture;                                              // 0x0138(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class ADeepCSGWorld*                               DeepWorld;                                                // 0x0140(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DeepScanComponent");
		return ptr;
	}


	void StopScan();
	void StartScan(const struct FTransform& trans);
};


// Class FSD.MapDrawer
// 0x0008 (0x0330 - 0x0328)
class AMapDrawer : public AActor
{
public:
	class ULineBatchComponent*                         LineBatcher;                                              // 0x0328(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MapDrawer");
		return ptr;
	}


	void DrawMapSphere(const struct FVector& Center, float Radius, int Segments, const struct FLinearColor& LineColor, float Thickness);
	void DrawMapLine(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FLinearColor& LineColor, float Thickness);
};


// Class FSD.GameEvent
// 0x0000 (0x0328 - 0x0328)
class AGameEvent : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GameEvent");
		return ptr;
	}

};


// Class FSD.DefenseEvent
// 0x0018 (0x0340 - 0x0328)
class ADefenseEvent : public AGameEvent
{
public:
	float                                              DefendDuration;                                           // 0x0328(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x032C(0x0004) MISSED OFFSET
	class UClass*                                      DefendWidget;                                             // 0x0330(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Progress;                                                 // 0x0338(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x033C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DefenseEvent");
		return ptr;
	}


	void OnRep_Progress(float OldValue);
};


// Class FSD.DetPack
// 0x0018 (0x0340 - 0x0328)
class ADetPack : public AActor
{
public:
	class UProjectileMovementComponent*                Movement;                                                 // 0x0328(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UExplosionComponent*                         Explosion;                                                // 0x0330(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               HasExploded;                                              // 0x0338(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsMoving;                                                 // 0x0339(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x033A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DetPack");
		return ptr;
	}


	void RecieveHitObject();
	void OnRep_IsMoving();
	void OnRep_HasExploded();
	void OnExploded();
};


// Class FSD.DetPackItem
// 0x00B0 (0x04F8 - 0x0448)
class ADetPackItem : public AAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0448(0x0010) MISSED OFFSET
	class UClass*                                      DetPackClass;                                             // 0x0458(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                FPThrowMontage;                                           // 0x0460(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                TPThrowMontage;                                           // 0x0468(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USkeletalMeshComponent*                      DetonatorFPMesh;                                          // 0x0470(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USkeletalMeshComponent*                      DetonatorTPMesh;                                          // 0x0478(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UForceFeedbackEffect*                        DetonatorTriggerForceFeedback;                            // 0x0480(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UCapacityHoldingItemAggregator*              Capacity;                                                 // 0x0488(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              ThrowVelocity;                                            // 0x0490(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              EnheiritOwnerVelocityScale;                               // 0x0494(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ThrowAngle;                                               // 0x0498(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Damage;                                                   // 0x049C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DamageRange;                                              // 0x04A0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CooldownAfterThrow;                                       // 0x04A4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CooldownAfterDetonation;                                  // 0x04A8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ThrowDelay;                                               // 0x04AC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ThrowZOffset;                                             // 0x04B0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04B4(0x0004) MISSED OFFSET
	class UDialogDataAsset*                            ShoutDetPackPlaced;                                       // 0x04B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            ShoutOutOfAmmo;                                           // 0x04C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x04C8(0x0004) MISSED OFFSET
	float                                              CooldownLeft;                                             // 0x04CC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TArray<class ADetPack*>                            ThrownPacks;                                              // 0x04D0(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<class UItemUpgrade*>                        DetPackUpgrades;                                          // 0x04E0(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData03[0x1];                                       // 0x04F0(0x0001) MISSED OFFSET
	bool                                               IsDetonatorOut;                                           // 0x04F1(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x04F2(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DetPackItem");
		return ptr;
	}


	void Simulate_ThrowGrenade();
	void Server_ThrowGrenade();
	void Server_Detonate();
	void Server_CycleItem();
	void OnRep_IsDetonatorOut();
};


// Class FSD.DialogDataAsset
// 0x0030 (0x0060 - 0x0030)
class UDialogDataAsset : public UDataAsset
{
public:
	bool                                               Enabled;                                                  // 0x0030(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               AudioOnly;                                                // 0x0031(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	float                                              ShoutCoolDown;                                            // 0x0034(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ShoutChance;                                              // 0x0038(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<struct FDialogStruct>                       Entries;                                                  // 0x0040(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<int>                                        ShuffledIndices;                                          // 0x0050(0x0010) (CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DialogDataAsset");
		return ptr;
	}


	int SelectIndex(class UObject* WorldContext);
	bool SelectEntry(class UObject* WorldContext, struct FDialogStruct* Dialog);
	struct FDialogStruct GetShout(int Index);
};


// Class FSD.DifficultyManager
// 0x0030 (0x0120 - 0x00F0)
class UDifficultyManager : public UActorComponent
{
public:
	float                                              DiversityDifficultyCost;                                  // 0x00F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x00F4(0x001C) MISSED OFFSET
	class AFSDGameMode*                                GameMode;                                                 // 0x0110(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class AFSDGameState*                               GameState;                                                // 0x0118(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DifficultyManager");
		return ptr;
	}


	class UDifficultySetting* SelectDifficulty(int Index);
	float GetSmallEnemyDamageResistance();
	float GetExtraLargeEnemyDamageResistance();
	float GetEnemyDamageResistance();
	float GetEnemyDamageModifier();
	float GetEnemyCountModifier();
	class UDifficultySetting* GetCurrentDifficulty();
};


// Class FSD.SavableDataAsset
// 0x0010 (0x0040 - 0x0030)
class USavableDataAsset : public UDataAsset
{
public:
	struct FGuid                                       SavegameID;                                               // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SavableDataAsset");
		return ptr;
	}

};


// Class FSD.DifficultySetting
// 0x0168 (0x01A8 - 0x0040)
class UDifficultySetting : public USavableDataAsset
{
public:
	struct FText                                       DifficultyName;                                           // 0x0040(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       ShortDifficultyName;                                      // 0x0058(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	class UClass*                                      CampaignRequirement;                                      // 0x0070(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              EnvironmentalDamageModifier;                              // 0x0078(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	TArray<float>                                      ExtraLargeEnemyDamageResistance;                          // 0x0080(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_EditFixedSize, CPF_ZeroConstructor)
	TArray<float>                                      EnemyDamageResistance;                                    // 0x0090(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_EditFixedSize, CPF_ZeroConstructor)
	TArray<float>                                      SmallEnemyDamageResistance;                               // 0x00A0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_EditFixedSize, CPF_ZeroConstructor)
	TArray<float>                                      EnemyDamageModifier;                                      // 0x00B0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_EditFixedSize, CPF_ZeroConstructor)
	TArray<float>                                      EnemyCountModifier;                                       // 0x00C0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_EditFixedSize, CPF_ZeroConstructor)
	struct FRandInterval                               EncounterDifficulty;                                      // 0x00D0(0x0010) (CPF_Edit)
	struct FRandInterval                               StationaryDifficulty;                                     // 0x00E0(0x0010) (CPF_Edit)
	float                                              SpecialEncounterChance;                                   // 0x00F0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              HazardBonus;                                              // 0x00F4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              friendlyFireModifier;                                     // 0x00F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	struct FRandInterval                               EnemyWaveInterval;                                        // 0x0100(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FRandInterval                               EnemyNormalWaveInterval;                                  // 0x0110(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FRandInterval                               EnemyNormalWaveDifficulty;                                // 0x0120(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	float                                              WaveStartDelayScale;                                      // 0x0130(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0134(0x0004) MISSED OFFSET
	struct FRandInterval                               EnemyDiversity;                                           // 0x0138(0x0010) (CPF_Edit)
	struct FIRandRange                                 SpecialEnemyPoolCount;                                    // 0x0148(0x0008) (CPF_Edit)
	struct FIRandRange                                 DisruptiveEnemyPoolCount;                                 // 0x0150(0x0008) (CPF_Edit)
	int                                                MinPoolSize;                                              // 0x0158(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x015C(0x0004) MISSED OFFSET
	struct FRandFloatInterval                          VeteranComposition;                                       // 0x0160(0x0010) (CPF_Edit)
	float                                              SpeedModifier;                                            // 0x0170(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AttackCooldownModifier;                                   // 0x0174(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ProjectileSpeedModifier;                                  // 0x0178(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                DifficultyGroup;                                          // 0x017C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                DifficultyGroupIndex;                                     // 0x0180(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0184(0x0004) MISSED OFFSET
	TArray<class UMissionStat*>                        MissionCompletedStats;                                    // 0x0188(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	bool                                               UseSharedHealthPool;                                      // 0x0198(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0199(0x0003) MISSED OFFSET
	float                                              HeathRegenerationMax;                                     // 0x019C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ReviveHealthRatio;                                        // 0x01A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x01A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DifficultySetting");
		return ptr;
	}


	bool IsUnlocked(class UObject* WorldContext);
	float AddHazardBonus(float BaseValue);
};


// Class FSD.DiscordWrapper
// 0x0130 (0x0158 - 0x0028)
class UDiscordWrapper : public UObject
{
public:
	unsigned char                                      UnknownData00[0xD0];                                      // 0x0028(0x00D0) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAcceptInvite;                                           // 0x00F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRejectInvite;                                           // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIgnoreInvite;                                           // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0128(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnJoinRequest;                                            // 0x0140(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0150(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DiscordWrapper");
		return ptr;
	}


	void RejectInviteSignature();
	void RejectInvite(const struct FString& userId);
	void IgnoreInviteSignature();
	void IgnoreInvite(const struct FString& userId);
	void AcceptInviteSignature();
	void AcceptInvite(const struct FString& userId);
};


// Class FSD.MULE
// 0x0018 (0x0450 - 0x0438)
class AMULE : public ADeepPathfinderCharacter
{
public:
	class UHealthComponent*                            HealthComponent;                                          // 0x0438(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USimpleObjectInfoComponent*                  ObjectInfo;                                               // 0x0440(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               IsDown;                                                   // 0x0448(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0449(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MULE");
		return ptr;
	}

};


// Class FSD.DonkeyCharacter
// 0x0010 (0x0460 - 0x0450)
class ADonkeyCharacter : public AMULE
{
public:
	class UResourceBank*                               ResourceBank;                                             // 0x0450(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UOutlineComponent*                           OutlineComponent;                                         // 0x0458(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DonkeyCharacter");
		return ptr;
	}


	void SetOpenForDeposit(bool Open);
};


// Class FSD.RepairableComponent
// 0x0040 (0x0130 - 0x00F0)
class URepairableComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnFullyRepairedEvent;                                     // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllResourcesAquiredEvent;                               // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRepairedEvent;                                          // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UGemResourceData*                            RequiresCarriedResource;                                  // 0x0120(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                ResourcesRequired;                                        // 0x0128(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsFullyRepaired;                                          // 0x012C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x012D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RepairableComponent");
		return ptr;
	}


	bool TryRepair(class APlayerCharacter* user);
	void OnRep_ResourcesRequired();
	void Cheat_Repair();
};


// Class FSD.DownedStateComponent
// 0x0020 (0x0148 - 0x0128)
class UDownedStateComponent : public UCharacterStateComponent
{
public:
	float                                              DownedHealthLossPerSecond;                                // 0x0128(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x012C(0x000C) MISSED OFFSET
	float                                              TerrainRemovedFallThreshold;                              // 0x0138(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ForceBleedOutHealthLossPerSecond;                         // 0x013C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0140(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DownedStateComponent");
		return ptr;
	}


	void Server_StopBleedOut();
	void Server_StartBleedOut();
};


// Class FSD.DrinkableActor
// 0x0008 (0x0330 - 0x0328)
class ADrinkableActor : public AActor
{
public:
	class UDrinkableDataAsset*                         DrinkableData;                                            // 0x0328(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DrinkableActor");
		return ptr;
	}


	void Pickup(class APlayerCharacter* byCharacter);
	void OnRep_DrinkableData();
	void Fill();
};


// Class FSD.DrinkableDataAsset
// 0x0098 (0x00C8 - 0x0030)
class UDrinkableDataAsset : public UDataAsset
{
public:
	struct FText                                       DrinkableName;                                            // 0x0030(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       DrinkableDescription;                                     // 0x0048(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	int                                                DrinkablePrice;                                           // 0x0060(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	class UTexture2D*                                  DrinkableIcon;                                            // 0x0068(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                RequiredPlayerRank;                                       // 0x0070(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EDrinkableAlcoholStrength                          AlcoholStrength;                                          // 0x0074(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
	class UDrinkableDataAsset*                         SupporterEdition;                                         // 0x0078(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bPlayFireworks;                                           // 0x0080(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	class UMissionStat*                                StatConsumed;                                             // 0x0088(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMissionStat*                                StatRoundOrdered;                                         // 0x0090(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      DrinkableActorClass;                                      // 0x0098(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      DrinkableItemClass;                                       // 0x00A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            OrderShout;                                               // 0x00A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            OrderCheeringShout;                                       // 0x00B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            DrinkSaluteShout;                                         // 0x00B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTemporaryBuff*                              buff;                                                     // 0x00C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DrinkableDataAsset");
		return ptr;
	}


	void OnRoundOrdered(class APlayerCharacter* Character);
	bool HasSupporterEdition();
	class UDrinkableDataAsset* GetDrinkableEdition(class UObject* WorldContext, class APlayerController* Player);
};


// Class FSD.DrinkableItem
// 0x0008 (0x0450 - 0x0448)
class ADrinkableItem : public AAnimatedItem
{
public:
	class UDrinkableDataAsset*                         DrinkableData;                                            // 0x0448(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DrinkableItem");
		return ptr;
	}


	void OnRep_DrinkableData();
	void Consume();
	void ClientConsumed();
	bool CheckCanSalute();
};


// Class FSD.DroneAbillityStatsComponent
// 0x0010 (0x0100 - 0x00F0)
class UDroneAbillityStatsComponent : public UActorComponent
{
public:
	bool                                               UseOwnArmorDamageMultiplier;                              // 0x00F0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x00F1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DroneAbillityStatsComponent");
		return ptr;
	}

};


// Class FSD.DroneCharacter
// 0x0018 (0x0450 - 0x0438)
class ADroneCharacter : public ADeepPathfinderCharacter
{
public:
	class UHealthComponent*                            HealthComponent;                                          // 0x0438(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UOutlineComponent*                           OutlineComponent;                                         // 0x0440(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USimpleObjectInfoComponent*                  ObjectInfo;                                               // 0x0448(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DroneCharacter");
		return ptr;
	}

};


// Class FSD.DroneDisplayActionComponent
// 0x0000 (0x0240 - 0x0240)
class UDroneDisplayActionComponent : public USceneComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DroneDisplayActionComponent");
		return ptr;
	}


	void SetMode(EDroneActions droneAction);
};


// Class FSD.DroneFlame
// 0x0048 (0x0370 - 0x0328)
class ADroneFlame : public AActor
{
public:
	class UParticleSystemComponent*                    FlameParticles;                                           // 0x0328(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDamageComponent*                            Damage;                                                   // 0x0330(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0338(0x0008) MISSED OFFSET
	TArray<struct FName>                               FlameParameterNames;                                      // 0x0340(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UClass*                                      OnFireStatusEffect;                                       // 0x0350(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DamageTickRate;                                           // 0x0358(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x035C(0x0004) MISSED OFFSET
	float                                              Duration;                                                 // 0x0360(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FlameDiameter;                                            // 0x0364(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Range;                                                    // 0x0368(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x036C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DroneFlame");
		return ptr;
	}

};


// Class FSD.DroneMiningToolBase
// 0x0068 (0x0158 - 0x00F0)
class UDroneMiningToolBase : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    HitSomething;                                             // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference)
	unsigned char                                      UnknownData00[0x14];                                      // 0x0100(0x0014) MISSED OFFSET
	float                                              MineRadius;                                               // 0x0114(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0118(0x0004) MISSED OFFSET
	float                                              TimeToFirstHit;                                           // 0x011C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TomeToSecondHit;                                          // 0x0120(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TimeToReset;                                              // 0x0124(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0128(0x0018) MISSED OFFSET
	class AActor*                                      MineralActor;                                             // 0x0140(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class AActor*                                      Owner;                                                    // 0x0148(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0150(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DroneMiningToolBase");
		return ptr;
	}


	void StopMining();
	void StartMining();
	void SpawnEffects(class UTerrainMaterial* aTerrainMaterial, bool aParialHit, const struct FVector_NetQuantize& aLocation, const struct FVector_NetQuantize& aImpactNormal);
	void SetLocationToMine(const struct FVector& Location);
};


// Class FSD.DropPod
// 0x0070 (0x0398 - 0x0328)
class ADropPod : public AActor
{
public:
	float                                              DropHeight;                                               // 0x0328(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     TargetLocation;                                           // 0x032C(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData)
	class UAutoCarverComponent*                        AutoCarver;                                               // 0x0338(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UCurveFloat*                                 DepartCurve;                                              // 0x0340(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CarverRotationSpeed;                                      // 0x0348(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     CarverScale;                                              // 0x034C(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DepartureTime;                                            // 0x0358(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x035C(0x0004) MISSED OFFSET
	struct FVector                                     StartLocation;                                            // 0x0360(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	EDropPodState                                      State;                                                    // 0x036C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x036D(0x0007) MISSED OFFSET
	float                                              DrillSpeed;                                               // 0x0374(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FreeFallAcceleration;                                     // 0x0378(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FreeFallSpeed;                                            // 0x037C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0380(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DropPod");
		return ptr;
	}


	void StartDrilling();
	void PrepForTakeOff();
	void OnRep_State();
	void OnPrepForTakeOff();
	void OnDroppodImpact();
	void OnDrillingStarted();
	void OnDeparting();
	static class ADropPod* DropToMission(class UObject* WorldContextObject, class UClass* podClass, const struct FVector& Location);
	void Depart();
};


// Class FSD.FSDMiningHead
// 0x0008 (0x03A0 - 0x0398)
class AFSDMiningHead : public ADropPod
{
public:
	class UResourceBank*                               ResourceBank;                                             // 0x0398(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDMiningHead");
		return ptr;
	}

};


// Class FSD.DualWieldWeapon
// 0x0028 (0x06B0 - 0x0688)
class ADualWieldWeapon : public AAmmoDrivenWeapon
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0688(0x0008) MISSED OFFSET
	class USkeletalMeshComponent*                      FPMeshLeft;                                               // 0x0690(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USkeletalMeshComponent*                      TPMeshLeft;                                               // 0x0698(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UAnimMontage*                                WPN_Left_Reload;                                          // 0x06A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                WPN_Left_TP_Reload;                                       // 0x06A8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DualWieldWeapon");
		return ptr;
	}

};


// Class FSD.DualWieldAnimInstance
// 0x0000 (0x0360 - 0x0360)
class UDualWieldAnimInstance : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DualWieldAnimInstance");
		return ptr;
	}

};


// Class FSD.DualMachinePistols
// 0x0010 (0x06C0 - 0x06B0)
class ADualMachinePistols : public ADualWieldWeapon
{
public:
	class UClass*                                      EmptyClipStatusEffect;                                    // 0x06B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x06B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DualMachinePistols");
		return ptr;
	}


	void Server_TriggerStatusEffect();
};


// Class FSD.ElectroBeam
// 0x0088 (0x03B0 - 0x0328)
class AElectroBeam : public AActor
{
public:
	class UCapsuleComponent*                           Collider;                                                 // 0x0328(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	TArray<class AActor*>                              ParentPlants;                                             // 0x0330(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	struct FVector_NetQuantize                         SourceLocation;                                           // 0x0340(0x000C) (CPF_Net, CPF_Transient)
	struct FVector_NetQuantize                         TargetLocation;                                           // 0x034C(0x000C) (CPF_Net, CPF_Transient)
	class USceneComponent*                             DelaySource;                                              // 0x0358(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneComponent*                             DelayTarget;                                              // 0x0360(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UParticleSystemComponent*                    BeamEffect;                                               // 0x0368(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UAudioComponent*                             ZappSound;                                                // 0x0370(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	TArray<class UClass*>                              StatusEffectsToApply;                                     // 0x0378(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	float                                              MaxLitTime;                                               // 0x0388(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinLitTime;                                               // 0x038C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxUnlitTime;                                             // 0x0390(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinUnlitTime;                                             // 0x0394(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ShouldFlicker;                                            // 0x0398(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsLit;                                                    // 0x0399(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x16];                                      // 0x039A(0x0016) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ElectroBeam");
		return ptr;
	}


	void SetTarget(class USceneComponent* TargetPoint);
	void SetSource(class USceneComponent* SourcePoint);
	void SetParents(class AActor* firstParent, class AActor* secondParent);
	void RecalculateBeam();
	void OnRep_TargetLocation();
	void OnRep_SourceLocation();
	void OnRep_Flag();
	void OnParentTwoDeath(class UHealthComponentBase* HealthComponent);
	void OnParentOneDeath(class UHealthComponentBase* HealthComponent);
	class UParticleSystemComponent* GetParticleEffect();
	class UCapsuleComponent* GetCollider();
	class UAudioComponent* GetAudio();
	void DelayedSetTarget(class USceneComponent* TargetPoint);
	void DelayedSetSource(class USceneComponent* SourcePoint);
	void DeactivateCollisionAndEffect();
};


// Class FSD.ElevatorPlant
// 0x00D8 (0x0400 - 0x0328)
class AElevatorPlant : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnStartTimelineEvent;                                     // 0x0328(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    COnStateChangedEvent;                                     // 0x0338(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UAudioComponent*                             MovingSoundComponent;                                     // 0x0348(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	class USoundCue*                                   GrabSound;                                                // 0x0350(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     RestPositionOffset;                                       // 0x0358(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     RelativeRestLocation;                                     // 0x0364(0x000C) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     RelativeDestinationLocation;                              // 0x0370(0x000C) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     BaseTangentDirectionOffset;                               // 0x037C(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     LeafTangentDirectionOffset;                               // 0x0388(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     LeafLocationNoise;                                        // 0x0394(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRotator                                    LeafNoiseRotator;                                         // 0x03A0(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BaseTangentLength;                                        // 0x03AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USplineMeshComponent*                        CSplineMesh;                                              // 0x03B0(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneComponent*                             CVineBase;                                                // 0x03B8(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneComponent*                             CVineLeaf;                                                // 0x03C0(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x03C8(0x0010) MISSED OFFSET
	float                                              InitialBaseTangentLength;                                 // 0x03D8(0x0004) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              LeafLocationNoiseSize;                                    // 0x03DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              VineMovementAlpha;                                        // 0x03E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsMoving;                                                 // 0x03E4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsPlayersOnLeaf;                                          // 0x03E5(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsOpen;                                                   // 0x03E6(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               Extend;                                                   // 0x03E7(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03E8(0x0008) MISSED OFFSET
	class UCurveFloat*                                 DipOffsetCurve;                                           // 0x03F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UCurveFloat*                                 LocationLerpCurve;                                        // 0x03F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ElevatorPlant");
		return ptr;
	}


	void SetLeafNoiseRotator(const struct FRotator& aRotator);
	void SetLeafLocationNoise(const struct FVector& aVector);
	void SetIsPlayersOnLeaf(bool aValue);
	void SetIsOpen(bool aValue);
	void SetIsExtended(bool aValue);
	void SetBaseTangentLength(float Value);
	void SetBaseTangentDirectionOffset(const struct FVector& aVector);
	void OnRep_RelavtiveDestinationLocation();
	void OnRep_Open();
	void OnMatchStarted();
	void MoreTick(const struct FVector& DipOffset, float aValue);
	float GetVineMovementAlpha();
	struct FVector GetRelativeRestLocation();
	struct FVector GetRelativeDestinationLocation();
	float GetLeafLocationNoiseSize();
	bool GetIsPlayersOnLeaf();
	bool GetIsMoving();
	bool GetIsExtended();
	float GetInitialTangentLenth();
};


// Class FSD.EliminationObjective
// 0x0038 (0x01A0 - 0x0168)
class UEliminationObjective : public UObjective
{
public:
	int                                                RoomCount;                                                // 0x0168(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x016C(0x0004) MISSED OFFSET
	class UDebrisPositioning*                          Positioning;                                              // 0x0170(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	class UClass*                                      ObjectToSpawn;                                            // 0x0178(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UEnemyDescriptor*                            EnemyTarget;                                              // 0x0180(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      ObjectiveTrackerClass;                                    // 0x0188(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                EnemyGroupDifficulty;                                     // 0x0190(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                EnemiesKilled;                                            // 0x0194(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                EnemiesToKill;                                            // 0x0198(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x019C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EliminationObjective");
		return ptr;
	}


	void OnRep_EnemiesToKill(int prevAmount);
	void OnRep_EnemiesKilled(int prevAmount);
	void OnEnemyKill(class APawn* EnemyPawn);
};


// Class FSD.EncounterSettings
// 0x00D8 (0x0108 - 0x0030)
class UEncounterSettings : public UDataAsset
{
public:
	struct FIRandRange                                 StationaryEnemyCount;                                     // 0x0030(0x0008) (CPF_Edit)
	struct FIRandRange                                 RareCritterCount;                                         // 0x0038(0x0008) (CPF_Edit)
	TArray<class UEnemyDescriptor*>                    CommonEnemies;                                            // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UEnemyDescriptor*>                    SpecialEnemies;                                           // 0x0050(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UEnemyDescriptor*>                    DisruptiveEnemies;                                        // 0x0060(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UEnemyDescriptor*>                    StationaryEnemies;                                        // 0x0070(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UEnemyDescriptor*>                    CommonCritters;                                           // 0x0080(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UEnemyDescriptor*>                    RareCritters;                                             // 0x0090(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UEnemyDescriptor*>                    SpecialEncounters;                                        // 0x00A0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	float                                              RequiredDifficultyPerDiversity;                           // 0x00B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              GlobalDifficultyScale;                                    // 0x00B4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRandInterval                               EncounterDifficulty;                                      // 0x00B8(0x0010) (CPF_Edit)
	struct FRandInterval                               StationaryDifficulty;                                     // 0x00C8(0x0010) (CPF_Edit)
	struct FRandRange                                  CritterSpawnDifficulty;                                   // 0x00D8(0x0008) (CPF_Edit)
	struct FGameplayTag                                SmallRoomTag;                                             // 0x00E0(0x0008) (CPF_Edit)
	struct FGameplayTag                                MediumRoomTag;                                            // 0x00E8(0x0008) (CPF_Edit)
	struct FGameplayTag                                LargeRoomTag;                                             // 0x00F0(0x0008) (CPF_Edit)
	float                                              SmallRoomDifficultyModifier;                              // 0x00F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MediumRoomDifficultyModifier;                             // 0x00FC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              LargeRoomDifficultyModifier;                              // 0x0100(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0104(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EncounterSettings");
		return ptr;
	}

};


// Class FSD.EncounterActor
// 0x0000 (0x0328 - 0x0328)
class AEncounterActor : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EncounterActor");
		return ptr;
	}


	void Receive_EncounterHasSpawned(class APawn* spawnedPawn);
};


// Class FSD.EncounterManager
// 0x0060 (0x0150 - 0x00F0)
class UEncounterManager : public UActorComponent
{
public:
	float                                              SpawnDistanceFromRoomBounds;                              // 0x00F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	TArray<struct FEncounterManagerItem>               Encounters;                                               // 0x00F8(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	class AProceduralSetup*                            ProceduralSetup;                                          // 0x0108(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UEnemySpawnManager*                          SpawnManager;                                             // 0x0110(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	TArray<class UEnemyDescriptor*>                    EnemyPool;                                                // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<class UEnemyDescriptor*>                    EncounterPool;                                            // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<class UEnemyDescriptor*>                    CritterPool;                                              // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0148(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EncounterManager");
		return ptr;
	}


	void ShowSpawnLocations();
	TArray<class UEnemyDescriptor*> GetEnemyPool();
	TArray<class UEnemyDescriptor*> GetEncounterPool();
	TArray<class UEnemyDescriptor*> GetCritterPool();
};


// Class FSD.EnemyFamily
// 0x0020 (0x0050 - 0x0030)
class UEnemyFamily : public UDataAsset
{
public:
	class UTexture2D*                                  Icon;                                                     // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FText                                       Name;                                                     // 0x0038(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyFamily");
		return ptr;
	}

};


// Class FSD.ObjectInfoComponent
// 0x0000 (0x00F0 - 0x00F0)
class UObjectInfoComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ObjectInfoComponent");
		return ptr;
	}


	class UDialogDataAsset* GetLookAtShout();
	struct FText GetInGameName();
	class UTexture2D* GetInGameIcon();
	struct FText GetInGameDescription();
};


// Class FSD.SimpleObjectInfoComponent
// 0x0040 (0x0130 - 0x00F0)
class USimpleObjectInfoComponent : public UObjectInfoComponent
{
public:
	struct FText                                       InGameName;                                               // 0x00F0(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       InGameDescription;                                        // 0x0108(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	class UDialogDataAsset*                            LookAtShout;                                              // 0x0120(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTexture2D*                                  Icon;                                                     // 0x0128(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SimpleObjectInfoComponent");
		return ptr;
	}


	void SetInGameName(const struct FString& GameName);
	void SetInGameDescription(const struct FString& GameDescription);
};


// Class FSD.EnemyComponent
// 0x0010 (0x0140 - 0x0130)
class UEnemyComponent : public USimpleObjectInfoComponent
{
public:
	class UEnemyFamily*                                Family;                                                   // 0x0130(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            KillShout;                                                // 0x0138(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyComponent");
		return ptr;
	}


	struct FText GetFamilyName();
	class UTexture2D* GetFamilyIcon();
};


// Class FSD.EnemyDescriptor
// 0x0110 (0x0140 - 0x0030)
class UEnemyDescriptor : public UDataAsset
{
public:
	TSoftObjectPtr<class UClass>                       enemyClass;                                               // 0x0030(0x0028) (CPF_Edit)
	TArray<class UEnemyDescriptor*>                    VeteranClasses;                                           // 0x0058(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TMap<class UBiome*, TSoftObjectPtr<class UClass>>  BiomeEnemyClassOverrides;                                 // 0x0068(0x0050) (CPF_Edit, CPF_ZeroConstructor)
	EEnemySignificance                                 EnemySignificance;                                        // 0x00B8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00B9(0x0003) MISSED OFFSET
	struct FVector                                     SpawnOffset;                                              // 0x00BC(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               UsesSpawnEffects;                                         // 0x00C8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00C9(0x0003) MISSED OFFSET
	ECreatureSize                                      CreatureSize;                                             // 0x00CC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00C9(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	class UDebrisPositioning*                          Positioning;                                              // 0x00D0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	int                                                PlacementCategories;                                      // 0x00D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET
	class UCaveInfluencer*                             CaveInfluencer;                                           // 0x00E0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<struct FEnemyDebris>                        Debris;                                                   // 0x00E8(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	float                                              InfluencerRange;                                          // 0x00F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	class UClass*                                      PlacementCarver;                                          // 0x0100(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EDeepPathFinderType                                PathfinderType;                                           // 0x0108(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0109(0x0003) MISSED OFFSET
	float                                              SpawnSpread;                                              // 0x010C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                IdealSpawnSize;                                           // 0x0110(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               CanBeUsedForConstantPressure;                             // 0x0114(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0115(0x0003) MISSED OFFSET
	float                                              DifficultyRating;                                         // 0x0118(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData)
	int                                                MinSpawnCount;                                            // 0x011C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData)
	int                                                MaxSpawnCount;                                            // 0x0120(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData)
	float                                              Rarity;                                                   // 0x0124(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData)
	float                                              SpawnAmountModifier;                                      // 0x0128(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData)
	struct FGuid                                       ID;                                                       // 0x012C(0x0010) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x013C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyDescriptor");
		return ptr;
	}


	class UClass* GetEnemyClass(class UBiome* Biome);
};


// Class FSD.EnemyGroupDescriptor
// 0x0020 (0x0050 - 0x0030)
class UEnemyGroupDescriptor : public UDataAsset
{
public:
	TArray<struct FEnemyGroupDescriptorItem>           Enemies;                                                  // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	struct FRandInterval                               Diversity;                                                // 0x0040(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyGroupDescriptor");
		return ptr;
	}

};


// Class FSD.EnemyDrone
// 0x0000 (0x0458 - 0x0458)
class AEnemyDrone : public AEnemyDeepPathfinderCharacter
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyDrone");
		return ptr;
	}

};


// Class FSD.HealthComponentBase
// 0x0080 (0x0170 - 0x00F0)
class UHealthComponentBase : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHealthChanged;                                          // 0x00F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDamageHealed;                                           // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDamageTaken;                                            // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHit;                                                    // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBodypartHit;                                            // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDeath;                                                  // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRadialDamage;                                           // 0x0158(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0168(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.HealthComponentBase");
		return ptr;
	}


	float TakeRadialDamage(float damageAmount, const struct FVector& BlastCenter, float blastRadius, float maxDamageRadius, float MinDamagePct, class AController* EventInstigator, class AActor* DamageCauser, class UDamageClass* DamageClass);
	float TakePointDamage(float damageAmount, const struct FVector& HitLocation, class AController* EventInstigator, class AActor* DamageCauser, class UDamageClass* DamageClass);
	void TakeDamageSimple(float damageAmount, class AActor* DamageCauser, class UDamageClass* DamageClass);
	void SetCanTakeDamage(bool canTakeDamage);
	void Kill();
	bool IsDead();
	bool IsAlive();
	float Heal(float Amount);
	float GetHealthPct();
	TScriptInterface<class UHealth> GetHealthComponentForCollider(class UPrimitiveComponent* Primitive);
	float GetHealth();
	class UParticleSystem* GetGenericImpactParticles();
	bool GetCanTakeDamage();
};


// Class FSD.HealthComponent
// 0x00D0 (0x0240 - 0x0170)
class UHealthComponent : public UHealthComponentBase
{
public:
	struct FScriptMulticastDelegate                    OnArmorChanged;                                           // 0x0170(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnArmorDamaged;                                           // 0x0180(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnArmorHealed;                                            // 0x0190(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDeathDetailed;                                          // 0x01A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	float                                              Damage;                                                   // 0x01B0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01B4(0x0004) MISSED OFFSET
	TArray<class USubHealthComponent*>                 SubHealthComponents;                                      // 0x01B8(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)
	bool                                               InvulnerableToNonDefinedResistances;                      // 0x01C8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01C9(0x0007) MISSED OFFSET
	TMap<class UPawnStat*, float>                      Resistances;                                              // 0x01D0(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	bool                                               UseDormancy;                                              // 0x0220(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0221(0x0007) MISSED OFFSET
	class UPawnStatsComponent*                         PawnStats;                                                // 0x0228(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0230(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.HealthComponent");
		return ptr;
	}


	void ToggleCanTakeDamage();
	void Resupply(float percentage);
	void OnRep_Damage(float oldDamage);
	bool HasArmor();
	float GetMaxArmor();
	EHealthbarType GetHealthbarType();
	float GetArmorPct();
	float GetArmor();
	void Client_ReceivedHit(float Amount, class UDamageClass* DamageClass, class AActor* DamageCauser, bool anyHealthLost);
};


// Class FSD.EnemyHealthComponent
// 0x0020 (0x0260 - 0x0240)
class UEnemyHealthComponent : public UHealthComponent
{
public:
	struct FVector                                     KillImpactNormal;                                         // 0x0240(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsBulletSpongeEnemy;                                      // 0x024C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EEnemyHealthScaling                                EnemyHealthScaling;                                       // 0x024D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x024E(0x0002) MISSED OFFSET
	float                                              Courage;                                                  // 0x0250(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxHealth;                                                // 0x0254(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bDoNotShowHealthBar;                                      // 0x0258(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bRegisterEnemy;                                           // 0x0259(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x025A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyHealthComponent");
		return ptr;
	}


	void SetMaxHealth(float newMaxHealth);
};


// Class FSD.EnemyMeleeAttack
// 0x0028 (0x0058 - 0x0030)
class UEnemyMeleeAttack : public UDataAsset
{
public:
	TArray<class UAnimMontage*>                        Montages;                                                 // 0x0030(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	float                                              Damage;                                                   // 0x0040(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0048(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxSurfaceAngle;                                          // 0x0050(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyMeleeAttack");
		return ptr;
	}


	static class UEnemyMeleeAttack* SelectMeleeAttack(class AActor* Attacker, class AActor* Target, TArray<class UEnemyMeleeAttack*> attacks);
	class UAnimMontage* GetRandomMontage();
	void DamageTarget(class AActor* Target, class AActor* Attacker);
};


// Class FSD.EnemyDirectMeleeAttack
// 0x0008 (0x0060 - 0x0058)
class UEnemyDirectMeleeAttack : public UEnemyMeleeAttack
{
public:
	float                                              MaxDistance;                                              // 0x0058(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyDirectMeleeAttack");
		return ptr;
	}

};


// Class FSD.EnemyAOEMeleeAttack
// 0x0010 (0x0068 - 0x0058)
class UEnemyAOEMeleeAttack : public UEnemyMeleeAttack
{
public:
	struct FName                                       AttackSocketName;                                         // 0x0058(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AttackRadius;                                             // 0x0060(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyAOEMeleeAttack");
		return ptr;
	}

};


// Class FSD.EnemyMeleeAttackAnimNotify
// 0x0000 (0x0038 - 0x0038)
class UEnemyMeleeAttackAnimNotify : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyMeleeAttackAnimNotify");
		return ptr;
	}

};


// Class FSD.EnemyRangedAttack
// 0x0018 (0x0048 - 0x0030)
class UEnemyRangedAttack : public UDataAsset
{
public:
	class UAnimMontage*                                Montage;                                                  // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      projectileClass;                                          // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FName                                       AttackSocketName;                                         // 0x0040(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyRangedAttack");
		return ptr;
	}

};


// Class FSD.EnemyRangedAttackAnimNotify
// 0x0000 (0x0038 - 0x0038)
class UEnemyRangedAttackAnimNotify : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyRangedAttackAnimNotify");
		return ptr;
	}

};


// Class FSD.StopLeadingNotify
// 0x0000 (0x0038 - 0x0038)
class UStopLeadingNotify : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StopLeadingNotify");
		return ptr;
	}

};


// Class FSD.SpawnSettings
// 0x0028 (0x0058 - 0x0030)
class USpawnSettings : public UDataAsset
{
public:
	TArray<class UParticleSystem*>                     SpawnEffects;                                             // 0x0030(0x0010) (CPF_Edit, CPF_EditFixedSize, CPF_ZeroConstructor)
	TArray<class USoundCue*>                           SpawnSounds;                                              // 0x0040(0x0010) (CPF_Edit, CPF_EditFixedSize, CPF_ZeroConstructor)
	struct FRandRange                                  SpawnDuration;                                            // 0x0050(0x0008) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SpawnSettings");
		return ptr;
	}

};


// Class FSD.EnemySpawnManager
// 0x0138 (0x0228 - 0x00F0)
class UEnemySpawnManager : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnEnemyDestroyed;                                         // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEnemyDied;                                              // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEnemySpawned;                                           // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class USpawnEffectsComponent*                      SpawnEffects;                                             // 0x0120(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               SpawningEnabled;                                          // 0x0128(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0129(0x0007) MISSED OFFSET
	TArray<class APawn*>                               ActiveEnemies;                                            // 0x0130(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	TArray<class APawn*>                               ActiveSwarmerEnemies;                                     // 0x0140(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	TArray<class APawn*>                               ActiveCritters;                                           // 0x0150(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<class APawn*>                               CritcalEnemies;                                           // 0x0160(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	int                                                MaxActiveEnemies;                                         // 0x0170(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                MaxActiveSwarmers;                                        // 0x0174(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                MaxActiveCritters;                                        // 0x0178(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxDistanceBeforeCleanup;                                 // 0x017C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FGameplayTag                                SwarmerTag;                                               // 0x0180(0x0008) (CPF_Edit)
	struct FGameplayTag                                RegularTag;                                               // 0x0188(0x0008) (CPF_Edit)
	struct FGameplayTag                                CritterTag;                                               // 0x0190(0x0008) (CPF_Edit)
	class AProceduralSetup*                            ProceduralSetup;                                          // 0x0198(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TArray<struct FSpawnQueueItem>                     SpawnQueue;                                               // 0x01A0(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	bool                                               bDestroyingAllEnemies;                                    // 0x01B0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x77];                                      // 0x01B1(0x0077) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemySpawnManager");
		return ptr;
	}


	void SpawnerDestroyed(class APawn* Actor);
	bool SpawnEnemy(class UEnemyDescriptor* Descriptor, const struct FTransform& Transform, const struct FScriptDelegate& Callback, bool useSpawnFX, bool Alert);
	void RegisterSpawner(class APawn* Actor);
	void RegisterSpawnedEnemy(class AActor* enemy);
	void OnMatchStarted();
	void EnemyDestroyed(class AActor* Actor);
	void EnemyDeath(class UHealthComponentBase* HealthComponent);
	void DestroyAllEnemies();
	bool CanSpawn(class UEnemyDescriptor* EnemyDescriptor);
};


// Class FSD.SpawnEffectsComponent
// 0x00C8 (0x01B8 - 0x00F0)
class USpawnEffectsComponent : public UActorComponent
{
public:
	struct FSpawnEffectsArray                          ActiveEffects;                                            // 0x00F0(0x00C8) (CPF_Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SpawnEffectsComponent");
		return ptr;
	}

};


// Class FSD.EnemyWaveController
// 0x0008 (0x0030 - 0x0028)
class UEnemyWaveController : public UObject
{
public:
	bool                                               IsComplete;                                               // 0x0028(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsSuitableForSolo;                                        // 0x0029(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyWaveController");
		return ptr;
	}


	void StartWave();
};


// Class FSD.EnemyWaveManager
// 0x0068 (0x0158 - 0x00F0)
class UEnemyWaveManager : public UActorComponent
{
public:
	TArray<struct FWaveEntry>                          ScriptedWaves;                                            // 0x00F0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<struct FWaveEntry>                          EndMissionWaves;                                          // 0x0100(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UEnemyWaveController*>                ActiveScriptedWaves;                                      // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	float                                              StartDelay;                                               // 0x0120(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              spawnRadiusFromSpawnPoint;                                // 0x0124(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ScriptedWavesEnabled;                                     // 0x0128(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               NormalWavesEnabled;                                       // 0x0129(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               OverrideDifficultyScriptedWaveInternal;                   // 0x012A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x012B(0x0001) MISSED OFFSET
	struct FRandRange                                  OverrideScriptedWaveInterval;                             // 0x012C(0x0008) (CPF_Edit)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0134(0x0004) MISSED OFFSET
	class AFSDGameMode*                                GameMode;                                                 // 0x0138(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UEnemySpawnManager*                          SpawnManager;                                             // 0x0140(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0148(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyWaveManager");
		return ptr;
	}


	class UEnemyWaveController* TriggerWave(class UClass* waveClass, bool resetScriptedWaveTimer);
	void TriggerEndWave(bool cancelAllWaves);
	void OnEnemySpawned(class APawn* enemy);
	void DisableScriptedWaves();
};


// Class FSD.ExtruderPlant
// 0x0028 (0x0350 - 0x0328)
class AExtruderPlant : public AActor
{
public:
	class USkeletalMeshComponent*                      SkeletalMesh;                                             // 0x0328(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UAnimationAsset*                             ExtrudeAnimation;                                         // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimationAsset*                             RetractAnimation;                                         // 0x0338(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAudioComponent*                             Audio;                                                    // 0x0340(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0348(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ExtruderPlant");
		return ptr;
	}

};


// Class FSD.FakeMoverSettings
// 0x0060 (0x0090 - 0x0030)
class UFakeMoverSettings : public UDataAsset
{
public:
	EDeepPathFinderSize                                PathfinderColiSize;                                       // 0x0030(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               StickToSurface;                                           // 0x0031(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               AlignRotationToSurface;                                   // 0x0032(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0033(0x0001) MISSED OFFSET
	float                                              AirFriction;                                              // 0x0034(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              SurfaceFriction;                                          // 0x0038(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Gravity;                                                  // 0x003C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FFakeMoverPropulsion                        Propulsion;                                               // 0x0040(0x0014) (CPF_Edit, CPF_BlueprintVisible)
	struct FFakeMoverTarget                            NearestPlayerInfluence;                                   // 0x0054(0x001C) (CPF_Edit, CPF_BlueprintVisible)
	struct FFakeMoverTarget                            TargetInfluence;                                          // 0x0070(0x001C) (CPF_Edit, CPF_BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x008C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FakeMoverSettings");
		return ptr;
	}

};


// Class FSD.FakePhysicsMover
// 0x00A0 (0x03C8 - 0x0328)
class AFakePhysicsMover : public AActor
{
public:
	class USceneComponent*                             Root;                                                     // 0x0328(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FFakeMoverState                             MoverState;                                               // 0x0330(0x0060) (CPF_Edit, CPF_BlueprintVisible)
	struct FFakeMoveState                              posVel;                                                   // 0x0390(0x0024) (CPF_Net, CPF_Transient)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03B4(0x0004) MISSED OFFSET
	class UFakeMoverSettings*                          MoveSettings;                                             // 0x03B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              SyncTime;                                                 // 0x03C0(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03C4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FakePhysicsMover");
		return ptr;
	}


	void Teleport(const struct FVector& Pos, const struct FVector& Vel);
	void OnRep_PosVel(const struct FFakeMoveState& posVel);
	void OnRep_MoveSettings(class UFakeMoverSettings* MoveSettings);
	void ApplyImpulse(const struct FVector& Impulse);
};


// Class FSD.FallingStateComponent
// 0x0050 (0x0178 - 0x0128)
class UFallingStateComponent : public UCharacterStateComponent
{
public:
	float                                              FallDamageStartVelocity;                                  // 0x0128(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FallDamageModifier;                                       // 0x012C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AutoClimbLookForwardDistance;                             // 0x0130(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxClimbHeight;                                           // 0x0134(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinClimbHeight;                                           // 0x0138(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CapsuleCheckZOffset;                                      // 0x013C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinInputDotProduct;                                       // 0x0140(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              JumpZVelocity;                                            // 0x0144(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               DebugAutoClimb;                                           // 0x0148(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0149(0x0007) MISSED OFFSET
	class UDialogDataAsset*                            FallingShout;                                             // 0x0150(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ShoutAfterDistance;                                       // 0x0158(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C];                                      // 0x015C(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FallingStateComponent");
		return ptr;
	}


	void Server_ClimbLedge();
	void All_ShowFallImpact(class UFSDPhysicalMaterial* PhysMat);
};


// Class FSD.FirstPersonSkeletalMeshComponent
// 0x0000 (0x0B30 - 0x0B30)
class UFirstPersonSkeletalMeshComponent : public USkeletalMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FirstPersonSkeletalMeshComponent");
		return ptr;
	}


	static struct FVector CalcFirstPersonFOVPositionCorrection(class APlayerController* PlayerController, const struct FVector& origPos);
};


// Class FSD.FirstPersonStaticMeshComponent
// 0x0000 (0x05F0 - 0x05F0)
class UFirstPersonStaticMeshComponent : public UStaticMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FirstPersonStaticMeshComponent");
		return ptr;
	}

};


// Class FSD.FirstPersonWidgetComponent
// 0x0000 (0x06A0 - 0x06A0)
class UFirstPersonWidgetComponent : public UWidgetComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FirstPersonWidgetComponent");
		return ptr;
	}

};


// Class FSD.FirstPersonParticleSystemComponent
// 0x0000 (0x07B0 - 0x07B0)
class UFirstPersonParticleSystemComponent : public UParticleSystemComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FirstPersonParticleSystemComponent");
		return ptr;
	}


	static class UParticleSystemComponent* SpawnFirstPersonEmitterAttached(class UParticleSystem* EmitterTemplate, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale, TEnumAsByte<EAttachLocation> LocationType, bool bAutoDestroy);
};


// Class FSD.FirstPersonPointLightComponent
// 0x0000 (0x0390 - 0x0390)
class UFirstPersonPointLightComponent : public UPointLightComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FirstPersonPointLightComponent");
		return ptr;
	}

};


// Class FSD.FlameThrowerItem
// 0x0148 (0x07D0 - 0x0688)
class AFlameThrowerItem : public AAmmoDrivenWeapon
{
public:
	class UParticleSystemComponent*                    FlameParticleComponent;                                   // 0x0688(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDamageComponent*                            DamageComponent;                                          // 0x0690(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UStickyFlameSpawner*                         StickyFlames;                                             // 0x0698(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDamageComponent*                            AoEHeatDamageComponent;                                   // 0x06A0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDamageComponent*                            ExplodingTargetsDamageComponent;                          // 0x06A8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UMotionAudioController*                      MotionAudio;                                              // 0x06B0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FDecalData                                  ImpactDecal;                                              // 0x06B8(0x0018) (CPF_Edit)
	float                                              DecalDelay;                                               // 0x06D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x06D4(0x0004) MISSED OFFSET
	class UParticleSystem*                             ImpactParticles;                                          // 0x06D8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystemComponent*                    ImpactParticleInstance;                                   // 0x06E0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UParticleSystem*                             FP_LongReachParticles;                                    // 0x06E8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             TP_LongReachParticles;                                    // 0x06F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<struct FName>                               FlameParameterNames;                                      // 0x06F8(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	float                                              DamageSphereRadius;                                       // 0x0708(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxFlameDistance;                                         // 0x070C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FlameGrowthPerSecond;                                     // 0x0710(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0714(0x0004) MISSED OFFSET
	class UClass*                                      OnFireStatusEffect;                                       // 0x0718(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ChanceToFleeOnDamage;                                     // 0x0720(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MeltPointRadius;                                          // 0x0724(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MeltPointBuildTime;                                       // 0x0728(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MeltCarveTime;                                            // 0x072C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             MeltSteamParticle;                                        // 0x0730(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UItemUpgrade*>                        upgrades;                                                 // 0x0738(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	bool                                               LongReachEnabled;                                         // 0x0748(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0xF];                                       // 0x0749(0x000F) MISSED OFFSET
	bool                                               AoEHeatEnabled;                                           // 0x0758(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0759(0x0003) MISSED OFFSET
	float                                              KilledTargetsExplosionChance;                             // 0x075C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              ShowDamageParticle;                                       // 0x0760(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0764(0x0004) MISSED OFFSET
	class UParticleSystem*                             DamangeTargetsParticles;                                  // 0x0768(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             KilledTargetsExplodingParticles;                          // 0x0770(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   KilledTargetsExplodingSound;                              // 0x0778(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x50];                                      // 0x0780(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FlameThrowerItem");
		return ptr;
	}


	void TriggerAoEHeat();
	void ServerMeltIce(TArray<struct FVector> meltPoints);
	void ServerDoDamage(const struct FVector_NetQuantize& Start, const struct FVector_NetQuantize& End);
	void OnTargetKilled(class AActor* Target, class UFSDPhysicalMaterial* PhysMat);
	void OnTargetDamaged(class UHealthComponentBase* Health, float Amount, class UFSDPhysicalMaterial* PhysicalMaterial);
	void All_ShowTargetBurstIntoFire(const struct FVector_NetQuantize& Location, const struct FRotator& Rotation);
	void All_FlameFeedback(const struct FVector_NetQuantize& Location, const struct FRotator& Rotation);
};


// Class FSD.Flare
// 0x0058 (0x0380 - 0x0328)
class AFlare : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class UProjectileMovementComponent*                Movement;                                                 // 0x0330(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	int                                                MaxFlares;                                                // 0x0338(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ProductionTime;                                           // 0x033C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Duration;                                                 // 0x0340(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                ChromaColor;                                              // 0x0344(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsFlareOn;                                                // 0x0354(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0355(0x0003) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x0358(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // 0x0368(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UClass*                                      WeaponPreviewClass;                                       // 0x0370(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0378(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Flare");
		return ptr;
	}


	void OnUpdateShadowRadius();
	void OnRep_IsFlareOn();
	void OnFlareIgnite();
	void OnFlareExtinguish();
	void Inhibit();
	class UClass* GetWeaponViewClass();
	static class AFlare* GetFlareDefaultObject(class UClass* flareClass);
};


// Class FSD.FlareGunProjectile
// 0x0010 (0x03C8 - 0x03B8)
class AFlareGunProjectile : public AProjectile
{
public:
	float                                              Duration;                                                 // 0x03B8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsFlareOn;                                                // 0x03BC(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x03BD(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FlareGunProjectile");
		return ptr;
	}


	void OnUpdateShadowRadius();
	void OnRep_IsFlareOn();
	void OnFlareIgnite();
	void OnFlareExtinguish();
	void OnDroppodImpact(class AMiningPod* DropPod);
	void Inhibit();
};


// Class FSD.FlareController
// 0x0028 (0x0118 - 0x00F0)
class UFlareController : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnShadowQualityChanged;                                   // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	TArray<struct FFlareMeta>                          FlaresMeta;                                               // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0110(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FlareController");
		return ptr;
	}


	static void UnregisterFlareGunProjectile(class AFlareGunProjectile* flareprj);
	static void UnregisterFlare(class AFlare* Flare);
	static void RegisterFlareGunProjectile(class AFlareGunProjectile* flareprj);
	static void RegisterFlare(class AFlare* Flare);
	static class AActor* FindFlareNear(class UObject* WorldContextObject, const struct FVector& Pos, bool allowMoving, float maxLightRadiusFraction);
};


// Class FSD.NegPointLightComponent
// 0x0000 (0x0390 - 0x0390)
class UNegPointLightComponent : public UPointLightComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.NegPointLightComponent");
		return ptr;
	}

};


// Class FSD.PerkAsset
// 0x0088 (0x00B8 - 0x0030)
class UPerkAsset : public UDataAsset
{
public:
	struct FScriptMulticastDelegate                    OnPerkClaimed;                                            // 0x0030(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPerkEquipped;                                           // 0x0040(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPerkUnequipped;                                         // 0x0050(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPerkHighlighted;                                        // 0x0060(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FGuid                                       SavegameID;                                               // 0x0070(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	struct FText                                       Title;                                                    // 0x0080(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	class UTexture2D*                                  Icon;                                                     // 0x0098(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bIsEquippable;                                            // 0x00A0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bIsHighlighted;                                           // 0x00A1(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00A2(0x0006) MISSED OFFSET
	TArray<TSoftObjectPtr<class UClass>>               PerkLogicClasses;                                         // 0x00A8(0x0010) (CPF_Edit, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PerkAsset");
		return ptr;
	}


	bool Unequip(class UObject* WorldContext, class UClass* CharacterClass);
	void SetHighlighted(bool IsHighlighted);
	static void SetCharacterPerks(class UObject* WorldContext, class UClass* CharacterClass, TArray<class UPerkAsset*> perks);
	bool IsPerkAvailableInTier(int Tier);
	bool IsEquippedBy(class UObject* WorldContext, class UClass* ByCharacterClass);
	EPerkTierState GetStateAtTier(class UObject* WorldContext, int Tier);
	int GetRankTier(int Rank);
	struct FText GetRankDescription(int Rank);
	int GetRankCost(int Rank);
	bool GetRankAtTier(int Tier, int* Rank);
	int GetCurrentRank(class UObject* WorldContext);
	struct FString GetAdditionalRankDescription(int Rank);
	bool Equip(class UObject* WorldContext, class UClass* CharacterClass);
	bool BuyPerkAtTier(class UObject* WorldContext, int Tier);
};


// Class FSD.FloatPerkAsset
// 0x0030 (0x00E8 - 0x00B8)
class UFloatPerkAsset : public UPerkAsset
{
public:
	TArray<struct FFloatPerkRank>                      Ranks;                                                    // 0x00B8(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UFloatPerkActivation*                        PerkActivation;                                           // 0x00C8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FText                                       FormattedDescription;                                     // 0x00D0(0x0018) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FloatPerkAsset");
		return ptr;
	}


	float GetPerkValue(class UObject* WorldContext);
	static float GetLastTierValue(class UFloatPerkAsset* Perk);
	static float GetFloatPerkValue(class UObject* WorldContext, class UFloatPerkAsset* Perk, float UnclaimedValue);
};


// Class FSD.FloatPerkActivation
// 0x0000 (0x0030 - 0x0030)
class UFloatPerkActivation : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FloatPerkActivation");
		return ptr;
	}

};


// Class FSD.StatPerkActivation
// 0x0010 (0x0040 - 0x0030)
class UStatPerkActivation : public UFloatPerkActivation
{
public:
	class UPawnStat*                                   PawnStat;                                                 // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EPawnStatType                                      StatType;                                                 // 0x0038(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StatPerkActivation");
		return ptr;
	}

};


// Class FSD.FloatPerkComponent
// 0x0010 (0x0100 - 0x00F0)
class UFloatPerkComponent : public UActorComponent
{
public:
	float                                              FloatValue;                                               // 0x00F0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	class APlayerCharacter*                            PlayerCharacter;                                          // 0x00F8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FloatPerkComponent");
		return ptr;
	}


	void Receive_OnInitialized();
};


// Class FSD.CreateComponentPerkActivation
// 0x0008 (0x0038 - 0x0030)
class UCreateComponentPerkActivation : public UFloatPerkActivation
{
public:
	class UClass*                                      ComponentClass;                                           // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CreateComponentPerkActivation");
		return ptr;
	}

};


// Class FSD.KillNearbyCreaturePerkComponent
// 0x0028 (0x0128 - 0x0100)
class UKillNearbyCreaturePerkComponent : public UFloatPerkComponent
{
public:
	TSoftObjectPtr<class UClass>                       enemyClass;                                               // 0x0100(0x0028) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.KillNearbyCreaturePerkComponent");
		return ptr;
	}

};


// Class FSD.BezerkPerkComponent
// 0x0010 (0x0110 - 0x0100)
class UBezerkPerkComponent : public UFloatPerkComponent
{
public:
	class UPawnStat*                                   BoostedStat;                                              // 0x0100(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AmountPerValue;                                           // 0x0108(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x010C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BezerkPerkComponent");
		return ptr;
	}


	void OnHealthChanged(float Health);
};


// Class FSD.ThornsPerkComponent
// 0x0008 (0x0108 - 0x0100)
class UThornsPerkComponent : public UFloatPerkComponent
{
public:
	class UDamageClass*                                DamageClass;                                              // 0x0100(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ThornsPerkComponent");
		return ptr;
	}


	void OnHit(float Damage, class UDamageClass* inDamageClass, class AActor* DamageCauser, bool anyHealthLost);
};


// Class FSD.SalutePerkComponent
// 0x0010 (0x0110 - 0x0100)
class USalutePerkComponent : public UFloatPerkComponent
{
public:
	float                                              Cooldown;                                                 // 0x0100(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FleeRadius;                                               // 0x0104(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0108(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SalutePerkComponent");
		return ptr;
	}


	void OnSalute();
};


// Class FSD.FloodFillSettings
// 0x0038 (0x0068 - 0x0030)
class UFloodFillSettings : public UDataAsset
{
public:
	struct FVector                                     NoiseSize;                                                // 0x0030(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FreqMultiplier;                                           // 0x003C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AmplitudeMultiplier;                                      // 0x0040(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinValue;                                                 // 0x0044(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxValue;                                                 // 0x0048(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               Turbulence;                                               // 0x004C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               Invert;                                                   // 0x004D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x004E(0x0002) MISSED OFFSET
	int                                                Octaves;                                                  // 0x0050(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	TArray<struct FLayeredNoise>                       NoiseLayers;                                              // 0x0058(0x0010) (CPF_Edit, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FloodFillSettings");
		return ptr;
	}

};


// Class FSD.DetailNoise
// 0x0008 (0x0070 - 0x0068)
class UDetailNoise : public UFloodFillSettings
{
public:
	float                                              NoiseRange;                                               // 0x0068(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DetailNoise");
		return ptr;
	}

};


// Class FSD.FlyingStateComponent
// 0x0000 (0x0128 - 0x0128)
class UFlyingStateComponent : public UCharacterStateComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FlyingStateComponent");
		return ptr;
	}

};


// Class FSD.FormationData
// 0x00A0 (0x00D0 - 0x0030)
class UFormationData : public UDataAsset
{
public:
	TArray<struct FFormationDataItem>                  FormationItems;                                           // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst)
	struct FGameplayTagQuery                           LeaderQuery;                                              // 0x0040(0x0048) (CPF_Edit)
	struct FGameplayTagQuery                           MemberQuery;                                              // 0x0088(0x0048) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FormationData");
		return ptr;
	}

};


// Class FSD.GroundFormationData
// 0x0010 (0x00E0 - 0x00D0)
class UGroundFormationData : public UFormationData
{
public:
	int                                                FormationSize;                                            // 0x00D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FormationSpread;                                          // 0x00D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RandomSpread;                                             // 0x00D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GroundFormationData");
		return ptr;
	}

};


// Class FSD.FlyingFormationData
// 0x0010 (0x00E0 - 0x00D0)
class UFlyingFormationData : public UFormationData
{
public:
	int                                                FormationSize;                                            // 0x00D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FormationSpread;                                          // 0x00D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RandomSpread;                                             // 0x00D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FlyingFormationData");
		return ptr;
	}

};


// Class FSD.FormationsManagerComponent
// 0x0028 (0x0118 - 0x00F0)
class UFormationsManagerComponent : public UActorComponent
{
public:
	class UEnemySpawnManager*                          SpawnManager;                                             // 0x00F0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	TArray<class UFormationData*>                      FormationData;                                            // 0x00F8(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FormationsManagerComponent");
		return ptr;
	}

};


// Class FSD.FragileDebrisCleaner
// 0x0010 (0x0250 - 0x0240)
class UFragileDebrisCleaner : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0240(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FragileDebrisCleaner");
		return ptr;
	}

};


// Class FSD.FrozenStateComponent
// 0x0028 (0x0150 - 0x0128)
class UFrozenStateComponent : public UCharacterStateComponent
{
public:
	struct FRandRange                                  DefrostAmount;                                            // 0x0128(0x0008) (CPF_Edit)
	class USoundBase*                                  AudioFreeFromIce;                                         // 0x0130(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFSDPhysicalMaterial*                        IcePhysicalMaterial;                                      // 0x0138(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFSDPhysicalMaterial*                        DwarfFleshMaterial;                                       // 0x0140(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0148(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FrozenStateComponent");
		return ptr;
	}


	void Server_ThawPlayer();
	void ReceiveOnDefrosting();
};


// Class FSD.FSDAdvancedLabel
// 0x0038 (0x0240 - 0x0208)
class UFSDAdvancedLabel : public UUserWidget
{
public:
	struct FText                                       FormattedText;                                            // 0x0208(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       ControllerOverrideText;                                   // 0x0220(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	bool                                               UpperCase;                                                // 0x0238(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EInputSource                                       PreviewAs;                                                // 0x0239(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x023A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDAdvancedLabel");
		return ptr;
	}


	void SetText(const struct FText& NewText, const struct FText& OverrideControllerText);
	void Refresh();
	void OnReset();
	void OnNewLine(int Index);
	void OnLanguageChanged(const struct FString& NewCulture);
	void OnInputSourceChanged(EInputSource Source);
	void OnAddString(const struct FString& Value);
	void OnAddKeyName(const struct FString& Name);
	void OnAddIcon(const struct FString& Name, const struct FActionIconMapping& Icon);
	bool GetIsDesignTime();
	EInputSource GetCurrentInputSource();
	class UTextBlock* CreateTextBlock(const struct FString& Text, const struct FSlateFontInfo& InFontInfo, const struct FLinearColor& Color);
	class UImage* CreateImageSized(class UTexture2D* Texture, int Width, int Height);
	class UImage* CreateImage(class UTexture2D* Texture, bool MatchSize);
	class UHorizontalBox* CreateHorizontalBox();
};


// Class FSD.GamepadCursorSettings
// 0x0010 (0x0048 - 0x0038)
class UGamepadCursorSettings : public UDeveloperSettings
{
public:
	float                                              MaxSpeed;                                                 // 0x0038(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	float                                              Acceleration;                                             // 0x003C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	float                                              StickySlowDown;                                           // 0x0040(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	float                                              DeadZone;                                                 // 0x0044(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GamepadCursorSettings");
		return ptr;
	}

};


// Class FSD.AnimNotify_PlaySound2D
// 0x0010 (0x0048 - 0x0038)
class UAnimNotify_PlaySound2D : public UAnimNotify
{
public:
	class USoundBase*                                  Sound;                                                    // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              VolumeMultiplier;                                         // 0x0040(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PitchMultiplier;                                          // 0x0044(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotify_PlaySound2D");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_PlaySound
// 0x0028 (0x0058 - 0x0030)
class UAnimNotifyState_PlaySound : public UAnimNotifyState
{
public:
	class USoundCue*                                   Sound;                                                    // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0040(0x000C) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x004C(0x000C) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotifyState_PlaySound");
		return ptr;
	}

};


// Class FSD.EnemyPlaySoundKey
// 0x0000 (0x0030 - 0x0030)
class UEnemyPlaySoundKey : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyPlaySoundKey");
		return ptr;
	}

};


// Class FSD.EnemyPlaySoundByKeyAnimNotify
// 0x0020 (0x0058 - 0x0038)
class UEnemyPlaySoundByKeyAnimNotify : public UAnimNotify
{
public:
	class UEnemyPlaySoundKey*                          SoundKey;                                                 // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              VolumeMultiplier;                                         // 0x0040(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PitchMultiplier;                                          // 0x0044(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      bFollow : 1;                                              // 0x0048(0x0001) (CPF_Edit, CPF_BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FName                                       AttachName;                                               // 0x0050(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyPlaySoundByKeyAnimNotify");
		return ptr;
	}

};


// Class FSD.AnimNotify_PushSoundMix
// 0x0010 (0x0048 - 0x0038)
class UAnimNotify_PushSoundMix : public UAnimNotify
{
public:
	class USoundMix*                                   SoundMix;                                                 // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxDistance;                                              // 0x0040(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotify_PushSoundMix");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_SoundMix
// 0x0010 (0x0040 - 0x0030)
class UAnimNotifyState_SoundMix : public UAnimNotifyState
{
public:
	class USoundMix*                                   SoundMix;                                                 // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxDistance;                                              // 0x0038(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotifyState_SoundMix");
		return ptr;
	}

};


// Class FSD.EnemySpawnEffectsKey
// 0x0000 (0x0030 - 0x0030)
class UEnemySpawnEffectsKey : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemySpawnEffectsKey");
		return ptr;
	}

};


// Class FSD.EnemySpawnEffectsByKeyAnimNotify
// 0x0018 (0x0050 - 0x0038)
class UEnemySpawnEffectsByKeyAnimNotify : public UAnimNotify
{
public:
	class UEnemySpawnEffectsKey*                       EffectKey;                                                // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      Attached : 1;                                             // 0x0040(0x0001) (CPF_Edit, CPF_BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	struct FName                                       SocketName;                                               // 0x0048(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemySpawnEffectsByKeyAnimNotify");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_EnemyPlaySoundByKey
// 0x0028 (0x0058 - 0x0030)
class UAnimNotifyState_EnemyPlaySoundByKey : public UAnimNotifyState
{
public:
	class UEnemyPlaySoundKey*                          SoundKey;                                                 // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0040(0x000C) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x004C(0x000C) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotifyState_EnemyPlaySoundByKey");
		return ptr;
	}

};


// Class FSD.AnimNotify_CameraShake
// 0x0010 (0x0048 - 0x0038)
class UAnimNotify_CameraShake : public UAnimNotify
{
public:
	float                                              InnerRadius;                                              // 0x0038(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              OuterRadius;                                              // 0x003C(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      CameraShake;                                              // 0x0040(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotify_CameraShake");
		return ptr;
	}

};


// Class FSD.AnimNotify_Shout
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_Shout : public UAnimNotify
{
public:
	class UDialogDataAsset*                            Shout;                                                    // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotify_Shout");
		return ptr;
	}

};


// Class FSD.AnimNotify_FootStep
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_FootStep : public UAnimNotify
{
public:
	bool                                               IsLeft;                                                   // 0x0038(0x0001) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotify_FootStep");
		return ptr;
	}

};


// Class FSD.AnimNotify_SpawnActor
// 0x0028 (0x0060 - 0x0038)
class UAnimNotify_SpawnActor : public UAnimNotify
{
public:
	class UClass*                                      Actor;                                                    // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0040(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0048(0x000C) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x0054(0x000C) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotify_SpawnActor");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_SpawnMesh
// 0x0030 (0x0060 - 0x0030)
class UAnimNotifyState_SpawnMesh : public UAnimNotifyState
{
public:
	class UStaticMesh*                                 Mesh;                                                     // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               UseFirstPersonComponent;                                  // 0x0038(0x0001) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FName                                       SocketName;                                               // 0x0040(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0048(0x000C) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x0054(0x000C) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotifyState_SpawnMesh");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_SpawnSkinnedMesh
// 0x0030 (0x0060 - 0x0030)
class UAnimNotifyState_SpawnSkinnedMesh : public UAnimNotifyState
{
public:
	class UStaticMesh*                                 Mesh;                                                     // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EItemCategory                                      ItemCategory;                                             // 0x0038(0x0001) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               UseFirstPersonComponent;                                  // 0x0039(0x0001) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
	struct FName                                       SocketName;                                               // 0x0040(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0048(0x000C) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x0054(0x000C) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotifyState_SpawnSkinnedMesh");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_HideBone
// 0x0008 (0x0038 - 0x0030)
class UAnimNotifyState_HideBone : public UAnimNotifyState
{
public:
	struct FName                                       BoneName;                                                 // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotifyState_HideBone");
		return ptr;
	}

};


// Class FSD.SpawnReleasedActor
// 0x0000 (0x0028 - 0x0028)
class USpawnReleasedActor : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SpawnReleasedActor");
		return ptr;
	}


	bool Released();
};


// Class FSD.AnimNotifyState_SpawnAndReleaseActor
// 0x0028 (0x0058 - 0x0030)
class UAnimNotifyState_SpawnAndReleaseActor : public UAnimNotifyState
{
public:
	class UClass*                                      Actor;                                                    // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0040(0x000C) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x004C(0x000C) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotifyState_SpawnAndReleaseActor");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_HideEquippedItem
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_HideEquippedItem : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotifyState_HideEquippedItem");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_WeaponReload
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_WeaponReload : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotifyState_WeaponReload");
		return ptr;
	}

};


// Class FSD.AnimNotifyState_ConstrainItem
// 0x0010 (0x0040 - 0x0030)
class UAnimNotifyState_ConstrainItem : public UAnimNotifyState
{
public:
	struct FName                                       OldConstraint;                                            // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FName                                       NewConstraint;                                            // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotifyState_ConstrainItem");
		return ptr;
	}

};


// Class FSD.GameAnimationsSettings
// 0x0030 (0x0068 - 0x0038)
class UGameAnimationsSettings : public UDeveloperSettings
{
public:
	struct FSoftObjectPath                             FootstepTestingSound;                                     // 0x0038(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_Config)
	struct FSoftObjectPath                             FootstepTestingParticles;                                 // 0x0050(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GameAnimationsSettings");
		return ptr;
	}

};


// Class FSD.DynamicMeshScaler
// 0x0010 (0x0100 - 0x00F0)
class UDynamicMeshScaler : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DynamicMeshScaler");
		return ptr;
	}

};


// Class FSD.FSDCheatManager
// 0x0010 (0x0088 - 0x0078)
class UFSDCheatManager : public UCheatManager
{
public:
	int                                                RoomJumpCount;                                            // 0x0078(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              PreviousMaxDistanceBeforeCleanup;                         // 0x007C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               UnlimitedScoutFlareDuration;                              // 0x0080(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0081(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDCheatManager");
		return ptr;
	}


	void SwitchCharacter(class UClass* NewCharacter);
	void SpawnEnemies(class UEnemyDescriptor* desscriptor, int Count);
	void SpawnBosco(TSoftObjectPtr<class UClass> droneClass, class UClass* aControllerClass);
	void ShowTutorialDebug();
	void SetStandingDown(bool StandingDown);
	void SetSpawnEnemies(bool SpawnEnemies);
	void SetQuadPickAxe(bool quad);
	void SetHUDVisible(bool ShowHUD);
	void SetGodMode(bool God);
	void SetFastMovement(bool fast);
	void ResetTutorials();
	void ResetSpacerigIntroMessage();
	void R_RemoveCredits(int Number);
	void R_AddResources(int Number);
	void R_AddPerkPoints(int Amount);
	void R_AddNitra(float Amount);
	void R_AddMOM(float Amount);
	void R_AddGold(float Amount);
	void R_AddCredits(int Number);
	void R_Add_Jadiz(int Amount);
	void R_Add_BitterGem(int Amount);
	void R_Add_Aquarq(int Amount);
	bool IsInGodMode();
	void GetListOfRoomNames(TArray<struct FString>* roomNames);
	void DestroyAllInstances(class UClass* destroy);
	static void Cheat_UnlockAllWeapons(class UObject* WorldContextObject);
	static void Cheat_UnlockAllUpgrades(class UObject* WorldContextObject);
	static void Cheat_Resources(class UObject* WorldContextObject, int Amount);
	static void Cheat_ResetEquippedUpgrades(class UObject* WorldContextObject);
	static void Cheat_GenerateNewMissionSeed(class UObject* WorldContextObject, bool Enabled);
	static void Cheat_Campaign_Advance(class UObject* WorldContextObject);
	static void Cheat_AddXP(class UObject* WorldContextObject, int Amount);
	static void Cheat_AddPerkPoints(class UObject* WorldContextObject, int Amount);
	static void Cheat_AddCredits(class UObject* WorldContextObject, int Amount);
	void C_UnlockAllWeapons();
	void C_UnlockAllUpgrades();
	void C_UnlockAll();
	void C_ToggleFadingEnabled();
	void C_ToggleFadingDebug();
	void C_ToggleCanShowBlood();
	void C_SpawnScriptedWaveIndex(int Index);
	void C_SpawnScriptedWave();
	void C_SpawnNormalWave();
	void C_SetTestMission(int missionIndex);
	void C_SetPlayers(int Number);
	void C_SetFastFlares();
	void C_ScoutFlareInfiniteDuration(bool Enabled);
	void C_Revive();
	void C_Retirement_SetLevel(int Level);
	void C_Retirement_SetCampaignComplete();
	void C_Resupply();
	void C_ResetSkinsAndUpgrades();
	void C_ResetCheatedResources(int newAmount);
	void C_RemoveAllWidgets();
	void C_RefreshDailyMission();
	void C_RecordMode();
	void C_LevelUpCharacter(int Amount);
	void C_KillAll();
	void C_JumpToNextRoom();
	void C_IncrementAllMissionStats(int Amount);
	void C_GodMode();
	void C_GiveAll();
	void C_GenerateNewMissions(bool Enabled);
	void C_FixedPLSSeed(int Seed);
	void C_FixedMissionSeed(int Seed);
	void C_CompleteMission();
	void C_ClearAllMissionStats();
	void C_ClearAllMilestones();
	void C_ChangeIntoxication(int Percent);
	void C_Campaign_ResetProgress();
	void C_Campaign_Advance();
	void C_AddXP(int Number);
	void C_AddUncappedXP(int Amount);
};


// Class FSD.FSDCloudLoadSave
// 0x0048 (0x0070 - 0x0028)
class UFSDCloudLoadSave : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnCloudLoadAll;                                           // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCloudLoadAllFailed;                                     // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FString                                     SteamTicket;                                              // 0x0048(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	struct FString                                     SteamBranch;                                              // 0x0058(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	int                                                NumFailedSaves;                                           // 0x0068(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDCloudLoadSave");
		return ptr;
	}


	void StartCloudLoadAll();
};


// Class FSD.FSDCreateSessionCallbackProxy
// 0x0068 (0x0090 - 0x0028)
class UFSDCreateSessionCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData00[0x48];                                      // 0x0048(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDCreateSessionCallbackProxy");
		return ptr;
	}


	static class UFSDCreateSessionCallbackProxy* FSDCreateSession(class UObject* WorldContextObject, class APlayerController* PlayerController, int PublicConnections, bool bUseLAN, bool bFriendsOnly);
};


// Class FSD.FSDCustomDPIScalingRule
// 0x0000 (0x0028 - 0x0028)
class UFSDCustomDPIScalingRule : public UDPICustomScalingRule
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDCustomDPIScalingRule");
		return ptr;
	}

};


// Class FSD.FSDFindSessionsCallbackProxy
// 0x0080 (0x00A8 - 0x0028)
class UFSDFindSessionsCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRefresh;                                                // 0x0048(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0058(0x0038) MISSED OFFSET
	class UObject*                                     WorldContextObject;                                       // 0x0090(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFSDFindSteamSessions*                       FSDFindSteamSessions;                                     // 0x0098(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x00A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDFindSessionsCallbackProxy");
		return ptr;
	}


	void OnFSDCompleted(bool bSuccess, TArray<struct FBlueprintSessionResult> Results);
	static class UFSDFindSessionsCallbackProxy* FSDFindSessions(class UObject* WorldContextObject, class APlayerController* PlayerController, int MaxResults, bool bUseLAN);
	static class UFSDFindSessionsCallbackProxy* FSDFindFullSessions(class UObject* WorldContextObject, class APlayerController* PlayerController, int MaxResults);
};


// Class FSD.FSDFlyingBugController
// 0x0060 (0x04B0 - 0x0450)
class AFSDFlyingBugController : public AFSDAIController
{
public:
	unsigned char                                      UnknownData00[0xC];                                       // 0x0450(0x000C) MISSED OFFSET
	struct FVector                                     TargetLeading;                                            // 0x045C(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     TargetLastPos;                                            // 0x0468(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               LeadTarget;                                               // 0x0474(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0475(0x0003) MISSED OFFSET
	float                                              LeadAmount;                                               // 0x0478(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              ProjectileSpeed;                                          // 0x047C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class APawn*                                       myPawn;                                                   // 0x0480(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UBehaviorTree*                               BehaviourTree;                                            // 0x0488(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class AActor*                                      myTarget;                                                 // 0x0490(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     DashLocation;                                             // 0x0498(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x04A4(0x0004) MISSED OFFSET
	class UBlackboardComponent*                        BB;                                                       // 0x04A8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDFlyingBugController");
		return ptr;
	}


	void SetTargetToChase();
	void SetDashLocaiton(const struct FVector& Location);
	void SetBlackBoardValues();
	void OnSeePawn(class APawn* SeenPawn);
	void OnDamage(float aDamage);
	void InitDash();
	struct FVector GetLeadVector();
	struct FVector GetLeadDirection();
	void AlertOnlyMe();
	void Alerted();
};


// Class FSD.CampaignNotification
// 0x0010 (0x0038 - 0x0028)
class UCampaignNotification : public UObject
{
public:
	class UCampaign*                                   Campaign;                                                 // 0x0028(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UCampaignMission*                            Mission;                                                  // 0x0030(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CampaignNotification");
		return ptr;
	}


	bool IsCampaignCompleted();
	int GetProgress();
};


// Class FSD.FSDGameInstance
// 0x1360 (0x1400 - 0x00A0)
class UFSDGameInstance : public UGameInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A0(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnNewMessage;                                             // 0x00A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTemporaryBuffChanged;                                   // 0x00B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGameSettingsChanged;                                    // 0x00C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGraphicsSettingsChanged;                                // 0x00D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPressStart;                                             // 0x00E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UClass*                                      MiningPodClass;                                           // 0x00F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FScriptMulticastDelegate                    OnJoinPendingInvite;                                      // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSkinChangedEvent;                                       // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLoaderStart;                                            // 0x0120(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLoaderStop;                                             // 0x0130(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterSelectionStart;                                // 0x0140(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterSelectionStop;                                 // 0x0150(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTutorialManagerSet;                                     // 0x0160(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLocalPlayerCharacterSet;                                // 0x0170(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowReconnectScreen;                                    // 0x0180(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnXBoxAccountPickerClosed;                                // 0x0190(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnXBoxChangeUser;                                         // 0x01A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMixerStateChanged;                                      // 0x01B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGravityChanged;                                         // 0x01C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnNewPostProcessingManager;                               // 0x01D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPreviewSkinChanged;                                     // 0x01E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference)
	bool                                               ShowingReconnectScreen;                                   // 0x01F0(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01F1(0x0007) MISSED OFFSET
	struct FPendingRewards                             PendingMissionRewards;                                    // 0x01F8(0x0190) (CPF_Transient)
	TWeakObjectPtr<class UMouseCursorWidget>           MouseCursorWidget;                                        // 0x0388(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FScriptMulticastDelegate                    OnShowCharacterSelector;                                  // 0x0390(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowViewer3D;                                           // 0x03A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowCharacterSelectorEquipSlot;                         // 0x03B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowCharacterSelectorEquip;                             // 0x03C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowCharacterSelectorRotate;                            // 0x03D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowEndScreen;                                          // 0x03E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class AProceduralSetup*                            ProceduralSetup;                                          // 0x03F0(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               HasStartedAMission;                                       // 0x03F8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x03F9(0x0007) MISSED OFFSET
	struct FString                                     FSDPassword;                                              // 0x0400(0x0010) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient)
	bool                                               FSDPrivateServer;                                         // 0x0410(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               SoloSession;                                              // 0x0411(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsJoiningInvite;                                          // 0x0412(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               FirstTimeInFrontend;                                      // 0x0413(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               SessionFirstStartOnSpaceRig;                              // 0x0414(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               ShowFirstCharacterSelector;                               // 0x0415(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               ShowSaveWarning;                                          // 0x0416(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x0417(0x0001) MISSED OFFSET
	class AActor*                                      WorldViewTargetDummy;                                     // 0x0418(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               WasCampaign;                                              // 0x0420(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0421(0x0007) MISSED OFFSET
	struct FString                                     LastCampaignName;                                         // 0x0428(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	int                                                LastCampaignProgress;                                     // 0x0438(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x043C(0x0004) MISSED OFFSET
	struct FString                                     LastWeaponsLoadout;                                       // 0x0440(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	struct FString                                     LastUpgradesLoadout;                                      // 0x0450(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	struct FString                                     LastPerksLoadout;                                         // 0x0460(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	class AActor*                                      CharacterSelectionLastViewTarget;                         // 0x0470(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               HasSeenInfoScreen;                                        // 0x0478(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0479(0x0007) MISSED OFFSET
	struct FTransform                                  CharacterSelectionViewTargetTransform;                    // 0x0480(0x0030) (CPF_BlueprintVisible, CPF_Transient, CPF_IsPlainOldData)
	struct FTransform                                  LoaderViewTargetTransform;                                // 0x04B0(0x0030) (CPF_BlueprintVisible, CPF_Transient, CPF_IsPlainOldData)
	struct FScriptMulticastDelegate                    OnGeneratedMissionChanged;                                // 0x04E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FGameStateSeamlessTravelStorage             GameStateSeamlessTravelStorage;                           // 0x04F0(0x00A8)
	TWeakObjectPtr<class ADonkeyCharacter>             Donkey;                                                   // 0x0598(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FScriptMulticastDelegate                    OnBoscoChanged;                                           // 0x05A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	bool                                               DEBUGSpawnRandomMissions;                                 // 0x05B0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0xB];                                       // 0x05B1(0x000B) MISSED OFFSET
	int                                                DEBUGSeedOverride;                                        // 0x05BC(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               CanPlayOnline;                                            // 0x05C0(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	ESteamSearchRegion                                 SteamSearchRegion;                                        // 0x05C1(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ESteamServerJoinStatus                             SteamServerJoinStatus;                                    // 0x05C2(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0x5];                                       // 0x05C3(0x0005) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnNewSpaceRigNotification;                                // 0x05C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UDiscordWrapper*                             DiscordWI;                                                // 0x05D8(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTwitchWrapper*                              TwitchWI;                                                 // 0x05E0(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UGoogleAnalyticsWrapper*                     GoogleAnalyticsWI;                                        // 0x05E8(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FScriptMulticastDelegate                    OnCampaignNotification;                                   // 0x05F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UCampaignNotification*                       CampaignNotification;                                     // 0x0600(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData09[0x10];                                      // 0x0608(0x0010) MISSED OFFSET
	TWeakObjectPtr<class APostProcessingManager>       PostProcessingManager;                                    // 0x0618(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FFadeData                                   Fading;                                                   // 0x0620(0x0040) (CPF_Edit)
	TArray<struct FSpaceRigNotification>               SpaceRigNotifications;                                    // 0x0660(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TWeakObjectPtr<class ABosco>                       Drone;                                                    // 0x0670(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TWeakObjectPtr<class APlayerCharacter>             LocalPlayerCharacter;                                     // 0x0678(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TWeakObjectPtr<class ATutorialManager>             TutorialManager;                                          // 0x0680(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class ACharacterSelectionSwitcher*                 CharacterSelectionSwitcher;                               // 0x0688(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               bGameSettingsChanged;                                     // 0x0690(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData10[0x27];                                      // 0x0691(0x0027) MISSED OFFSET
	bool                                               IsOnPressStartScreen;                                     // 0x06B8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               HasSeenStartScreen;                                       // 0x06B9(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData11[0x6];                                       // 0x06BA(0x0006) MISSED OFFSET
	class UClass*                                      ProceduralLevel;                                          // 0x06C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData12[0x8];                                       // 0x06C8(0x0008) MISSED OFFSET
	class UCampaignManager*                            CampaignManager;                                          // 0x06D0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UDailyMissionManager*                        DailyMissionManager;                                      // 0x06D8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UMissionGenerationManager*                   MissionGenerationManager;                                 // 0x06E0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UGeneratedMission*                           GeneratedMission;                                         // 0x06E8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UMusicManager*                               MusicManager;                                             // 0x06F0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDifficultySetting*                          DesiredDifficulty;                                        // 0x06F8(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UFSDSaveGame*                                SaveGame;                                                 // 0x0700(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	EDisconnectReason                                  DisconnectReason;                                         // 0x0708(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData13[0x7];                                       // 0x0709(0x0007) MISSED OFFSET
	class UWorld*                                      CharacterSelectionWorld;                                  // 0x0710(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UWorld*                                      LoaderWorld;                                              // 0x0718(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               ShowCharacterSelectionWorld;                              // 0x0720(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData14[0x7];                                       // 0x0721(0x0007) MISSED OFFSET
	class UClass*                                      Viewer3DClass;                                            // 0x0728(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               ShowLoaderWorld;                                          // 0x0730(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               CharacterSelectionWorldActive;                            // 0x0731(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               MixerInteractivityEnabled;                                // 0x0732(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               LoaderWorldActive;                                        // 0x0733(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               ResetHUDWhenReturning;                                    // 0x0734(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData15[0x3];                                       // 0x0735(0x0003) MISSED OFFSET
	class UStatHat*                                    StatHat;                                                  // 0x0738(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UFSDCloudLoadSave*                           FSDCloudLoadSave;                                         // 0x0740(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UFSDSessionUpdater*                          SessionUpdater;                                           // 0x0748(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UFSDSendToURL*                               SendToURL;                                                // 0x0750(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	double                                             SessionStartTime;                                         // 0x0758(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                SessionStartTimestamp;                                    // 0x0760(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              InKBytesPerSecond;                                        // 0x0764(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              OutKBytesPerSecond;                                       // 0x0768(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData16[0x4];                                       // 0x076C(0x0004) MISSED OFFSET
	class UTemporaryBuff*                              TemporaryBuff;                                            // 0x0770(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData17[0xC88];                                     // 0x0778(0x0C88) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDGameInstance");
		return ptr;
	}


	void UpdateGlobelMissionSeed();
	void UpdateDiscordPresence();
	void StopPhotographyInputProcessor();
	void StopPersonalAnalytics();
	void StartPhotographyInputProcessor();
	void StartPersonalAnalytics();
	class AProceduralSetup* SpawnProcedural();
	bool ShouldPendingRewardsBeShown();
	bool ShouldPendingRewardsBeGiven();
	void SetViewer3DClass(class UClass* NewClass);
	void SetSelectedMission(class UGeneratedMission* Mission, bool updateSessionSettings);
	void SetProceduralMap(class UClass* procedural);
	void SetLoaderWorldVisible(bool V, bool resetHud);
	void SetHasSeenInfoScreen();
	void SetFSDPassword(const struct FString& pw);
	void SetDiscordPresence(const struct FDiscordRichPresenceData& presence);
	void SetCharacterSelectionWorldVisible(bool V, ECharselectionCameraLocation cameraLocation, bool resetHud, bool resetToDefaultWeapon);
	void SetCharacterSelectionSwitcher(class ACharacterSelectionSwitcher* switcher);
	void SendSteamInfo();
	void RestoreCursors();
	void ResetSaveGame();
	void RemoveRemporaryBuff();
	void RemoveBosco();
	void PostInit(bool reload);
	void PairingUsePreviousProfile();
	void PairingUseNewProfile();
	void OnNetworkFailure(class UWorld* World, class UNetDriver* NetDriver, TEnumAsByte<ENetworkFailure> failType, const struct FString& errorMessage);
	void OnLoadComplete(const struct FString& MapName);
	static float MessageAge(const struct FFSDChatMessage& Msg);
	void LoadSaveGame(class UFSDSaveGame* toLoad);
	void LatestMessages(int Num, bool resetAge, TArray<struct FFSDChatMessage>* OutMessages);
	static bool IsScreenFinishedFading(class UObject* WorldContext);
	bool IsCampaignMission();
	bool HasSignedIn();
	bool HasPendingInvite();
	bool HasLoaderWorld();
	bool HasharacterSelectionWorld();
	bool HasAnalytics();
	void GraphicsUserSettingsChanged();
	void GiveTemperaryBuff(class UTemporaryBuff* buff);
	struct FVector2D GetViewportSize();
	TSoftObjectPtr<class UClass> GetSoftReferenceToPLS();
	bool GetPendingRewards(struct FPendingRewardsStats* OutStats, struct FPendingRewards* OutRewards);
	bool GetNextSpaceRigNotification(struct FSpaceRigNotification* NextNotification);
	TArray<class UMutator*> GetMutators(class UClass* mutatorClass);
	bool GetHasSeenInfoScreen();
	int GetGlobalMissionSeed();
	class UGeneratedMission* GetGeneratedMission();
	float GetCurrentFadeAmount();
	class APlayerCharacter* GetCharacterSelectorCharacter();
	void GameUserSettingsChanged();
	static void FadeScreenToBlack(class UObject* WorldContext, float FadeTime, float Delay, bool ResetExistingFades, bool CapFramerate, bool FadeWorldOnly);
	static void FadeScreenFromBlack(class UObject* WorldContext, float FadeTime, float Delay, bool ResetExistingFades, bool CapFramerate, bool FadeWorldOnly);
	void ClearPendingRewards();
	void ClearMessages();
	void ClearGameStateSeamlessTravelStorage();
	void ClearCampaignNotifications();
	void ChangeSkinPreview(class UItemSkin* PreviewSkin);
	void CancelJoin();
	static void BlackoutScreen(class UObject* WorldContext, bool FadeWorldOnly);
	void AddStatValue(const struct FString& Key, float Value);
	void AddStatCount(const struct FString& Key, int Count);
	void AddSpaceRigNotification(const struct FSpaceRigNotification& NewNotification, const struct FString& ID, bool TriggerEvent);
};


// Class FSD.FSDGameMode
// 0x0180 (0x0590 - 0x0410)
class AFSDGameMode : public AGameMode
{
public:
	struct FScriptMulticastDelegate                    OnMatchStarted;                                           // 0x0410(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllControllersReady;                                    // 0x0420(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllCharactersReady;                                     // 0x0430(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerLoggedIn;                                         // 0x0440(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDonkeyCalled;                                           // 0x0450(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	bool                                               GenerationStarted;                                        // 0x0460(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0461(0x0007) MISSED OFFSET
	class UEnemySpawnManager*                          EnemySpawnManager;                                        // 0x0468(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UObjectivesManager*                          ObjectivesManager;                                        // 0x0470(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UKeepInsideWorld*                            KeepInsideWorld;                                          // 0x0478(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDifficultyManager*                          DifficultyManagerComponent;                               // 0x0480(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UMissionManager*                             MissionManager;                                           // 0x0488(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UEncounterManager*                           EncounterManagerComponent;                                // 0x0490(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	TArray<class AFSDPlayerController*>                PlayerControllers;                                        // 0x0498(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	class UFormationsManagerComponent*                 FormationsManager;                                        // 0x04A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x04B0(0x0020) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       DropPodClass;                                             // 0x04D0(0x0028) (CPF_Edit)
	TSoftObjectPtr<class UClass>                       DropodEscapeClass;                                        // 0x04F8(0x0028) (CPF_Edit)
	TSoftObjectPtr<class UClass>                       droneClass;                                               // 0x0520(0x0028) (CPF_Edit)
	float                                              ContinueCountdown;                                        // 0x0548(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PlayerSpawnHeightOffset;                                  // 0x054C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FriendlyFireGracePeriod;                                  // 0x0550(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0554(0x0004) MISSED OFFSET
	TArray<class UEnemyDescriptor*>                    ForcedEnemyPool;                                          // 0x0558(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	bool                                               UseStationaryEncounter;                                   // 0x0568(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               AllowSpecialEncounters;                                   // 0x0569(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x26];                                      // 0x056A(0x0026) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDGameMode");
		return ptr;
	}


	void StartGame();
	void SignalEndLevelToClients();
	void ResetDeaths();
	void RecieveEndLevel();
	void RecieveAllDwarvesDown();
	void Recieve_ContinueTimerEnded();
	void ReceivePostSeamlessTravel();
	void OnLevelGenerationComplete(int pass);
	void OnControllerDestroyed(class AActor* Controller);
	void LoadMission(const struct FString& MapName);
	class AActor* GetPlayerStart(class AFSDPlayerController* Controller);
	class UEncounterManager* GetEncounterManager();
	class UClass* GetDropPodEscapeClass();
	class UClass* GetDropPodClass();
	class UClass* GetDroneClass();
	class UDifficultyManager* GetDifficultyManager();
	int GetCurrentLevel();
	bool FSDSetPause(class APlayerController* PC, EPauseReason pauseReason);
	bool FSDKickPlayer(class APlayerController* KickedPlayer, const struct FText& KickReason);
	bool FSDClearPause(EPauseReason pauseReason);
	void FindPlayerStarts();
	void EndLevel();
	void Debug_ShowPlayerSpheres();
	bool AllPlayersHaveSelectedCharacter();
	bool AllPlayersHaveGeneratedLevel();
	void AddControllerForGracePeriod(class APlayerCharacter* APlayerCharacter);
	void AboutMission();
};


// Class FSD.FSDGameModeSpaceRig
// 0x0018 (0x05A8 - 0x0590)
class AFSDGameModeSpaceRig : public AFSDGameMode
{
public:
	unsigned char                                      AmountOfPlayersSpawnedInMedbay;                           // 0x0590(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x17];                                      // 0x0591(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDGameModeSpaceRig");
		return ptr;
	}


	class AActor* GetFreeSpawnOfType(ESpacerigStartType aType, class AFSDPlayerController* AController);
};


// Class FSD.MissionGenerationManager
// 0x0058 (0x0080 - 0x0028)
class UMissionGenerationManager : public UObject
{
public:
	TMap<int, struct FGeneratedMissionGroup>           AllMissionGroups;                                         // 0x0028(0x0050) (CPF_ZeroConstructor, CPF_Transient)
	bool                                               ResetSelectedMission;                                     // 0x0078(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MissionGenerationManager");
		return ptr;
	}


	TArray<class UGeneratedMission*> GetMissions(int Seed);
	class UGeneratedMission* GetMissionFromSeeds(int GlobalSeed, int MissionSeed);
	TArray<class UGeneratedMission*> GetAvailableMissions();
};


// Class FSD.FSDGameSession
// 0x0010 (0x0350 - 0x0340)
class AFSDGameSession : public AGameSession
{
public:
	TArray<struct FUniqueNetIdRepl>                    BannedPlayers;                                            // 0x0340(0x0010) (CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDGameSession");
		return ptr;
	}

};


// Class FSD.GameStats
// 0x0018 (0x0340 - 0x0328)
class AGameStats : public AInfo
{
public:
	int                                                NumberOfPlayersEscapedInPod;                              // 0x0328(0x0004) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              TotalGoldMined;                                           // 0x032C(0x0004) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                TotalEnemiesKilled;                                       // 0x0330(0x0004) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              MissionTime;                                              // 0x0334(0x0004) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                MissionHaz;                                               // 0x0338(0x0004) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x033C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GameStats");
		return ptr;
	}


	void OnPlayerMinedGold(class UCappedResource* Resource, float Amount);
};


// Class FSD.FSDGameState
// 0x0318 (0x06A0 - 0x0388)
class AFSDGameState : public AGameState
{
public:
	bool                                               DevTest;                                                  // 0x0388(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0389(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTerrainGenerated;                                       // 0x0390(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTerrainGenerationStarting;                              // 0x03A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMatchStarted;                                           // 0x03B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerJoined;                                           // 0x03C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerLeave;                                            // 0x03D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnContinueActive;                                         // 0x03E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnContinueCountdownChanged;                               // 0x03F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllDwarvesDown;                                         // 0x0400(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEnemyKilledEvent;                                       // 0x0410(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerCharacterRegistered;                              // 0x0420(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	int                                                CurrentLevel;                                             // 0x0430(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0434(0x0004) MISSED OFFSET
	class AMiningPod*                                  EscapePod;                                                // 0x0438(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FScriptMulticastDelegate                    OnBoscoReviveCounterChanged;                              // 0x0440(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	TArray<class USoundCue*>                           MusicManagerNetworkedCues;                                // 0x0450(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient)
	struct FScriptMulticastDelegate                    OnObjectivesCompleted;                                    // 0x0460(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnObjectiveAdded;                                         // 0x0470(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDifficultyChanged;                                      // 0x0480(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCountdownStarted;                                       // 0x0490(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCountdownTimeChanged;                                   // 0x04A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCountdownFinished;                                      // 0x04B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class ADeepCSGWorld*                               CSGWorld;                                                 // 0x04C0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class AProceduralSetup*                            ProceduralSetup;                                          // 0x04C8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               DelayLateJoin;                                            // 0x04D0(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x04D1(0x0007) MISSED OFFSET
	class UPrimitiveComponent*                         FakeMovementBase;                                         // 0x04D8(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	int                                                PlayerSurvivalCreditBonus;                                // 0x04E0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ResourceAmountPenalty;                                    // 0x04E4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ObjectivesCreditPenalty;                                  // 0x04E8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x04EC(0x0004) MISSED OFFSET
	struct FText                                       TextMissionCompleted;                                     // 0x04F0(0x0018) (CPF_Edit)
	struct FText                                       TextSecondaryObjective;                                   // 0x0508(0x0018) (CPF_Edit)
	struct FText                                       TextSurvivalBonus;                                        // 0x0520(0x0018) (CPF_Edit)
	struct FText                                       TextMined;                                                // 0x0538(0x0018) (CPF_Edit)
	struct FText                                       TextCollected;                                            // 0x0550(0x0018) (CPF_Edit)
	struct FText                                       TextBonus;                                                // 0x0568(0x0018) (CPF_Edit)
	int                                                BoscoReviveCounter;                                       // 0x0580(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0584(0x0004) MISSED OFFSET
	class USpawnEffectsComponent*                      SpawnEffects;                                             // 0x0588(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UTracerManager*                              TracerManager;                                            // 0x0590(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDynamicMeshScaler*                          MeshScaler;                                               // 0x0598(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UFlareController*                            FlareController;                                          // 0x05A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UTeamResourcesComponent*                     TeamResources;                                            // 0x05A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               IsOnSpaceRig;                                             // 0x05B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               PlayerMadeItToDropPod;                                    // 0x05B1(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x05B2(0x0006) MISSED OFFSET
	TArray<class APlayerCharacter*>                    ActivePlayerCharacters;                                   // 0x05B8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient)
	struct FReplicatedObjectives                       Objectives;                                               // 0x05C8(0x0018) (CPF_Net, CPF_Transient)
	struct FGeneratedMissionSeed                       GeneratedMissionSeed;                                     // 0x05E0(0x0040) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               ObjectivesCompleted;                                      // 0x0620(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0621(0x0007) MISSED OFFSET
	class UDifficultySetting*                          CurrentDifficultySetting;                                 // 0x0628(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UPlayerProximityTracker*                     ProximityTracker;                                         // 0x0630(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class AGameStats*                                  GameStats;                                                // 0x0638(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	uint32_t                                           MissionTime;                                              // 0x0640(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	uint32_t                                           MissionHaz;                                               // 0x0644(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               PreventLatejoinCharacterDuplication;                      // 0x0648(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               StartPressed;                                             // 0x0649(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               ContinuePressed;                                          // 0x064A(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0x1];                                       // 0x064B(0x0001) MISSED OFFSET
	int                                                ContinuesCountdown;                                       // 0x064C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               AllDwarvesDown;                                           // 0x0650(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0651(0x0003) MISSED OFFSET
	int                                                CountdownRemaining;                                       // 0x0654(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FText                                       countdownText;                                            // 0x0658(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_Transient)
	bool                                               CanCarryOverResources;                                    // 0x0670(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData09[0x2F];                                      // 0x0671(0x002F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDGameState");
		return ptr;
	}


	void StartCountdown(int Duration, const struct FText& countdownName);
	void SetPreventLatejoinCharacterDuplication(bool prevent);
	void SetPlayersHaveReachedDroppod(bool newHasPlayerReached);
	void SetCurrentDifficulty(class UDifficultySetting* Setting, bool updateSessionSettings);
	void ReceiveGeneratedMissionReplicated();
	void PostGameMessage(const struct FString& Msg);
	void OnRep_StartPressed(bool oldStartPressed);
	void OnRep_ObjectivesCompleted();
	void OnRep_MusicManagerNetworkedCues();
	void OnRep_GeneratedMissionSeed();
	void OnRep_CurrentDifficultySetting();
	void OnRep_CountdownText();
	void OnRep_CountdownRemaining(int prevTime);
	void OnRep_ContinuePressed();
	void OnRep_ContinueCountdown();
	void OnRep_BoscoReviveCounter();
	void OnRep_AllDwarvesDown();
	bool HasObjectivesReplicated();
	void HandleSeamlessTravelEvent();
	class UObjective* GetSecondaryObjective();
	class AProceduralSetup* GetProceduralSetup();
	class UObjective* GetPrimaryObjective();
	bool GetPreventLatejoinCharacterDuplication();
	bool GetPlayersHaveReachedDroppod();
	TArray<class UClass*> GetPlayableCharacters();
	TArray<class UObjective*> GetObjectives();
	bool GetMissionSuccessful();
	int GetMissionRewardXP(bool primary);
	int GetMissionRewardCreditSum();
	TArray<struct FCreditsReward> GetMissionRewardCredits();
	bool GetMissionCompletedCreditReward(bool primary, int* OutReward);
	int GetGlobalMissionSeed();
	class AGameStats* GetGameStats();
	TMap<class UResourceData*, float> GetCollectedResources();
	void ClientNewMessage(const struct FFSDChatMessage& Msg);
	void Client_StartPressed();
	void Client_NewLocalizedMessage(const struct FFSDLocalizedChatMessage& Msg);
	bool AllMissionEndResultsReceived();
	void All_SpawnScaledEffectAt(const struct FScaledEffect& effect, const struct FVector_NetQuantize& Location);
	void All_SpawnScaledEffectAndCueAt(const struct FScaledEffect& effect, class USoundCue* Audio, const struct FVector_NetQuantize& Location);
};


// Class FSD.FSDGameUserSettings
// 0x0170 (0x0288 - 0x0118)
class UFSDGameUserSettings : public UGameUserSettings
{
public:
	struct FScriptMulticastDelegate                    OnUseHoldToRunChanged;                                    // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFOVChanged;                                             // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLanguageChanged;                                        // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCanShowBloodChanged;                                    // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	float                                              volumeMaster;                                             // 0x0158(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	float                                              volumeSFX;                                                // 0x015C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	float                                              volumeMusic;                                              // 0x0160(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	float                                              volumeVoice;                                              // 0x0164(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	class USoundClass*                                 soundClassMaster;                                         // 0x0168(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class USoundClass*                                 soundClassSFX;                                            // 0x0170(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class USoundClass*                                 soundClassUI;                                             // 0x0178(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class USoundClass*                                 soundClassMusic;                                          // 0x0180(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class USoundClass*                                 soundClassVoice;                                          // 0x0188(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               bUseVoiceChat;                                            // 0x0190(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	bool                                               bUsePushToTalk;                                           // 0x0191(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0192(0x0006) MISSED OFFSET
	struct FString                                     LocalGameServerName;                                      // 0x0198(0x0010) (CPF_ZeroConstructor, CPF_Config)
	bool                                               AutoRefreshServerlist;                                    // 0x01A8(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x01A9(0x0003) MISSED OFFSET
	float                                              MouseXSensitivity;                                        // 0x01AC(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	float                                              MouseYSensitivity;                                        // 0x01B0(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	bool                                               UseSeperateSensetivity;                                   // 0x01B4(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	bool                                               InvertMouse;                                              // 0x01B5(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	bool                                               InvertScroolWheel;                                        // 0x01B6(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	bool                                               UseHoldToRun;                                             // 0x01B7(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	float                                              FOV;                                                      // 0x01B8(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	float                                              HeadbobbingScale;                                         // 0x01BC(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	struct FHUDElements                                HUDElements;                                              // 0x01C0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Config)
	float                                              UIDPIScale;                                               // 0x01C4(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x01C8(0x0004) MISSED OFFSET
	bool                                               EnableCustomUIScale;                                      // 0x01CC(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               EnableOnScreenButtonHints;                                // 0x01CD(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x01CE(0x0002) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnInputSourceChanged;                                     // 0x01D0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEnableTutorialHintsChanged;                             // 0x01E0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowFPSChanged;                                         // 0x01F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowNetInfoChanged;                                     // 0x0200(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FIntPoint                                   ResolutionToBeApplied;                                    // 0x0210(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               VSyncToBeApplied;                                         // 0x0218(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TEnumAsByte<EWindowMode>                           InFullscreenModeToBeApplied;                              // 0x0219(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               InFullscreenModeToBeAppliedValid;                         // 0x021A(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               VSyncToBeAppliedValid;                                    // 0x021B(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               ResolutionToBeAppliedValid;                               // 0x021C(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               bShowUpgradeExtraDetails;                                 // 0x021D(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x021E(0x0002) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnShowUpgradeExtraDetailsChanged;                         // 0x0220(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCustomKeyBindingsChanged;                               // 0x0230(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHUDVisibilityChanged;                                   // 0x0240(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	TArray<struct FCustomKeyBinding>                   CustomKeyBindings;                                        // 0x0250(0x0010) (CPF_ZeroConstructor, CPF_Config)
	EInputSource                                       CurrentInputSource;                                       // 0x0260(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	EInputSource                                       RequestedInputSource;                                     // 0x0261(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               bTutorialHintsEnabled;                                    // 0x0262(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	bool                                               bShowSubtitles;                                           // 0x0263(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	bool                                               bShowFPS;                                                 // 0x0264(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	bool                                               bShowNetInfo;                                             // 0x0265(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	bool                                               bCanShowBlood;                                            // 0x0266(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	bool                                               PreventLatejoinCharacterDuplication;                      // 0x0267(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData)
	struct FControllerSettings                         ControllerSettings;                                       // 0x0268(0x000C) (CPF_Config)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0274(0x0004) MISSED OFFSET
	TArray<struct FGuid>                               SelectedDifficultyLevels;                                 // 0x0278(0x0010) (CPF_ZeroConstructor, CPF_Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDGameUserSettings");
		return ptr;
	}


	void UpdateVolumeSettings(class USoundClass* Master, class USoundClass* Music, class USoundClass* SFX, class USoundClass* UI, class USoundClass* Voice);
	bool ToggleShowUpgradeExtraDetails();
	void SetVSyncEnabledToBeApplied(bool bEnable);
	void SetVolume(EVolumeType volumeType, float Volume);
	void SetVoiceChatEnabled(bool bEnable);
	void SetUseSeparateSensitivity(bool newSetting);
	void SetUseHoldToRun(bool UseHoldToRun);
	void SetUseCustomUIScale(bool UseCustomScale);
	void SetUIDPIScale(float uiscale);
	void SetTutorialHintsEnabled(bool Enabled);
	void SetShowSubtitles(bool Show);
	void SetShowOnScreenButtonHints(bool shouldShow);
	void SetShowNetInfo(bool Visible);
	void SetShowFPS(bool Visible);
	void SetScreenResolutionToBeApplied(const struct FIntPoint& Resolution);
	void SetPushToTalk(bool bEnable);
	void SetPreventLatejoinCharacterDuplication(bool prevent);
	void SetMouseYSensitivity(float newSensitivity);
	void SetMouseXSensitivity(float newSensitivity);
	void SetInvertMouseWheel(bool invertMouseWheel);
	void SetInvertMouse(bool InvertMouse);
	void SetInputSource(EInputSource NewSource);
	void SetHUDRadarVisible(bool Visible);
	void SetHUDPlayerClassVisible(bool Visible);
	void SetHUDEnemyHealthVisible(bool Visible);
	void SetHUDDepthVisible(bool Visible);
	void SetHeadBobbingScale(float HeadbobbingScale);
	void SetGameServerName(const struct FString& Name);
	void SetFullscreenModeToBeApplied(TEnumAsByte<EWindowMode> InFullscreenMode);
	void SetFOV(float FOV);
	void SetDisableMasterEQ(bool B);
	void SetDifficultySelected(class UDifficultySetting* Difficulty, bool IsSelected);
	void SetCanShowBlood(bool bloodAllowed);
	void SetAutoRefreshServerlist(bool Value);
	void SetAimSensitivity(float NewValue);
	void SetAimOuterAcceleration(float NewValue);
	void SetAimDeadZone(float NewValue);
	void ResetGraphicsChanges();
	void ResetControllerSettings();
	void RemoveCustomKeyBinding(const struct FName& ActionName, EKeyBindingAxis Axis, int Index);
	bool IsVoiceChatEnabled();
	static bool IsCurrentInputSource(EInputSource InputSource);
	void InitializeDifficultySelection(class UObject* WorldContext, TArray<class UDifficultySetting*> StartSelection);
	bool GetVSyncEnabledToBeApplied();
	float GetVolume(EVolumeType volumeType);
	bool GetUseSeparateSensitivity();
	bool GetUseHoldToRun();
	bool GetUseCustomUIScale();
	float GetUIDPIScale();
	bool GetTutorialHintsEnabled();
	bool GetShowSubtitles();
	bool GetShowOnScreenButtonHints();
	bool GetShowNetInfo();
	bool GetShowFPS();
	struct FIntPoint GetScreenResolutionToBeApplied();
	bool GetPushToTalk();
	bool GetPreventLatejoinCharacterDuplication();
	float GetMouseYSensitivity();
	float GetMouseXSensitivity();
	bool GetKeyBinding(const struct FName& ActionName, EKeyBindingAxis Axis, int Index, struct FKey* outKey);
	bool GetIsDifficultySelected(class UDifficultySetting* Difficulty);
	bool GetInvertMouseWheel();
	bool GetInvertMouse();
	static EInputSource GetInputSource();
	float GetHeadBobbingScale();
	TEnumAsByte<EWindowMode> GetFullscreenModeToBeApplied();
	static class UFSDGameUserSettings* GetFSDGameUserSettings();
	float GetFOV();
	bool GetDisableMasterEQ();
	EInputSource GetCurrentInputSource();
	bool GetAutoRefreshServerlist();
	bool GetAllKeyBindings(const struct FName& ActionName, EKeyBindingAxis Axis, TArray<struct FKey>* OutKeys);
	TArray<struct FCustomKeyBinding> GetAllActionBindings(const struct FKey& Key);
	float GetAimSensitivity();
	float GetAimOuterAcceleration();
	float GetAimDeadZone();
	struct FString GameServerName();
	static bool FSDSetCurrentLanguage(class UObject* WorldContextObject, const struct FString& Culture);
	static class UFSDGameUserSettings* FSDGameUserSettings();
	void ClearCustomKeyBindings();
	bool CanShowBlood();
	void ApplyGraphicsChanges();
	bool AddCustomKeyBinding(const struct FName& ActionName, EKeyBindingAxis Axis, const struct FKey& Key, int Index);
};


// Class FSD.FSDHUD
// 0x0008 (0x0420 - 0x0418)
class AFSDHUD : public AHUD
{
public:
	unsigned char                                      IsVisibleFlags;                                           // 0x0418(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0419(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDHUD");
		return ptr;
	}


	bool ToggleHUDVisibility(EHUDVisibilityReason reason);
	void SetHUDVisible(bool IsVisible, EHUDVisibilityReason reason);
	void RadarPointAdded(class URadarPointComponent* radarPoint);
	void PlayerSpawned(class APlayerCharacter* Player);
	void OnVisibilityChanged();
	bool IsHUDVisibleFlagSet(EHUDVisibilityReason reason);
	void HandleSeamlessTravel();
	bool GetHUDVisible();
};


// Class FSD.FSDMainHUDWidget
// 0x0000 (0x0208 - 0x0208)
class UFSDMainHUDWidget : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDMainHUDWidget");
		return ptr;
	}


	void OnRadarPointAdded(class URadarPointComponent* Point);
	void AddRadarPoint(class URadarPointComponent* Point);
};


// Class FSD.FSDJoinSessionCallbackProxy
// 0x0118 (0x0140 - 0x0028)
class UFSDJoinSessionCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData00[0xF8];                                      // 0x0048(0x00F8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDJoinSessionCallbackProxy");
		return ptr;
	}


	static class UFSDJoinSessionCallbackProxy* FSDJoinSession(class UObject* WorldContextObject, class APlayerController* PlayerController, const struct FBlueprintSessionResult& SearchResult, const struct FString& FSDPassword, bool fromInvite);
};


// Class FSD.FSDLiveUtils
// 0x0000 (0x0028 - 0x0028)
class UFSDLiveUtils : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDLiveUtils");
		return ptr;
	}


	static void ShowAccountPicker(class UFSDGameInstance* gInstance, int GamePlayerID);
	static void OpenGamerCard(class APlayerState* Requestor, class APlayerState* Requestee);
};


// Class FSD.FSDMatchmakingCallbackProxy
// 0x0100 (0x0128 - 0x0028)
class UFSDMatchmakingCallbackProxy : public UOnlineBlueprintCallProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCancelled;                                              // 0x0048(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptDelegate                             FailDelegateHandle;                                       // 0x0058(0x0014) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0068(0x0028) MISSED OFFSET
	class UMissionTemplate*                            Mission;                                                  // 0x0090(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UBiome*                                      Biome;                                                    // 0x0098(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UDifficultySetting*                          Difficulty;                                               // 0x00A0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x80];                                      // 0x00A8(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDMatchmakingCallbackProxy");
		return ptr;
	}


	static class UFSDMatchmakingCallbackProxy* FSDMatchmaking(class UObject* WorldContextObject, class APlayerController* PlayerController, const struct FScriptDelegate& FailDelegate, class UDifficultySetting* DesiredDifficulty, class UBiome* desiredBiome, class UMissionTemplate* desiredMission);
	static void CancelMatchmaking();
};


// Class FSD.FSDMath
// 0x0000 (0x0028 - 0x0028)
class UFSDMath : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDMath");
		return ptr;
	}


	static struct FVector SphericalToCartesian(float Radius, float azimuth, float elecation);
	static void GetAzimuthAndElevation(const struct FVector& Direction, const struct FTransform& coordinateSystem, float* azimuth, float* elevation);
	static void CartesianToSpherical(const struct FVector& Location, float* outAzimuth, float* outElevation, float* outRadius);
};


// Class FSD.FSDOnlineSessionClient
// 0x0000 (0x0190 - 0x0190)
class UFSDOnlineSessionClient : public UOnlineSessionClient
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDOnlineSessionClient");
		return ptr;
	}

};


// Class FSD.FSDPhysicalMaterial
// 0x00A8 (0x0128 - 0x0080)
class UFSDPhysicalMaterial : public UPhysicalMaterial
{
public:
	class UParticleSystem*                             ImpactParticles;                                          // 0x0080(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMaterialInstance*                           ImpactMaterialOverride;                                   // 0x0088(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   ImpactSound;                                              // 0x0090(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               UseImpactDecalOverrides;                                  // 0x0098(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET
	TArray<struct FDecalData>                          ImpactDecals;                                             // 0x00A0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_EditFixedSize, CPF_ZeroConstructor)
	class USoundCue*                                   FirstPersonDamageIndicatorSound;                          // 0x00B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsWeakPoint;                                              // 0x00B8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00B9(0x0003) MISSED OFFSET
	float                                              DamageMultiplier;                                         // 0x00BC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             FootstepParticle;                                         // 0x00C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMaterialInstance*                           FootstepMaterialOverride;                                 // 0x00C8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FDecalData                                  LeftFootprintDecal;                                       // 0x00D0(0x0018) (CPF_Edit)
	struct FDecalData                                  RightFootprintDecal;                                      // 0x00E8(0x0018) (CPF_Edit)
	class USoundCue*                                   FootstepSound;                                            // 0x0100(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ExtraFallVelocity;                                        // 0x0108(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	class UParticleSystem*                             FallImpactEffect;                                         // 0x0110(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   FallImpactSound;                                          // 0x0118(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      ReactiveTerrain;                                          // 0x0120(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDPhysicalMaterial");
		return ptr;
	}


	class UParticleSystemComponent* SpawnImpactParticles(class UObject* WorldContextObject, const struct FVector& Location, const struct FVector& Normal);
	static class UFSDPhysicalMaterial* GetPhysicalMaterialFromPrimitive(class UPrimitiveComponent* Component);
};


// Class FSD.OptionalBloodPhysicalMaterial
// 0x0008 (0x0130 - 0x0128)
class UOptionalBloodPhysicalMaterial : public UFSDPhysicalMaterial
{
public:
	class UParticleSystem*                             BloodlessImpactParticles;                                 // 0x0128(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.OptionalBloodPhysicalMaterial");
		return ptr;
	}

};


// Class FSD.FSDPlayerControllerBase
// 0x0038 (0x06B0 - 0x0678)
class AFSDPlayerControllerBase : public APlayerController
{
public:
	class UMaterialParameterCollection*                GlobalMaterialParameterCollection;                        // 0x0678(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0680(0x0002) MISSED OFFSET
	bool                                               bStartWithBlackScreen;                                    // 0x0682(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0683(0x0005) MISSED OFFSET
	class UWindowManager*                              WindowManager;                                            // 0x0688(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0690(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDPlayerControllerBase");
		return ptr;
	}


	void ToggleAnalogCursor(bool Visible);
	void StopAspectRatioAxisConstraint();
	void StartAspectRatioAxisConstraint();
	void SetHUDVisible(bool IsVisible, EHUDVisibilityReason reason);
	void Server_Cheat_SwitchCharacter(class UClass* NewCharacter);
	void RequestPLSData();
	void RecievePreClientTravel();
	void RecieveHUDVisibilityChanged(bool IsVisible);
	bool IsHUDVisibleFlagSet(EHUDVisibilityReason reason);
	void Client_WasKicked(EDisconnectReason reason);
};


// Class FSD.FSDPlayerController
// 0x0180 (0x0830 - 0x06B0)
class AFSDPlayerController : public AFSDPlayerControllerBase
{
public:
	struct FScriptMulticastDelegate                    OnReceiveVoiceChanged;                                    // 0x06B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTransmitVoiceChanged;                                   // 0x06C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLevelFinished;                                          // 0x06D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowTutorialHint;                                       // 0x06E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChangeTutorialHintDuration;                             // 0x06F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHideCurrentTutorialHint;                                // 0x0700(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerCharacterPossesed;                                // 0x0710(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMixerNameChange;                                        // 0x0720(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	TArray<class USoundMix*>                           InitialSoundMixes;                                        // 0x0730(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	bool                                               ServerTravelDone;                                         // 0x0740(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0741(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnChatOpened;                                             // 0x0748(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UFSDWidgetEffectsComponent*                  WidgetEffects;                                            // 0x0758(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	class UChromaComponent*                            ChromaEffects;                                            // 0x0760(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	ESpacerigStartType                                 SpacerigSpawnType;                                        // 0x0768(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0769(0x000F) MISSED OFFSET
	bool                                               bDetectGravityChanges;                                    // 0x0778(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0xB7];                                      // 0x0779(0x00B7) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDPlayerController");
		return ptr;
	}


	void ToggleVoiceOn(bool Enabled);
	void SpawnSupplyPod(class UClass* SupplyBeacon, class UClass* SupplyPod, const struct FVector& atLocation, float Radius, const struct FString& ViewerName, const struct FString& Description);
	void SpawnEnemyPack(class UClass* enemyClass, const struct FVector& atLocation, float Radius, int packSize, const struct FString& ViewerName, const struct FString& Description);
	void ShowTutorialHint(const struct FText& Text, const struct FText& ControllerOverrideText, const struct FText& Title, float Duration);
	void SetPlayerStart(class AActor* Start);
	void ServerSetUserHoldToRun(bool Value);
	void Server_TravelDone();
	void Server_TerrainLateJoinPartReceived();
	void Server_SpawnSupplyPod(class UClass* SupplyBeacon, class UClass* SupplyPod, const struct FVector& atLocation, float Radius, const struct FString& ViewerName, const struct FString& Description);
	void Server_SpawnEnemies(class UClass* enemyClass, const struct FVector& atLocation, float Radius, int packSize, const struct FString& ViewerName, const struct FString& Description);
	void Server_SetLateJoinDone();
	void Server_SetGenerationStatus(const struct FString& status, float Fraction);
	void Server_SetGenerationFraction(float Fraction);
	void Server_SetGenerationDone();
	void Server_SetControllerReady();
	void Server_ResetHUD();
	void Server_NewMessage(const struct FString& Sender, const struct FString& Text, EChatSenderType SenderType);
	void Server_AddTeamResources(class UResourceData* ResourceData, float Amount, const struct FString& ViewerName, const struct FString& Description);
	void Server_ActivateTemporaryBuff(class UTemporaryBuff* buff);
	void SendRequestedPLSData();
	void SendLevelUpStatistics(int currentRank);
	void RecievePawnDestroyed();
	void RecieveOnControllerReady();
	void RecieveClientTravelDone();
	void ReceivingVoiceSignature__DelegateSignature(bool isRecieving);
	void ReceiveEndLevel();
	void Receive_EndLevel_WaitForData();
	void ReadyToContinueFromEndScreen();
	void OnShowTutorialHint__DelegateSignature(const struct FText& Text, const struct FText& ControllerOverrideText, const struct FText& Title, float Duration);
	void OnSaveGamePlayerProgressChanged(int Rank, int Stars);
	void OnSaveGameCreditsChanged(int Credits);
	void OnSaveGameCharacterProgressChanged(class UClass* CharacterClass, int Level, float Progress);
	void OnPlayerStateSelectedCharacterChanged(class UClass* CharacterClass);
	void OnPlayerSpawnBegin(int PlayerId);
	void OnHideTutorialHint__DelegateSignature();
	void OnGenerationDone();
	void OnChangeTutorialHintDuration__DelegateSignature(float NewDuration);
	EFSDMixerLoginState MixerState();
	void MixerLogout();
	void MixerLogin();
	void LevelFinishedSignature__DelegateSignature();
	void HideTutorialHint();
	bool HasPendingRewards();
	bool GetUseHoldToRun();
	class AActor* GetPlayerStart();
	bool GetPendingRewards(struct FPendingRewardsStats* OutStats, struct FPendingRewards* OutRewards);
	class AFSDPlayerState* GetFSDPlayerState();
	class UChromaComponent* GetChromaEffectsComponent();
	class AActor* FindPlayerStart(TSoftObjectPtr<class UClass> Hero);
	void EndLevel();
	void Client_TerrainLateJoinVisibleChunks(TArray<uint32_t> visibleChunks);
	void Client_TerrainLateJoinPart(TArray<struct FGrenadeExplodeOperationData> Explosions, TArray<struct FCarveWithColliderOperationData> colliderCarves, TArray<struct FCarveWithSTLMeshOperationData> meshCarves, TArray<struct FPickaxeDigOperationData> pickAxe, TArray<struct FDrillOperationData> drills, TArray<struct FMeltOperationData> melts);
	void Client_TerrainLateJoinDone();
	void Client_TerrainLateJoinDebris(TArray<int> instanceComponentPairs);
	void Client_RecievePLSSizes(int influenceCount, int carverCount, int levelCarverCount);
	void Client_RecievePLSLevelCarver(const struct FLevelGenerationCarverLists& levelCarvers);
	void Client_RecievePLSInstantCarver(const struct FGeneratedInstantCarverLists& instantCarvers);
	void Client_RecievePLSInfluencers(const struct FGeneratedInfluenceSets& influenceSet);
	void Client_PlayCue(class USoundCue* SoundCue);
	void Client_EndLevel_WaitForData();
	void ApplyPendingRewards();
	void AddTeamResources(class UResourceData* ResourceData, float Amount, const struct FString& ViewerName, const struct FString& Description);
};


// Class FSD.FSDPlayerStart
// 0x0030 (0x0358 - 0x0328)
class AFSDPlayerStart : public AActor
{
public:
	TSoftObjectPtr<class UClass>                       PreferredClass;                                           // 0x0328(0x0028) (CPF_Edit, CPF_BlueprintVisible)
	class AFSDPlayerController*                        UsedBy;                                                   // 0x0350(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDPlayerStart");
		return ptr;
	}

};


// Class FSD.SpacerigStart
// 0x0030 (0x0388 - 0x0358)
class ASpacerigStart : public APlayerStart
{
public:
	struct FScriptMulticastDelegate                    OnPlayerSpawn;                                            // 0x0358(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerLeave;                                            // 0x0368(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class AFSDPlayerController*                        UsedBy;                                                   // 0x0378(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	ESpacerigStartType                                 StartType;                                                // 0x0380(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0381(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SpacerigStart");
		return ptr;
	}

};


// Class FSD.PlayerStatsComponent
// 0x0090 (0x0180 - 0x00F0)
class UPlayerStatsComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnKillAdded;                                              // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	int                                                TotalKills;                                               // 0x0100(0x0004) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                TotalRevived;                                             // 0x0104(0x0004) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                TotalDeaths;                                              // 0x0108(0x0004) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              TotalGoldMined;                                           // 0x010C(0x0004) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              TotalMOMsMined;                                           // 0x0110(0x0004) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              TotalMineralsMined;                                       // 0x0114(0x0004) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              TotalXPGained;                                            // 0x0118(0x0004) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               EscapedInPod;                                             // 0x011C(0x0001) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x011D(0x0003) MISSED OFFSET
	class UClass*                                      LastPlayedClass;                                          // 0x0120(0x0008) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FEndMissionResult                           EndMissionResult;                                         // 0x0128(0x0058) (CPF_BlueprintVisible, CPF_Net, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerStatsComponent");
		return ptr;
	}


	void SendMissionAnalytics(bool trackMorkite);
	void SendEndMissionResult(const struct FEndMissionResult& Result);
	void OnResourceMined(class UCappedResource* Resource, float Amount);
};


// Class FSD.FSDPlayerState
// 0x00E0 (0x04D0 - 0x03F0)
class AFSDPlayerState : public APlayerState
{
public:
	struct FScriptMulticastDelegate                    OnPlayerCharacterSpawned;                                 // 0x03F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerTalkingChanged;                                   // 0x0400(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSelectedCharacterChanged;                               // 0x0410(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	float                                              FractionLevelGenerated;                                   // 0x0420(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0424(0x0004) MISSED OFFSET
	struct FString                                     LevelGenerationState;                                     // 0x0428(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient)
	struct FScriptMulticastDelegate                    OnEnemyKilledEvent;                                       // 0x0438(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	TArray<class UVanityItem*>                         LatestEquipedVanity;                                      // 0x0448(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient)
	class UClass*                                      SelectedCharacter;                                        // 0x0458(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bIsServer;                                                // 0x0460(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               ShouldCopyProperties;                                     // 0x0461(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               HasDeluxeEdition;                                         // 0x0462(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0463(0x0005) MISSED OFFSET
	class UPlayerStatsComponent*                       PlayerStatsComponent;                                     // 0x0468(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UPlayerRejoinState*                          RejoinState;                                              // 0x0470(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USaveGameStateComponent*                     SaveGameStateComponent;                                   // 0x0478(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class APlayerCharacter*                            PlayerCharacter;                                          // 0x0480(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsInMission;                                              // 0x0488(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsTalking;                                                // 0x0489(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               HasGeneratedLevel;                                        // 0x048A(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               HasSelectedCharacter;                                     // 0x048B(0x0001) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x048C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayerNameChanged;                                      // 0x0490(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFractionLevelGenerated;                                 // 0x04A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLevelGenerationStateChanged;                            // 0x04B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UPlayerResourceComponent*                    PlayerResources;                                          // 0x04C0(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      CampaignMissionIndex;                                     // 0x04C8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x04C9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDPlayerState");
		return ptr;
	}


	void SetSelectedCharacter(class UClass* NewCharacter);
	void ServerSetSelectedCharacter(class UClass* NewCharacter);
	void Server_SetCampaignMissionIndex(unsigned char Index);
	void Server_EnableDeluxeEdition();
	void OnRep_SelectedCharacter();
	void OnRep_PlayerCharacter();
	void OnRep_LevelGenerationState();
	void OnRep_HasDeluxeEdition();
	void OnRep_FractionLevelGenerated();
	void OnRep_CampaignMissionIndex();
	void OnLateJoinFinished();
	int GetXPRewardsSum();
	TArray<struct FXPReward> GetXPRewardsCustom(TMap<class UResourceData*, float> resources, int EnemiesKilled, bool FailPrimaryObjectiveCompleted, bool FailSecondaryObjectiveCompleted);
	TArray<struct FXPReward> GetXPRewards();
	int GetSelectedCharacterLevel();
	struct FCharacterProgress GetSelectCharacterProgress();
	class UPlayerResourceComponent* GetPlayerResourceComponent();
	int GetPlayerRank();
	int GetCharacterLevel(class UClass* CharacterClass);
};


// Class FSD.ItemUpgradePreviewComponent
// 0x0008 (0x00F8 - 0x00F0)
class UItemUpgradePreviewComponent : public UActorComponent
{
public:
	class UItemUpgrade*                                PreviewUpgrade;                                           // 0x00F0(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ItemUpgradePreviewComponent");
		return ptr;
	}

};


// Class FSD.FSDPostProcessingActor
// 0x0020 (0x0348 - 0x0328)
class AFSDPostProcessingActor : public AActor
{
public:
	EPostProcessingType                                PostProcessingType;                                       // 0x0328(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0329(0x0007) MISSED OFFSET
	class UPostProcessComponent*                       PostProcessComponent;                                     // 0x0330(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FWeightedBlendables                         InitialBlendables;                                        // 0x0338(0x0010) (CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDPostProcessingActor");
		return ptr;
	}


	static void UnapplyPostProcessingBlendablesByType(class UObject* WorldContext, EPostProcessingType Type);
	static void UnapplyPostProcessingBlendablesByID(class UObject* WorldContext, const struct FName& InID);
	static void UnapplyPostProcessingBlendable(class UObject* WorldContext, EPostProcessingType Type, const TScriptInterface<class UBlendableInterface>& InBlendableObject);
	static void UnapplyAllPostProcessingBlendables(class UObject* WorldContext);
	void SetPostProcessManager(class APostProcessingManager* InManager);
	static class UMaterialInstanceDynamic* GetPostProcessingMaterialInstance(class UObject* WorldContext, class UMaterialInterface* Material);
	static class UMaterialInstanceDynamic* ApplyPostProcessingMaterial(class UObject* WorldContext, EPostProcessingType Type, class UMaterialInterface* Material, float InWeight, const struct FName& InID);
	static void ApplyPostProcessingBlendable(class UObject* WorldContext, EPostProcessingType Type, const TScriptInterface<class UBlendableInterface>& InBlendableObject, float InWeight, const struct FName& InID);
};


// Class FSD.FSDSaveGame
// 0x04C8 (0x04F0 - 0x0028)
class UFSDSaveGame : public USaveGame
{
public:
	struct FScriptMulticastDelegate                    OnCreditsChanged;                                         // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterSaveChanged;                                   // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterCanRetire;                                     // 0x0048(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterRetired;                                       // 0x0058(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerProgressChanged;                                  // 0x0068(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTutorialsReset;                                         // 0x0078(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPersonalMetricsChanged;                                 // 0x0088(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAnonymousMetricsChanged;                                // 0x0098(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemUnlocked;                                           // 0x00A8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemPurchased;                                          // 0x00B8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	int                                                VersionNumber;                                            // 0x00C8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bUpgradeOverhaulMessageShown;                             // 0x00CC(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00CD(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnResourceAmountChanged;                                  // 0x00D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSkinUnlocked;                                           // 0x00E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData01[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET
	struct FDateTime                                   SaveSlotTimeStamp;                                        // 0x0100(0x0008) (CPF_ZeroConstructor)
	struct FScriptMulticastDelegate                    OnPerkPointsChanged;                                      // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FMissionStatSave                            MissionStatsSave;                                         // 0x0118(0x0018)
	struct FMilestoneSave                              Milestones;                                               // 0x0130(0x0010)
	struct FPerkClaimsSave                             OwnedPerks;                                               // 0x0140(0x0010)
	struct FCharacterPerksSave                         EquippedPerks;                                            // 0x0150(0x0010)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0160(0x0004) MISSED OFFSET
	int                                                SaveCreatedInPatch;                                       // 0x0164(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FString                                     AnonymousID;                                              // 0x0168(0x0010) (CPF_ZeroConstructor)
	int                                                PerkPoints;                                               // 0x0178(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x017C(0x0004) MISSED OFFSET
	TArray<struct FGuid>                               UnLockedMissions;                                         // 0x0180(0x0010) (CPF_ZeroConstructor)
	TMap<struct FGuid, struct FUnLockedMissionParameters> UnLockedMissionParameters;                                // 0x0190(0x0050) (CPF_ZeroConstructor)
	TArray<struct FGuid>                               UnLockedPlanetZones;                                      // 0x01E0(0x0010) (CPF_ZeroConstructor)
	struct FCampaignSave                               CampaignSave;                                             // 0x01F0(0x0030)
	struct FDailyMissionSave                           DailyMissionSave;                                         // 0x0220(0x0004)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0224(0x0004) MISSED OFFSET
	TArray<struct FCharacterSave>                      CharacterSaves;                                           // 0x0228(0x0010) (CPF_ZeroConstructor)
	int                                                Credits;                                                  // 0x0238(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x023C(0x0004) MISSED OFFSET
	TMap<struct FGuid, struct FItemUpgradeSelection>   ItemUpgradeSelections;                                    // 0x0240(0x0050) (CPF_ZeroConstructor)
	TArray<struct FGuid>                               PurchasedItemUpgrades;                                    // 0x0290(0x0010) (CPF_ZeroConstructor)
	TArray<struct FGuid>                               UnLockedItemUpgrades;                                     // 0x02A0(0x0010) (CPF_ZeroConstructor)
	TArray<struct FGuid>                               UnlockedItems;                                            // 0x02B0(0x0010) (CPF_ZeroConstructor)
	TArray<struct FGuid>                               OwnedItems;                                               // 0x02C0(0x0010) (CPF_ZeroConstructor)
	unsigned char                                      UnknownData06[0x50];                                      // 0x02D0(0x0050) UNKNOWN PROPERTY: SetProperty FSD.FSDSaveGame.SkinnableItems
	unsigned char                                      UnknownData07[0x50];                                      // 0x0320(0x0050) UNKNOWN PROPERTY: SetProperty FSD.FSDSaveGame.UnlockedItemSkins
	TArray<class UVanityItem*>                         UnLockedVanityItems;                                      // 0x0370(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<struct FGuid>                               UnLockedVanityItemIDs;                                    // 0x0380(0x0010) (CPF_ZeroConstructor)
	TArray<struct FGuid>                               HiddenUICategories;                                       // 0x0390(0x0010) (CPF_ZeroConstructor)
	struct FResourcesSave                              resources;                                                // 0x03A0(0x00A0)
	bool                                               FirstSession;                                             // 0x0440(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x0441(0x0007) MISSED OFFSET
	TArray<struct FWatchedTutorial>                    WatchedTutorials;                                         // 0x0448(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	struct FConsoleOptionsInSaveGame                   ConsoleOptions;                                           // 0x0458(0x0058)
	struct FOptionsInSaveGame                          WindowsOptions;                                           // 0x04B0(0x0008)
	bool                                               HasPlayedTutorial;                                        // 0x04B8(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               HasPlayedIntroMessage;                                    // 0x04B9(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               HasSentSteamInfo;                                         // 0x04BA(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               HasClaimedSteamGroupLoot;                                 // 0x04BB(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               HasRefundedUpgradeCostDifference;                         // 0x04BC(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               HasJoinedXboxClub;                                        // 0x04BD(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               HasSeenAnalyticsPopUp;                                    // 0x04BE(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               AllowAnalyticsTracking;                                   // 0x04BF(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               AllowPersonalAnalyticsTracking;                           // 0x04C0(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x04C1(0x0003) MISSED OFFSET
	float                                              TotalPlayTimeSeconds;                                     // 0x04C4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	uint32_t                                           UserIdx;                                                  // 0x04C8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	uint32_t                                           SaveToDiskCounter;                                        // 0x04CC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	uint32_t                                           BackupSaveIndex;                                          // 0x04D0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	uint32_t                                           ExternalBackupSaveIndex;                                  // 0x04D4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                NumberOfGamesPlayed;                                      // 0x04D8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x04DC(0x0004) MISSED OFFSET
	class UClass*                                      LastPlayedCharacter;                                      // 0x04E0(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFSDGameInstance*                            FSDGameInstance;                                          // 0x04E8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDSaveGame");
		return ptr;
	}


	void TutorialsResetDelegate__DelegateSignature();
	bool TrySellResource(class UResourceData* Resource, int Amount, int* Price);
	bool TryDeductCredits(int Amount);
	bool TryDeducResources(TMap<class UResourceData*, int> resources);
	bool TryBuyResource(class UResourceData* Resource, int Amount, int* Price);
	void SkinSignature__DelegateSignature(class UItemSkin* Skin);
	bool SetPersonalAnalytics(bool State);
	void SetHasSentSteamInfo();
	void SetHasJoinedXboxClub();
	void SetHasClaimSteamGroupLoot();
	void SetEquippedItem(EItemCategory Category, class UPlayerCharacterID* PlayerId, class UClass* Item);
	bool SetAnonymousAnalytics(bool State);
	void SaveToDisk();
	void RetirementSignature__DelegateSignature(class UClass* CharacterClass, int RetirementCount);
	int RetireCharacter(class UPlayerCharacterID* characterID);
	void ResourceAmountChangedDelegate__DelegateSignature(class UResourceData* Resource, float currentAmount);
	void ResetTutorials();
	void PlayerProgressChangedSignature__DelegateSignature(int Rank, int Stars);
	void PersonalMatricsChangedSignature__DelegateSignature(bool AllowPersonalMetrics);
	void PerkPointsChangedSignature__DelegateSignature(int PerkPoints, int Change);
	void ItemUnlockedDelegate__DelegateSignature();
	bool IsObsolete();
	bool HasCharacterRetired(class UClass* CharacterClass);
	bool HasCharacterCompletedRetirementCampaign(class UClass* characerClass);
	static bool HasBackupWithMoreProgress(class UFSDGameInstance* GameInstance);
	int GetTotalGamesPlayed();
	struct FDateTime GetSlotTimeStamp();
	struct FString GetSlotLoadedFrom();
	int GetResourceSellingPrice(class UResourceData* Resource, int Amount);
	int GetResourceBuyingPrice(class UResourceData* Resource, int Amount);
	float GetResourceAmount(class UResourceData* Resource);
	int GetRequiredXPForLevel(int Level);
	int GetPurchasableItemCount();
	int GetPlayerRetirementRank();
	int GetPlayerRank();
	int GetPerkPoints();
	bool GetHasSentSteamInfo();
	bool GetHasClaimedSteamGroupLoot();
	class UClass* GetEquippedItem(EItemCategory Category, class UPlayerCharacterID* PlayerId);
	int GetCredits();
	int GetClassLevel(class UClass* CharacterClass);
	static TArray<class UFSDSaveGame*> GetAllSavesFromDisk(class UFSDGameInstance* GameInstance);
	bool DeductPerkPoints(int Amount);
	void CreditsChangedSignature__DelegateSignature(int Credits);
	void CharacterSignature__DelegateSignature(class UClass* CharacterClass);
	void CharacterProgressChangedSignature__DelegateSignature(class UClass* CharacterClass, int Level, float Progress);
	bool CanAfford(TMap<class UResourceData*, int> resources);
	void AnonymousMatricsChangedSignature__DelegateSignature(bool AllowAnonymousMetrics);
	void AddPerkPoints(int Amount);
	void AddGamePlayed();
	int AddCredits(int Amount);
};


// Class FSD.OptionalUICategory
// 0x0038 (0x0068 - 0x0030)
class UOptionalUICategory : public UDataAsset
{
public:
	struct FScriptMulticastDelegate                    OnVisibilityChanged;                                      // 0x0030(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FGuid                                       Guid;                                                     // 0x0040(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	struct FText                                       Description;                                              // 0x0050(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.OptionalUICategory");
		return ptr;
	}


	void VisibilityChanged__DelegateSignature(class UOptionalUICategory* Category, bool IsVisible);
	void SetVisible(class UObject* WorldContext, bool IsCategoryVisible);
	bool IsVisible(class UObject* WorldContext);
};


// Class FSD.ItemRefundList
// 0x0068 (0x0098 - 0x0030)
class UItemRefundList : public UDataAsset
{
public:
	bool                                               ResetListOnSave;                                          // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	TArray<TSoftObjectPtr<class UObject>>              Items;                                                    // 0x0038(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TMap<struct FGuid, struct FItemRefundListItem>     ItemsToRefund;                                            // 0x0048(0x0050) (CPF_Edit, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ItemRefundList");
		return ptr;
	}

};


// Class FSD.FSDSendToURL
// 0x0018 (0x0040 - 0x0028)
class UFSDSendToURL : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDSendToURL");
		return ptr;
	}

};


// Class FSD.FSDSessionUpdater
// 0x0028 (0x0050 - 0x0028)
class UFSDSessionUpdater : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDSessionUpdater");
		return ptr;
	}

};


// Class FSD.FSDFindSteamSessions
// 0x0028 (0x0050 - 0x0028)
class UFSDFindSteamSessions : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnFindResult;                                             // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0038(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDFindSteamSessions");
		return ptr;
	}

};


// Class FSD.FSDSkeletalMeshComponent
// 0x0000 (0x0B30 - 0x0B30)
class UFSDSkeletalMeshComponent : public USkeletalMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDSkeletalMeshComponent");
		return ptr;
	}

};


// Class FSD.FSDSteamUserStats
// 0x0010 (0x0100 - 0x00F0)
class UFSDSteamUserStats : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDSteamUserStats");
		return ptr;
	}

};


// Class FSD.FSDSteamUtils
// 0x0000 (0x0028 - 0x0028)
class UFSDSteamUtils : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDSteamUtils");
		return ptr;
	}


	static bool PlayerIsFollowingUsOnSteam();
	static void OpenURLInSteamBrowser(const struct FString& URL);
	static bool IsSteamLoaded();
	static bool IsDev(class APlayerState* PlayerState);
	static bool HasDeluxeEdition();
	static struct FString GetSteamRegion();
	static struct FString GetSteamLanguage();
	static ESteamBranch GetSteamBranch();
	static struct FString GetPlayerSteamName();
	static struct FString GetPlayerSteamID();
};


// Class FSD.FSDXboxUtils
// 0x0000 (0x0028 - 0x0028)
class UFSDXboxUtils : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDXboxUtils");
		return ptr;
	}


	static bool ShowCheatTerminal();
};


// Class FSD.FSDLevelLoadingPersistentWidget
// 0x0000 (0x0208 - 0x0208)
class UFSDLevelLoadingPersistentWidget : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDLevelLoadingPersistentWidget");
		return ptr;
	}

};


// Class FSD.FSDLabelWidget
// 0x0000 (0x0218 - 0x0218)
class UFSDLabelWidget : public UTextBlock
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDLabelWidget");
		return ptr;
	}


	void SetWrapTextAt(float WrapAt);
	void SetWrappingPolicy(ETextWrappingPolicy Policy);
	void SetMargin(const struct FMargin& NewMargin);
	void SetLineHeightPercentage(float percentage);
	void SetFontSize(int Size);
	int GetFontSize();
};


// Class FSD.FSDWidgetBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UFSDWidgetBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDWidgetBlueprintLibrary");
		return ptr;
	}


	static void SimpleBox(const struct FVector2D& Position, const struct FVector2D& Size, const struct FLinearColor& Tint, struct FPaintContext* Context);
	static void SetMousePosition(class UObject* WorldContextObject, int X, int Y);
	static void Line(const struct FVector2D& Pos1, const struct FVector2D& Pos2, const struct FLinearColor& Tint, struct FPaintContext* Context);
	static bool IsWindowsPlatform(class UObject* WorldContextObject);
	static bool IsHUDVisible(class UObject* WorldContextObject);
	static struct FString IntToRomanNumeral(int Value);
	static class AFSDPlayerState* GetOwningFSDPlayerState(class UWidget* Target);
	static class UWidget* GetFocusedWidget(class UObject* WorldContextObject, class APlayerController* Controller);
	static struct FVector2D GetDrawSize(struct FPaintContext* InContext);
	static class UFSDCheatManager* GetCheatManager(class UObject* WorldContextObject);
	static class UVerticalBox* CreateVerticalBox(class UObject* WorldContext);
	static class UTextBlock* CreateTextBlock(class UObject* WorldContext, const struct FText& Text, const struct FSlateFontInfo& Font, TEnumAsByte<ETextJustify> Justification, const struct FLinearColor& Color, bool WrapText);
	static class UImage* CreateImageSized(class UObject* WorldContext, class UTexture2D* Texture, const struct FLinearColor& Tint, const struct FVector2D& Size);
	static class UImage* CreateImage(class UObject* WorldContext, class UTexture2D* Texture, const struct FLinearColor& Tint, bool AutoSize);
	static class UHorizontalBox* CreateHorizontalBox(class UObject* WorldContext);
	static void Box(const struct FVector2D& Position, const struct FVector2D& Size, const struct FSlateBrush& Brush, const struct FLinearColor& Tint, struct FPaintContext* Context);
	static class UWidget* AddChildToVerticalBoxEx(class UVerticalBox* VerticalBox, class UWidget* Widget, TEnumAsByte<EHorizontalAlignment> HorizontalAlignment, TEnumAsByte<EVerticalAlignment> VerticalAlignment, float Size, const struct FMargin& Padding, class UVerticalBoxSlot** OutSlot, class UVerticalBox** OutVerticalBox);
	static class UWidget* AddChildToHorizontalBoxEx(class UHorizontalBox* HorizontalBox, class UWidget* Widget, TEnumAsByte<EHorizontalAlignment> HorizontalAlignment, TEnumAsByte<EVerticalAlignment> VerticalAlignment, float Size, const struct FMargin& Padding, class UHorizontalBoxSlot** OutSlot, class UHorizontalBox** OutHorizontalBox);
};


// Class FSD.FSDWidgetEffectsComponent
// 0x0050 (0x0140 - 0x00F0)
class UFSDWidgetEffectsComponent : public UActorComponent
{
public:
	TArray<struct FWidgetPing>                         WidgetPings;                                              // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<struct FWidgetFade>                         WidgetFades;                                              // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<struct FWidgetTextCounter>                  WidgetTextCounters;                                       // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<struct FCustomCounter>                      CustomCounters;                                           // 0x0120(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<struct FWidgetMover>                        WidgetMovers;                                             // 0x0130(0x0010) (CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDWidgetEffectsComponent");
		return ptr;
	}


	static void StartTextCounter(class UObject* WorldContext, float Start, float End, float Duration, int MaxDigits, float StartDelay, class UTextBlock** Widget);
	static void StartCounter(class UObject* WorldContext, class UObject* Owner, float Start, float End, float Duration, const struct FScriptDelegate& OnCount, float StartDelay);
	static void PingWidget(class UObject* WorldContext, class UWidget* Widget, float Amount, float Duration, EPingType PingType, float StartDelay);
	static void MoveWidget(class UObject* WorldContext, class UUserWidget* Widget, const struct FVector2D& Start, const struct FVector2D& End, float Duration, EMoveType MoveType, float StartDelay);
	static void MoveOutWidget(class UObject* WorldContext, class UUserWidget* Widget, const struct FVector2D& MoveToOffset, float Duration, float StartDelay);
	static void MoveInWidget(class UObject* WorldContext, class UUserWidget* Widget, const struct FVector2D& MoveFromOffset, float Duration, float StartDelay);
	static void FadeWidget(class UObject* WorldContext, class UUserWidget* Widget, float StartFade, float EndFade, float Duration, float StartDelay);
	static void FadeOutWidget(class UObject* WorldContext, class UUserWidget* Widget, float Duration, float StartDelay);
	static void FadeInWidget(class UObject* WorldContext, class UUserWidget* Widget, float Duration, float StartDelay);
};


// Class FSD.EnemySettings
// 0x0018 (0x0048 - 0x0030)
class UEnemySettings : public UDataAsset
{
public:
	TArray<class UEnemyDescriptor*>                    EnemiesAllowedInWaves;                                    // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	struct FRandRange                                  EnemyWaveRange;                                           // 0x0040(0x0008) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemySettings");
		return ptr;
	}

};


// Class FSD.GameAnimationSettings
// 0x0000 (0x0030 - 0x0030)
class UGameAnimationSettings : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GameAnimationSettings");
		return ptr;
	}

};


// Class FSD.DanceSettings
// 0x0010 (0x0040 - 0x0030)
class UDanceSettings : public UDataAsset
{
public:
	TArray<class UAnimSequence*>                       DanceMoves;                                               // 0x0030(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DanceSettings");
		return ptr;
	}

};


// Class FSD.UpgradeSettings
// 0x00F0 (0x0120 - 0x0030)
class UUpgradeSettings : public UDataAsset
{
public:
	TArray<TSoftObjectPtr<class UItemUpgrade>>         UpgradesToCostRefund;                                     // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<int>                                        ClassAUpgradeCosts;                                       // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<int>                                        ClassBUpgradeCosts;                                       // 0x0050(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<int>                                        GearAUpgradeCosts;                                        // 0x0060(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<int>                                        GearBUpgradeCosts;                                        // 0x0070(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<int>                                        ArmorUpgradeCosts;                                        // 0x0080(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<int>                                        ClassBoscoUpgradeCosts;                                   // 0x0090(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    ClassAResourceCosts;                                      // 0x00A0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    ClassBResourceCosts;                                      // 0x00B0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    GearAResourceCosts;                                       // 0x00C0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    GearBResourceCosts;                                       // 0x00D0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    ArmorResourceCosts;                                       // 0x00E0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    ClassBoscoResourceCosts;                                  // 0x00F0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    OldClassAResourceCosts;                                   // 0x0100(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<struct FUpgradeCostItem>                    OldClassBResourceCosts;                                   // 0x0110(0x0010) (CPF_Edit, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.UpgradeSettings");
		return ptr;
	}


	static void AddUpgradesFromItems(TArray<class UClass*> Items);
};


// Class FSD.AfflictionSettings
// 0x0088 (0x00B8 - 0x0030)
class UAfflictionSettings : public UDataAsset
{
public:
	TArray<struct FRuntimeFloatCurve>                  IceScalers;                                               // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UStaticMesh*>                         IceMeshes;                                                // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	struct FRandRange                                  ScaleDelay;                                               // 0x0050(0x0008) (CPF_Edit)
	class USoundCue*                                   FreezeSound;                                              // 0x0058(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   IceBreakSound;                                            // 0x0060(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   BurningSound;                                             // 0x0068(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   EletrocutedSound;                                         // 0x0070(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UParticleSystem*>                     FreezeParticles;                                          // 0x0078(0x0010) (CPF_Edit, CPF_EditFixedSize, CPF_ZeroConstructor)
	TArray<class UParticleSystem*>                     IceBreakParticles;                                        // 0x0088(0x0010) (CPF_Edit, CPF_EditFixedSize, CPF_ZeroConstructor)
	TArray<class UParticleSystem*>                     BurningParticles;                                         // 0x0098(0x0010) (CPF_Edit, CPF_EditFixedSize, CPF_ZeroConstructor)
	TArray<class UParticleSystem*>                     EletrocutedParticles;                                     // 0x00A8(0x0010) (CPF_Edit, CPF_EditFixedSize, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AfflictionSettings");
		return ptr;
	}

};


// Class FSD.GameData
// 0x06E0 (0x0708 - 0x0028)
class UGameData : public UObject
{
public:
	class UDanceSettings*                              DanceSettings;                                            // 0x0028(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UGameAnimationSettings*                      AnimationSettings;                                        // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UEnemySettings*                              EnemySettings;                                            // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDamageSettings*                             DamageSettings;                                           // 0x0040(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UPlanetZoneSetup*                            ZoneSettings;                                             // 0x0048(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UUpgradeSettings*                            UpgradeSettings;                                          // 0x0050(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USpawnSettings*                              SpawnSettings;                                            // 0x0058(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDailyMissionSettings*                       DailyMissionSettings;                                     // 0x0060(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UEncounterSettings*                          EncounterSettings;                                        // 0x0068(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UProceduralSettings*                         ProceduralSettings;                                       // 0x0070(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAfflictionSettings*                         AfflictionSettings;                                       // 0x0078(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FGDMissionStats                             MissionStats;                                             // 0x0080(0x0090) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FGDMilestones                               Milestones;                                               // 0x0110(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FGDPerks                                    perks;                                                    // 0x0120(0x0020) (CPF_Edit)
	struct FGDBarMenu                                  BarMenu;                                                  // 0x0140(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FGDDamageClasses                            DamageClasses;                                            // 0x0150(0x0040) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FGDStats                                    Stats;                                                    // 0x0190(0x00C8) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FGDResources                                resources;                                                // 0x0258(0x00B0) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FGDTerrainTypes                             TerrainTypes;                                             // 0x0308(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FGDGameStatsTracking                        GameStatsTracking;                                        // 0x0358(0x0020) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FGDAudio                                    Audio;                                                    // 0x0378(0x0040) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FGDDifficulty                               Difficulty;                                               // 0x03B8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FGDStatusEffects                            StatusEffects;                                            // 0x03C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FGDCharacterRetirement                      Retirement;                                               // 0x03D0(0x00C0) (CPF_Edit)
	struct FGDPlayerAndCharacterProgression            PlayerAndCharacterProgression;                            // 0x0490(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	class UDataTable*                                  VanityCostTable;                                          // 0x04E0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDataTable*                                  EnemySpawnParamsTable;                                    // 0x04E8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UMissionTemplate*>                    TestMissions;                                             // 0x04F0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TSoftObjectPtr<class UBiome>                       TestBiome;                                                // 0x0500(0x0028) (CPF_Edit)
	class UGlobalMissionSetup*                         MissionSetup;                                             // 0x0528(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TSoftObjectPtr<class UClass>                       CampaignManagerClass;                                     // 0x0530(0x0028) (CPF_Edit)
	class UPlayerCharacterID*                          BoscoID;                                                  // 0x0558(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TMap<class UPlayerCharacterID*, class UInventoryList*> InventoryLists;                                           // 0x0560(0x0050) (CPF_Edit, CPF_ZeroConstructor)
	class UBiome*                                      DefaultBiome;                                             // 0x05B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMissionTemplate*                            DefaultMission;                                           // 0x05B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      CaveGeneratorPLSClass;                                    // 0x05C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UGlobalMissionParameters*                    DefaultMissionParameters;                                 // 0x05C8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UItemRefundList*>                     ItemRefunds;                                              // 0x05D0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TSoftObjectPtr<class UClass>                       DefaultCharacter;                                         // 0x05E0(0x0028) (CPF_Edit)
	struct FGameplayTag                                XBoxExcludeRoomTag;                                       // 0x0608(0x0008) (CPF_Edit)
	unsigned char                                      UnknownData00[0xF8];                                      // 0x0610(0x00F8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GameData");
		return ptr;
	}


	void UnloadPreloadedAssets();
	void StartAsyncLoadInventories();
	bool IsPerkTierUnLocked(class UObject* WorldContext, int Tier);
	bool IsCheatConsolesEnabled();
	int GetRequiredPerkClaimsForTier(int Tier);
	TArray<class UClass*> GetRankedHeroClasses();
	struct FText GetPlayerRankName(int Rank);
	class UClass* GetPlayerClassFromID(class UPlayerCharacterID* ID);
	void GetPerkTierState(class UObject* WorldContext, int Tier, bool* TierUnLocked, int* NextRequiredCount, int* NextProgressCount);
	TArray<class UPerkAsset*> GetOwnedPerks(class UObject* WorldContext);
	class UInventoryList* GetInventoryList(class UPlayerCharacterID* characterID);
	int GetHighestPerkTier();
	class UDifficultySetting* GetDifficultySetting(int Index);
	int GetDifficultyIndex(class UDifficultySetting* Difficulty);
	class UClass* GetDefaultCharacter();
	struct FRetirementCostItem GetCharacterRetirementCost(class UObject* WorldContext, class UPlayerCharacterID* ID);
	TArray<class UPerkAsset*> GetCharacterNonEquippedPerks(class UObject* WorldContext, class UClass* CharacterClass);
	TArray<class UPerkAsset*> GetCharacterEquippedPerks(class UObject* WorldContext, class UClass* CharacterClass);
	TArray<class UDrinkableDataAsset*> GetBarDrinkables(class UObject* WorldContext, bool IncludeDailySpecial);
	class UDrinkableDataAsset* GetBarDailySpecial(class UObject* WorldContext);
	TArray<class UPerkAsset*> GetAvailablePerks();
	TArray<class UMissionStat*> GetAllMissionStats();
	TArray<class UMissionStat*> GetAllInfirmaryStats();
	int CalculateClaimablePerkPoints(class UObject* WorldContext);
};


// Class FSD.DLCBase
// 0x0000 (0x0030 - 0x0030)
class UDLCBase : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DLCBase");
		return ptr;
	}

};


// Class FSD.GameDLC
// 0x0028 (0x0058 - 0x0030)
class UGameDLC : public UDLCBase
{
public:
	int                                                SteamID;                                                  // 0x0030(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     XBoxDLCName;                                              // 0x0038(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	struct FString                                     UWPStoreID;                                               // 0x0048(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GameDLC");
		return ptr;
	}

};


// Class FSD.TimedDLC
// 0x0010 (0x0040 - 0x0030)
class UTimedDLC : public UDLCBase
{
public:
	struct FDateTime                                   StartDate;                                                // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor)
	struct FDateTime                                   EndDate;                                                  // 0x0038(0x0008) (CPF_Edit, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TimedDLC");
		return ptr;
	}

};


// Class FSD.AlwaysLockedDLC
// 0x0000 (0x0030 - 0x0030)
class UAlwaysLockedDLC : public UDLCBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AlwaysLockedDLC");
		return ptr;
	}

};


// Class FSD.GameFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UGameFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GameFunctionLibrary");
		return ptr;
	}


	static void SpawnOrUpdateAudio2D(class UObject* WorldContext, class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier, const struct FName& FloatParamName, float FloatParam, class UAudioComponent** AudioComponent);
	static void SetUsePushToTalk(bool enable);
	static void SetGlobalGravityZ(class UObject* WorldContextObject, float GravityZ);
	static void SetGlobalGravityScale(class UObject* WorldContextObject, float GravityScale);
	static bool IsPlayingOffline(class UObject* WorldContextObject);
	static bool IsPlayInEditor(class UObject* WorldContextObject);
	static class UWindowManager* GetWindowManager(class UObject* WorldContextObject);
	static bool GetUsePushToTalk();
	static struct FString GetProjectVersion();
	static class UGoogleAnalyticsWrapper* GetGoogleAnalyticsWrapper(class UObject* WorldContextObject);
	static float GetGlobalGravityZ(class UObject* WorldContextObject);
	static class UFSDSaveGame* GetFSDSaveGame(class UObject* WorldContextObject);
	static class AFSDGameState* GetFSDGameState(class UObject* WorldContextObject);
	static class AFSDGameMode* GetFSDGameMode(class UObject* WorldContextObject);
	static class UFSDGameInstance* GetFSDGameInstance(class UObject* WorldContextObject);
	static class UGameData* GetFSDGameData();
	static class ADeepCSGWorld* GetCSGWorld(class UObject* WorldContextObject);
	static int GetChangelist();
	static class UCampaignManager* GetCampaingManager(class UObject* WorldContextObject);
};


// Class FSD.FSDGameplayStatics
// 0x0000 (0x0028 - 0x0028)
class UFSDGameplayStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDGameplayStatics");
		return ptr;
	}


	static class UParticleSystemComponent* SpawnScaledEmitterAtLocation(class UObject* WorldContextObject, const struct FScaledEffect& ScaledEffect, const struct FVector& Location, const struct FRotator& Rotation, bool bAutoDestroy);
};


// Class FSD.ResourceBasedObjective
// 0x0000 (0x0168 - 0x0168)
class UResourceBasedObjective : public UObjective
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ResourceBasedObjective");
		return ptr;
	}

};


// Class FSD.GatherGemsObjective
// 0x0018 (0x0180 - 0x0168)
class UGatherGemsObjective : public UResourceBasedObjective
{
public:
	int                                                GemsRequired;                                             // 0x0168(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              GemsSpawnedModifier;                                      // 0x016C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                GemsCollected;                                            // 0x0170(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0174(0x0004) MISSED OFFSET
	class UGemResourceData*                            GemResource;                                              // 0x0178(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GatherGemsObjective");
		return ptr;
	}


	void OnResourceChanged(class UCappedResource* CappedResource, float Amount);
	void OnRep_GemsCollected(int prevAmount);
};


// Class FSD.GatheItemsObjective
// 0x0018 (0x0180 - 0x0168)
class UGatheItemsObjective : public UResourceBasedObjective
{
public:
	int                                                ItemsRequired;                                            // 0x0168(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ItemsSpawnedModifier;                                     // 0x016C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                ItemsCollected;                                           // 0x0170(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0174(0x0004) MISSED OFFSET
	class UCollectableResourceData*                    ItemResource;                                             // 0x0178(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GatheItemsObjective");
		return ptr;
	}


	void OnResourceChanged(class UCappedResource* CappedResource, float Amount);
	void OnRep_ItemsCollected(int prevAmount);
};


// Class FSD.Gem
// 0x0018 (0x0340 - 0x0328)
class AGem : public AActor
{
public:
	class UCarriableInstantUsable*                     Usable;                                                   // 0x0328(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UResourceData*                               ResourceType;                                             // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ResourceAmount;                                           // 0x0338(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x033C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Gem");
		return ptr;
	}


	void Throw(const struct FVector& Force);
	void Receive_OnDeposited();
};


// Class FSD.ResourceData
// 0x00A0 (0x00D0 - 0x0030)
class UResourceData : public UDataAsset
{
public:
	struct FText                                       Title;                                                    // 0x0030(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       Description;                                              // 0x0048(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FColor                                      Color;                                                    // 0x0060(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	class UTexture2D*                                  Icon;                                                     // 0x0068(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                BuyingPrice;                                              // 0x0070(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                SellingPrice;                                             // 0x0074(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMissionStat*                                MinedMissionStat;                                         // 0x0078(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsCraftingMaterial;                                       // 0x0080(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               AffectedByMutators;                                       // 0x0081(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ScaleToMissionLength;                                     // 0x0082(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ScaleToHazardLevel;                                       // 0x0083(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       Spawnable;                                                // 0x0088(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	bool                                               IsWholeNumberResource;                                    // 0x00B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00B1(0x0003) MISSED OFFSET
	int                                                CreditValue;                                              // 0x00B4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                XPValue;                                                  // 0x00B8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FGuid                                       SavegameID;                                               // 0x00BC(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ResourceData");
		return ptr;
	}


	float GetOwnedAmount(class UObject* WorldContextObject);
};


// Class FSD.GemResourceData
// 0x0060 (0x0130 - 0x00D0)
class UGemResourceData : public UResourceData
{
public:
	class UDebrisPositioning*                          DebrisPositioning;                                        // 0x00D0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               CheckIfCompletelyCoveredByTerrain;                        // 0x00D8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00D9(0x0003) MISSED OFFSET
	struct FIRandRange                                 GemValue;                                                 // 0x00DC(0x0008) (CPF_Edit)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET
	class UGemResourceCreator*                         ResourceCreator;                                          // 0x00E8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	class UCaveInfluencer*                             CaveInfluencer;                                           // 0x00F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              InfluencerRange;                                          // 0x00F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	TArray<class UDebrisBase*>                         GemDebris;                                                // 0x0100(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor)
	TArray<TSoftObjectPtr<class UClass>>               GemClasses;                                               // 0x0110(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<class UClass*>                              GemClassesLoaded;                                         // 0x0120(0x0010) (CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GemResourceData");
		return ptr;
	}


	static int GetCollectedGemsCreditValue(class AFSDGameState* GameState);
	static int GetCollectedGemsAmount(class AFSDGameState* GameState);
};


// Class FSD.GemResourceCreator
// 0x0010 (0x0040 - 0x0030)
class UGemResourceCreator : public UDataAsset
{
public:
	class UGemResourceData*                            ResourceData;                                             // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	bool                                               CheckIfFreeSpaceAbove;                                    // 0x0038(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                SearchSize;                                               // 0x003C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GemResourceCreator");
		return ptr;
	}

};


// Class FSD.RandomGemResourceCreator
// 0x0008 (0x0048 - 0x0040)
class URandomGemResourceCreator : public UGemResourceCreator
{
public:
	class UCurveFloat*                                 PlacementDistanceProbabilityCurve;                        // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RandomGemResourceCreator");
		return ptr;
	}

};


// Class FSD.DistributedGemResourceCreator
// 0x0008 (0x0048 - 0x0040)
class UDistributedGemResourceCreator : public UGemResourceCreator
{
public:
	class UCurveFloat*                                 PlacementDistanceProbabilityCurve;                        // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DistributedGemResourceCreator");
		return ptr;
	}

};


// Class FSD.GeneratedMission
// 0x00C8 (0x00F0 - 0x0028)
class UGeneratedMission : public UObject
{
public:
	class UBiome*                                      Biome;                                                    // 0x0028(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                Seed;                                                     // 0x0030(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                GlobalSeed;                                               // 0x0034(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                missionIndex;                                             // 0x0038(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	class UMissionTemplate*                            Template;                                                 // 0x0040(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FText                                       MissionName;                                              // 0x0048(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient)
	class UClass*                                      PrimaryObjective;                                         // 0x0060(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UClass*                                      SecondaryObjective;                                       // 0x0068(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TMap<class UClass*, struct FGMMutatorItem>         Mutators;                                                 // 0x0070(0x0050) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	class UMissionWarning*                             MissionWarning;                                           // 0x00C0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UMissionMutator*                             MissionMutator;                                           // 0x00C8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UMissionComplexity*                          ComplexityLimit;                                          // 0x00D0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UMissionDuration*                            DurationLimit;                                            // 0x00D8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UClass*                                      MissionDNA;                                               // 0x00E0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	EMissionStructure                                  MissionStructure;                                         // 0x00E8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00E9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GeneratedMission");
		return ptr;
	}


	void Recieve_SetupPLS(class AProceduralSetup* pls);
	bool IsLocked(class AFSDPlayerController* Player);
	class UClass* GetPLS();
	TArray<class UMutator*> GetMutators(class UClass* mutatorClass);
	float GetMissionScale();
	class UMissionDNA* GetMissionDNA();
	class AProceduralSetup* CreatePLS(int Seed);
	bool AreMissionsEqual(class UGeneratedMission* Other);
};


// Class FSD.FracturedGeneratedMission
// 0x0000 (0x00F0 - 0x00F0)
class UFracturedGeneratedMission : public UGeneratedMission
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FracturedGeneratedMission");
		return ptr;
	}

};


// Class FSD.StarGeneratedMission
// 0x0000 (0x00F0 - 0x00F0)
class UStarGeneratedMission : public UGeneratedMission
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StarGeneratedMission");
		return ptr;
	}

};


// Class FSD.LinearGeneratedMission
// 0x0000 (0x00F0 - 0x00F0)
class ULinearGeneratedMission : public UGeneratedMission
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LinearGeneratedMission");
		return ptr;
	}

};


// Class FSD.MotherlodeGeneratedMission
// 0x0000 (0x00F0 - 0x00F0)
class UMotherlodeGeneratedMission : public UGeneratedMission
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MotherlodeGeneratedMission");
		return ptr;
	}

};


// Class FSD.PLSTester
// 0x0068 (0x0390 - 0x0328)
class APLSTester : public AActor
{
public:
	int                                                PLSSeed;                                                  // 0x0328(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                MissionSeed;                                              // 0x032C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMissionComplexity*                          LimitComplexity;                                          // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMissionDuration*                            LimitDuration;                                            // 0x0338(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMissionMutator*                             Mutator;                                                  // 0x0340(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMissionWarning*                             Warning;                                                  // 0x0348(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UBiome*                                      Biome;                                                    // 0x0350(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMissionTemplate*                            MissionTemplate;                                          // 0x0358(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMissionTemplate*                            CustomMissionTemplate;                                    // 0x0360(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDifficultySetting*                          OverrideDifficulty;                                       // 0x0368(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                SimulatePlayerCount;                                      // 0x0370(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0374(0x0004) MISSED OFFSET
	struct FText                                       CustomMissionName;                                        // 0x0378(0x0018) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PLSTester");
		return ptr;
	}

};


// Class FSD.RoomGenerationItem
// 0x0000 (0x0330 - 0x0330)
class ARoomGenerationItem : public AGenerationItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RoomGenerationItem");
		return ptr;
	}

};


// Class FSD.GlowPlant
// 0x0070 (0x0398 - 0x0328)
class AGlowPlant : public AActor
{
public:
	class UStaticMeshComponent*                        TrunkMesh;                                                // 0x0328(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0330(0x0020) MISSED OFFSET
	class UPointLightComponent*                        MainLight;                                                // 0x0350(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0358(0x0004) MISSED OFFSET
	float                                              IntensityBase;                                            // 0x035C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RadiusBase;                                               // 0x0360(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              IntensityPerPart;                                         // 0x0364(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RadiusPerPart;                                            // 0x0368(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              IntensityAllParts;                                        // 0x036C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RadiusAllParts;                                           // 0x0370(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxIntensity;                                             // 0x0374(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinIntensity;                                             // 0x0378(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TimeOnMaxLight;                                           // 0x037C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              IntensityFadeInTime;                                      // 0x0380(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              IntensityFadeOutTime;                                     // 0x0384(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxEmissive;                                              // 0x0388(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinEmissive;                                              // 0x038C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              EmissiveFadeInTime;                                       // 0x0390(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              EmissiveFadeOutTime;                                      // 0x0394(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GlowPlant");
		return ptr;
	}


	void OnDeath();
	void OnDamage(class UPrimitiveComponent* hitSphere);
};


// Class FSD.GoogleAnalyticsWrapper
// 0x0038 (0x0060 - 0x0028)
class UGoogleAnalyticsWrapper : public UObject
{
public:
	unsigned char                                      UnknownData00[0x1];                                       // 0x0028(0x0001) MISSED OFFSET
	bool                                               DevTest;                                                  // 0x0029(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	struct FString                                     LastUnlockedWeapons;                                      // 0x0030(0x0010) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient)
	struct FString                                     LastKnownClass;                                           // 0x0040(0x0010) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient)
	struct FString                                     BoscoLoadOut;                                             // 0x0050(0x0010) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GoogleAnalyticsWrapper");
		return ptr;
	}


	void ResetBoscoLoadout();
	void RecordOpenScreen(const struct FString& Key, bool Rank);
	void RecordGAUserTiming(const struct FString& TimingCategory, int TimingValue, const struct FString& TimingName);
	void RecordGAMissionTimeHit(const struct FString& Key, const struct FString& Campaign, bool Rank, int Time, int haz, int Progress, int XP, int Credits);
	void RecordGAMissionTimeEvent(int Time);
	void RecordGAEvent(const struct FString& EventCategory, const struct FString& EventAction, const struct FString& EventLabel, int EventValue);
};


// Class FSD.GrabbedStateComponent
// 0x0050 (0x0178 - 0x0128)
class UGrabbedStateComponent : public UCharacterStateComponent
{
public:
	float                                              ExitTime;                                                 // 0x0128(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	class USoundBase*                                  AudioOnBeginGrap;                                         // 0x0130(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundBase*                                  AudioOnWhileGrapped;                                      // 0x0138(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundBase*                                  AudioOnEndGrap;                                           // 0x0140(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAudioComponent*                             AudioComponent;                                           // 0x0148(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class ADeepPathfinderCharacter*                    Grabber;                                                  // 0x0150(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0158(0x000C) MISSED OFFSET
	float                                              ForceMultiplier;                                          // 0x0164(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               StunOnGrab;                                               // 0x0168(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               Pull;                                                     // 0x0169(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x016A(0x0002) MISSED OFFSET
	float                                              BreakHoldAtRange;                                         // 0x016C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               GoBackToFirstPerson;                                      // 0x0170(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               CanPlayerShoot;                                           // 0x0171(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0172(0x0002) MISSED OFFSET
	float                                              GoBackAfterSeconds;                                       // 0x0174(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GrabbedStateComponent");
		return ptr;
	}

};


// Class FSD.FlyingLifter
// 0x0138 (0x0730 - 0x05F8)
class AFlyingLifter : public AAFlyingBug
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x05F8(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnGrabSuccess;                                            // 0x0600(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UAudioComponent*                             GrabStart;                                                // 0x0610(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UAudioComponent*                             GrabEnd;                                                  // 0x0618(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UAudioComponent*                             IdleLoop;                                                 // 0x0620(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UAudioComponent*                             GrabbedIdleLoop;                                          // 0x0628(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x9];                                       // 0x0630(0x0009) MISSED OFFSET
	bool                                               ShouldScream;                                             // 0x0639(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	EGrabberState                                      grabberState;                                             // 0x063A(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x25];                                      // 0x063B(0x0025) MISSED OFFSET
	class UInDangerComponent*                          InDanger;                                                 // 0x0660(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0668(0x0008) MISSED OFFSET
	float                                              WanderingSpeed;                                           // 0x0670(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              WanderingAcceleration;                                    // 0x0674(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              ChaseSpeed;                                               // 0x0678(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              ChaseAcceleration;                                        // 0x067C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              CarrySpeed;                                               // 0x0680(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              CarryAcceleration;                                        // 0x0684(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              FleeSpeed;                                                // 0x0688(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              FleeAcceleration;                                         // 0x068C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	int                                                MinCarryTimes;                                            // 0x0690(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	int                                                MaxCarryTimes;                                            // 0x0694(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              CarryCooldown;                                            // 0x0698(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x069C(0x0004) MISSED OFFSET
	class USoundBase*                                  ScreamSound;                                              // 0x06A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              ScreamComponent;                                          // 0x06A8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USoundBase*                                  FleeSound;                                                // 0x06B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class UAnimSequenceBase*                           FleeAnimation;                                            // 0x06B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              blendInOutTImes;                                          // 0x06C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x06C4(0x0004) MISSED OFFSET
	class AActor*                                      GrabbedActor;                                             // 0x06C8(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FGameplayTagContainer                       AllowedGrabFilter;                                        // 0x06D0(0x0020) (CPF_Edit)
	class UCapsuleComponent*                           GrabberCollider;                                          // 0x06F0(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneComponent*                             DragPlayerToPoint;                                        // 0x06F8(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               ParalyzeOnGrab;                                           // 0x0700(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0701(0x0003) MISSED OFFSET
	float                                              ExtraUpForce;                                             // 0x0704(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              ScreamDistance;                                           // 0x0708(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               hasGrabbed;                                               // 0x070C(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x070D(0x0003) MISSED OFFSET
	float                                              MaxGrabTime;                                              // 0x0710(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0714(0x0004) MISSED OFFSET
	bool                                               WasFrozen;                                                // 0x0718(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0719(0x0007) MISSED OFFSET
	class UPointLightComponent*                        GrabLight;                                                // 0x0720(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              TimeToDrop;                                               // 0x0728(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x072C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FlyingLifter");
		return ptr;
	}


	void SetupAudio(class UAudioComponent* aGrabStart, class UAudioComponent* aGrabEnd, class UAudioComponent* aIdleLoop, class UAudioComponent* aGrabbedLoop);
	void SetLight(class UPointLightComponent* ALight);
	void SelectAnotherTarget();
	void OnStateBroke();
	void OnRep_State();
	void OnRep_ShouldScream();
	void OnRep_GrabbedActor();
	void OnInDanger();
	void OnGrabberCollide(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void DropTargetTimed();
	void ChangeState(EGrabberState aGrabberState);
	void BindInDanger(class UInDangerComponent* aIndangerComponent);
};


// Class FSD.FlyingLifterAnimInstance
// 0x0000 (0x03D0 - 0x03D0)
class UFlyingLifterAnimInstance : public USimpleMovingEnemyAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FlyingLifterAnimInstance");
		return ptr;
	}

};


// Class FSD.GrabberComponent
// 0x0058 (0x0148 - 0x00F0)
class UGrabberComponent : public UActorComponent
{
public:
	struct FString                                     GrabAttachName;                                           // 0x00F0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	float                                              GrabTime;                                                 // 0x0100(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               StunOnGrab;                                               // 0x0104(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               CanPlayerShoot;                                           // 0x0105(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0106(0x0002) MISSED OFFSET
	class USoundCue*                                   BeginGrabedSound;                                         // 0x0108(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   GrabedLoopSound;                                          // 0x0110(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   EndGrabedSound;                                           // 0x0118(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            BeginGrabbedShout;                                        // 0x0120(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            EndGrabbedShout;                                          // 0x0128(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            AttentionGrabbedShout;                                    // 0x0130(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0138(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GrabberComponent");
		return ptr;
	}

};


// Class FSD.Graph
// 0x0020 (0x0048 - 0x0028)
class UGraph : public UObject
{
public:
	TArray<class UGraphNode*>                          Nodes;                                                    // 0x0028(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst)
	TArray<class UGraphEdge*>                          Edges;                                                    // 0x0038(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Graph");
		return ptr;
	}


	void Clear();
	void ApplyProduction(class UProduction* Production);
};


// Class FSD.GraphNode
// 0x0018 (0x0040 - 0x0028)
class UGraphNode : public UObject
{
public:
	TArray<class UGraphEdge*>                          Edges;                                                    // 0x0028(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor)
	ENodeType                                          NodeType;                                                 // 0x0038(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GraphNode");
		return ptr;
	}

};


// Class FSD.GraphEdge
// 0x0010 (0x0038 - 0x0028)
class UGraphEdge : public UObject
{
public:
	class UGraphNode*                                  Source;                                                   // 0x0028(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UGraphNode*                                  Target;                                                   // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GraphEdge");
		return ptr;
	}

};


// Class FSD.ComponentProduction
// 0x0020 (0x0048 - 0x0028)
class UComponentProduction : public UObject
{
public:
	TArray<class UGraphNode*>                          Nodes;                                                    // 0x0028(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst)
	TArray<class UGraphEdge*>                          Edges;                                                    // 0x0038(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ComponentProduction");
		return ptr;
	}


	class UGraphEdge* LinkNodes(class UGraphNode* nodeA, class UGraphNode* nodeB);
	class UGraphNode* CreateNode();
};


// Class FSD.Production
// 0x0000 (0x0028 - 0x0028)
class UProduction : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Production");
		return ptr;
	}

};


// Class FSD.SingleProduction
// 0x0010 (0x0038 - 0x0028)
class USingleProduction : public UProduction
{
public:
	class UComponentProduction*                        LeftGraph;                                                // 0x0028(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	class UComponentProduction*                        RightGraph;                                               // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SingleProduction");
		return ptr;
	}

};


// Class FSD.MultiProduction
// 0x0000 (0x0028 - 0x0028)
class UMultiProduction : public UProduction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MultiProduction");
		return ptr;
	}

};


// Class FSD.GraphTester
// 0x0010 (0x0338 - 0x0328)
class AGraphTester : public AActor
{
public:
	class UGraph*                                      Graph;                                                    // 0x0328(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	class USingleProduction*                           Production;                                               // 0x0330(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GraphTester");
		return ptr;
	}


	void ApplyProduction();
};


// Class FSD.GrapplingHookGun
// 0x0050 (0x0498 - 0x0448)
class AGrapplingHookGun : public AAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0448(0x0008) MISSED OFFSET
	class UCoolDownItemAggregator*                     CoolDownAggregator;                                       // 0x0450(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               AutoFire;                                                 // 0x0458(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0459(0x0003) MISSED OFFSET
	float                                              MaxDistance;                                              // 0x045C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                FPReloadAnim;                                             // 0x0460(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                TPReloadAnim;                                             // 0x0468(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                FPGunslingAnim;                                           // 0x0470(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                TPGunslingAnim;                                           // 0x0478(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0480(0x0010) MISSED OFFSET
	float                                              MaxSpeed;                                                 // 0x0490(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              WindUpTime;                                               // 0x0494(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GrapplingHookGun");
		return ptr;
	}


	void OnReleaseHook();
	static float GetCooldownDuration(class UClass* GrapplingHookGun);
};


// Class FSD.GravityChangedComponent
// 0x0018 (0x0108 - 0x00F0)
class UGravityChangedComponent : public UActorComponent
{
public:
	bool                                               bAwakeOnGravityChanged;                                   // 0x00F0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET
	TArray<class UPrimitiveComponent*>                 PrimitiveComponents;                                      // 0x00F8(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GravityChangedComponent");
		return ptr;
	}


	void OnGravityChanged(float Gravity, float Change);
};


// Class FSD.Grenade
// 0x0038 (0x0360 - 0x0328)
class AGrenade : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class UProjectileMovementComponent*                Movement;                                                 // 0x0330(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              Duration;                                                 // 0x0338(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ExplodeOnImpact;                                          // 0x033C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x033D(0x0003) MISSED OFFSET
	int                                                MaxGrenades;                                              // 0x0340(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               HasExploded;                                              // 0x0344(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               EnableDangerousSaveGameIDEditing;                         // 0x0345(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0346(0x0002) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x0348(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      WeaponPreviewClass;                                       // 0x0358(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Grenade");
		return ptr;
	}


	void OnRep_HasExploded();
	void OnExploded();
	class UClass* GetWeaponViewClass();
	static class AGrenade* GetGrenadeDefaultObject(class UClass* grenadeClass);
};


// Class FSD.MolotovComponent
// 0x0018 (0x0108 - 0x00F0)
class UMolotovComponent : public UActorComponent
{
public:
	class UDebrisPositioning*                          Positioning;                                              // 0x00F0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	class UClass*                                      BurningFlamesClass;                                       // 0x00F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Radius;                                                   // 0x0100(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0104(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MolotovComponent");
		return ptr;
	}


	void Trigger();
};


// Class FSD.HugeExplosionComponent
// 0x0028 (0x0118 - 0x00F0)
class UHugeExplosionComponent : public UActorComponent
{
public:
	class UParticleSystem*                             ExplosionEffect;                                          // 0x00F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ExplosionSpeed;                                           // 0x00F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ExplosionSize;                                            // 0x00FC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0100(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.HugeExplosionComponent");
		return ptr;
	}


	void TriggerExplosion(const struct FVector& Location);
};


// Class FSD.GroundLeechEnemy
// 0x0068 (0x0488 - 0x0420)
class AGroundLeechEnemy : public AEnemyPawn
{
public:
	struct FScriptMulticastDelegate                    OnTargetChanged;                                          // 0x0420(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStateChanged;                                           // 0x0430(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	float                                              MaxAttackDistance;                                        // 0x0440(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TrackingSpeed;                                            // 0x0444(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PullingSpeed;                                             // 0x0448(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RetractingSpeed;                                          // 0x044C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USplineMeshComponent*                        TentacleSpline;                                           // 0x0450(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	EGroundLeechState                                  State;                                                    // 0x0458(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0459(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       Target;                                                   // 0x045C(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TWeakObjectPtr<class UHealthComponent>             TargetHealth;                                             // 0x0464(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FVector_NetQuantize                         TentacleLocation;                                         // 0x046C(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_Transient)
	struct FVector_NetQuantize                         TentacleVelocity;                                         // 0x0478(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_Transient)
	float                                              StateTime;                                                // 0x0484(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GroundLeechEnemy");
		return ptr;
	}


	void ReceiveMoved();
	void OnRep_Target();
	void OnRep_State();
	bool HasTarget();
	class USplineMeshComponent* GetSplineComponent();
	struct FVector GetMouthLocation();
};


// Class FSD.GroundToAirComponent
// 0x0080 (0x0170 - 0x00F0)
class UGroundToAirComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnChangedPathfinderState;                                 // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0100(0x0008) MISSED OFFSET
	float                                              WalkTime;                                                 // 0x0108(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              WalkTimeMaxRandomOffset;                                  // 0x010C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              WalkTimeMinRandomOffset;                                  // 0x0110(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               WalkUseTimer;                                             // 0x0114(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0115(0x0003) MISSED OFFSET
	struct FStateStats                                 WalkStats;                                                // 0x0118(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FlyTime;                                                  // 0x0130(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FlyTimeMaxRandomOffset;                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FlyTimeMinRandomOffset;                                   // 0x0138(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               FlyUseTimer;                                              // 0x013C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x013D(0x0003) MISSED OFFSET
	struct FStateStats                                 FlyStats;                                                 // 0x0140(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsFlying;                                                 // 0x0158(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x17];                                      // 0x0159(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GroundToAirComponent");
		return ptr;
	}


	void SetIsFlying(bool aIsFlying);
	void SetAllowedToChangeState(bool aIsAllowed);
	void OnRep_StateChange();
	bool GetIsWalking();
	bool GetIsFlying();
	void Engage();
};


// Class FSD.WidgetComponentCustomMaterial
// 0x0010 (0x06B0 - 0x06A0)
class UWidgetComponentCustomMaterial : public UWidgetComponent
{
public:
	class UMaterialInterface*                          CustomMaterial;                                           // 0x06A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x06A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.WidgetComponentCustomMaterial");
		return ptr;
	}

};


// Class FSD.HealthBarComponent
// 0x0000 (0x06B0 - 0x06B0)
class UHealthBarComponent : public UWidgetComponentCustomMaterial
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.HealthBarComponent");
		return ptr;
	}

};


// Class FSD.HitscanBaseComponent
// 0x00F8 (0x0228 - 0x0130)
class UHitscanBaseComponent : public UWeaponFireComponent
{
public:
	struct FScriptMulticastDelegate                    OnSpreadChanged;                                          // 0x0130(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	float                                              SpreadPerShot;                                            // 0x0140(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0144(0x0004) MISSED OFFSET
	class UDamageComponent*                            DamageComponent;                                          // 0x0148(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0150(0x0004) MISSED OFFSET
	float                                              Damage;                                                   // 0x0154(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	float                                              ArmorDamageMultiplier;                                    // 0x0158(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x015C(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0160(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	float                                              WeakpointDamageMultiplier;                                // 0x0168(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	int                                                MaxPenetrations;                                          // 0x016C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EImpactDecalSize                                   ImpactDecalSize;                                          // 0x0170(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0171(0x0003) MISSED OFFSET
	float                                              friendlyFireModifier;                                     // 0x0174(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	bool                                               UseDynamicSpread;                                         // 0x0178(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0179(0x0003) MISSED OFFSET
	float                                              MinSpread;                                                // 0x017C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	float                                              MinSpreadWhenMoving;                                      // 0x0180(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinSpreadWhenSprinting;                                   // 0x0184(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxSpread;                                                // 0x0188(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x018C(0x0004) MISSED OFFSET
	struct FRuntimeFloatCurve                          SpreadCurve;                                              // 0x0190(0x0078) (CPF_Edit)
	float                                              SpreadRecoveryPerSecond;                                  // 0x0208(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x020C(0x0008) MISSED OFFSET
	float                                              VerticalSpreadMultiplier;                                 // 0x0214(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              HorizontalSpredMultiplier;                                // 0x0218(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxVerticalSpread;                                        // 0x021C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxHorizontalSpread;                                      // 0x0220(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0224(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.HitscanBaseComponent");
		return ptr;
	}


	void Server_StopFire();
	void Server_RemoveDebris(int instance, int Component);
	float GetCurrentVerticalSpread();
	float GetCurrentHorizontalSpread();
};


// Class FSD.HitscanComponent
// 0x0080 (0x02A8 - 0x0228)
class UHitscanComponent : public UHitscanBaseComponent
{
public:
	struct FScriptMulticastDelegate                    OnHit;                                                    // 0x0228(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	bool                                               BulletsCanCarve;                                          // 0x0238(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0239(0x0003) MISSED OFFSET
	struct FIRandRange                                 NormalBulletsPerCarvingOne;                               // 0x023C(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0244(0x0004) MISSED OFFSET
	float                                              CarveDiameter;                                            // 0x0248(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CarveNoise;                                               // 0x024C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              GeneralImpactAudioVolume;                                 // 0x0250(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ImpactDelay;                                              // 0x0254(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             ImpactParticles;                                          // 0x0258(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   ImpactSound;                                              // 0x0260(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class AActor*>                              DamagedActorCache;                                        // 0x0268(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData02[0x30];                                      // 0x0278(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.HitscanComponent");
		return ptr;
	}


	void Server_RegisterHit_Terrain(const struct FVector_NetQuantize& Location, const struct FVector_NetQuantizeNormal& Normal, class UFSDPhysicalMaterial* PhysMaterial);
	void Server_RegisterHit_Destructable(const struct FVector_NetQuantize& Location, const struct FVector_NetQuantizeNormal& Normal, class UPrimitiveComponent* Target, class UFSDPhysicalMaterial* PhysMaterial, unsigned char BoneIndex);
	void Server_RegisterHit(const struct FVector_NetQuantize& Location, const struct FVector_NetQuantizeNormal& Normal, class UPrimitiveComponent* Target, class UFSDPhysicalMaterial* PhysMaterial);
	void All_ShowHit_Terrain(const struct FVector_NetQuantize& Location, const struct FVector_NetQuantizeNormal& Normal, int MaterialID, class UFSDPhysicalMaterial* PhysMaterial);
	void All_ShowHit_Destructable(const struct FVector_NetQuantize& Location, const struct FVector_NetQuantizeNormal& Normal, class UPrimitiveComponent* Target, class UFSDPhysicalMaterial* PhysMaterial, unsigned char BoneIndex);
	void All_ShowHit(const struct FVector_NetQuantize& Location, const struct FVector_NetQuantizeNormal& Normal, bool SpawnDecal, class UFSDPhysicalMaterial* PhysMaterial);
};


// Class FSD.HUDHealthBar
// 0x00D0 (0x02F8 - 0x0228)
class UHUDHealthBar : public UFSDUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnOwnerDead;                                              // 0x0228(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FLinearColor                                BackgroundColor;                                          // 0x0238(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                HealthColor;                                              // 0x0248(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                DamageColor;                                              // 0x0258(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TMap<EHealthbarType, struct FHealthBarLooks>       HealthBarLooks;                                           // 0x0268(0x0050) (CPF_Edit, CPF_ZeroConstructor)
	struct FLinearColor                                OutlineColor;                                             // 0x02B8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                OutlineThickness;                                         // 0x02C8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              HealthAnimationFactor;                                    // 0x02CC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              HealthPerCell;                                            // 0x02D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                MinHealthCells;                                           // 0x02D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                MaxHealthCells;                                           // 0x02D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02DC(0x0004) MISSED OFFSET
	TScriptInterface<class UHealth>                    TargetHealth;                                             // 0x02E0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              AnimatedHealth;                                           // 0x02F0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              MaxHealth;                                                // 0x02F4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.HUDHealthBar");
		return ptr;
	}


	void SetHealthComponent(const TScriptInterface<class UHealth>& Health, float Damage);
	float GetCurrentHealth();
};


// Class FSD.HydraHead
// 0x0190 (0x05B0 - 0x0420)
class AHydraHead : public AEnemyPawn
{
public:
	struct FTransform                                  RestTransform;                                            // 0x0420(0x0030) (CPF_BlueprintVisible, CPF_IsPlainOldData)
	struct FTransform                                  LastTransform;                                            // 0x0450(0x0030) (CPF_BlueprintVisible, CPF_IsPlainOldData)
	struct FTransform                                  DesiredTransform;                                         // 0x0480(0x0030) (CPF_BlueprintVisible, CPF_Net, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x90];                                      // 0x04B0(0x0090) MISSED OFFSET
	float                                              MovementAlpha;                                            // 0x0540(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              HeadMovementDuration;                                     // 0x0544(0x0004) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CanSwayCooldown;                                          // 0x0548(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector2D                                   SwayRange;                                                // 0x054C(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0554(0x0004) MISSED OFFSET
	class USplineMeshComponent*                        NeckSplineMesh;                                           // 0x0558(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	class AActor*                                      HydraBody;                                                // 0x0560(0x0008) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              NeckBaseTangentLength;                                    // 0x0568(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     NeckBasePositionOffset;                                   // 0x056C(0x000C) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     NeckBaseTangentOffset;                                    // 0x0578(0x000C) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              NeckTopTangentLength;                                     // 0x0584(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     NeckTopPositionOffset;                                    // 0x0588(0x000C) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     NeckTopTangentOffset;                                     // 0x0594(0x000C) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class AActor*                                      lookAtTargetActor;                                        // 0x05A0(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x05A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.HydraHead");
		return ptr;
	}


	void UpdateSpline();
	void MoveHydraHead(const struct FTransform& newDesiredTransform, float newCanSwayCooldown, float newHeadMovementDuration);
	void LookAtActor(class AActor* targetActor);
};


// Class FSD.TriggerAI
// 0x0000 (0x0028 - 0x0028)
class UTriggerAI : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TriggerAI");
		return ptr;
	}


	bool OnTriggerAI(const struct FName& TriggerName);
	void OnMessageAI(const struct FName& TriggerName);
};


// Class FSD.Craftable
// 0x0000 (0x0028 - 0x0028)
class UCraftable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Craftable");
		return ptr;
	}


	void PreviewItem(class AFSDPlayerState* PlayerState, bool Show);
	bool IsOwned(class UClass* CharacterClass, class AFSDPlayerState* PlayerState);
	TArray<struct FCraftingCost> GetResourceCost();
	int GetRequiredPlayerRank();
	int GetCraftingCreditsCost();
	struct FText GetCraftableName();
	class UTexture2D* GetCraftableIcon();
	struct FText GetCraftableDescription();
	void CraftItem(class UClass* CharacterClass, class AFSDPlayerState* PlayerState);
	bool CanCraft(class AFSDPlayerState* PlayerState);
};


// Class FSD.FootStepNotifyTarget
// 0x0000 (0x0028 - 0x0028)
class UFootStepNotifyTarget : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FootStepNotifyTarget");
		return ptr;
	}

};


// Class FSD.Health
// 0x0000 (0x0028 - 0x0028)
class UHealth : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Health");
		return ptr;
	}


	bool IsDead();
	bool IsAlive();
	class AActor* GetOwner();
	float GetMaxHealth();
	EHealthbarType GetHealthbarType();
	float GetHealth();
};


// Class FSD.ImpactComponent
// 0x0070 (0x0160 - 0x00F0)
class UImpactComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnImpactedEvent;                                          // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHighAcceleration;                                       // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	bool                                               DebugText;                                                // 0x0110(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x2B];                                      // 0x0111(0x002B) MISSED OFFSET
	bool                                               TrackAcceleration;                                        // 0x013C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               TrackVelocity;                                            // 0x013D(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x013E(0x0006) MISSED OFFSET
	float                                              TriggerHighAccelAt;                                       // 0x0144(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0148(0x0008) MISSED OFFSET
	float                                              TriggerAtVelocityDifference;                              // 0x0150(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x0154(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ImpactComponent");
		return ptr;
	}


	void SetCheckVelocity(bool aCheckVelocity);
	void SetCheckAcceleration(bool aCheckAcceleration);
	void EnableImpactCheckhing(class USceneComponent* cmp);
	void DisableImpactChecking();
};


// Class FSD.ImpactAudioComponent
// 0x0030 (0x0680 - 0x0650)
class UImpactAudioComponent : public UAudioComponent
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0650(0x0020) MISSED OFFSET
	float                                              MakeSoundAtVelocityDifference;                            // 0x0670(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0674(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ImpactAudioComponent");
		return ptr;
	}


	void OnOwnerDeath(class UHealthComponentBase* HealthComponent);
};


// Class FSD.FSDReverbVolume
// 0x0018 (0x0340 - 0x0328)
class AFSDReverbVolume : public AActor
{
public:
	class USphereComponent*                            Collision;                                                // 0x0328(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UReverbEffect*                               Reverb;                                                   // 0x0330(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              Priority;                                                 // 0x0338(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x033C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDReverbVolume");
		return ptr;
	}

};


// Class FSD.InDangerComponent
// 0x0038 (0x0128 - 0x00F0)
class UInDangerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET
	TWeakObjectPtr<class UHealthComponentBase>         ParentHealthComponent;                                    // 0x0100(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              DamageTimeLimit;                                          // 0x0108(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              DamageThreshold;                                          // 0x010C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0110(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.InDangerComponent");
		return ptr;
	}


	void SetIsActive(bool aFlag);
	void OnDamage(float Amount);
};


// Class FSD.NetMontageAble
// 0x0000 (0x0028 - 0x0028)
class UNetMontageAble : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.NetMontageAble");
		return ptr;
	}


	float QueueMontage(class UAnimMontage* Montage);
	class USkeletalMeshComponent* GetSkeletalMesh();
	class UAnimInstance* GetAnimInstance();
};


// Class FSD.InputFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UInputFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.InputFunctionLibrary");
		return ptr;
	}


	static bool IsKeyEventAction(const struct FKeyEvent& KeyEvent, const struct FName& ActionName, bool IgnoreCustomBindings);
	static bool IsAxisMappedToDirectional(const struct FName& Name, const struct FKey& Key, int Direction, bool IgnoreCustomBindings);
	static bool IsActionMappedTo(const struct FName& Name, const struct FKey& Key, bool IgnoreCustomBindings);
	static bool GetControllerActionMapping(const struct FName& Name, struct FInputActionKeyMapping* Mapping);
	static struct FInputAxisKeyMapping GetAxisMapping(const struct FName& Name, int Axis, class APlayerController* Controller);
	static struct FInputActionKeyMapping GetActionMapping(const struct FName& Name, class APlayerController* Controller);
};


// Class FSD.InsectSwarmEnemy
// 0x0008 (0x0460 - 0x0458)
class AInsectSwarmEnemy : public AEnemyDeepPathfinderCharacter
{
public:
	class UParticleSystemComponent*                    SwarmParticles;                                           // 0x0458(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.InsectSwarmEnemy");
		return ptr;
	}

};


// Class FSD.InsectSwarmSpawner
// 0x0020 (0x0440 - 0x0420)
class AInsectSwarmSpawner : public AEnemyPawn
{
public:
	class UClass*                                      SwarmType;                                                // 0x0420(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              SpawnHeightOffset;                                        // 0x0428(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AlertDistance;                                            // 0x042C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RespawnDelay;                                             // 0x0430(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TWeakObjectPtr<class AInsectSwarmEnemy>            SwarmInstance;                                            // 0x0434(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x043C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.InsectSwarmSpawner");
		return ptr;
	}


	void OnSwarmSpawned(class AInsectSwarmEnemy* Swarm);
	void OnSwarmDestroyed(class AActor* DestroyedActor);
};


// Class FSD.InventoryComponent
// 0x0178 (0x0268 - 0x00F0)
class UInventoryComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnItemsLoaded;                                            // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemClicked;                                            // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemEquipped;                                           // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemUnequipped;                                         // 0x0120(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGrenadeCountChanged;                                    // 0x0130(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFlareCountChanged;                                      // 0x0140(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFlareProduction;                                        // 0x0150(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResuppliedEvent;                                        // 0x0160(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	bool                                               bItemsLoaded;                                             // 0x0170(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0171(0x0007) MISSED OFFSET
	class UInventoryList*                              InventoryList;                                            // 0x0178(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class AItem*>                               Items;                                                    // 0x0180(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Transient)
	class AManualMiningItem*                           MiningItem;                                               // 0x0190(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class ALaserPointerItem*                           LaserPointerItem;                                         // 0x0198(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class ARecallableSentryGunItem*                    RecallableSentryGunItem;                                  // 0x01A0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class AJetPackItem*                                JetPackItem;                                              // 0x01A8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class AItem*                                       PickedUpItem;                                             // 0x01B0(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class ARessuplyPodItem*                            ResupplyItem;                                             // 0x01B8(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class AItem*                                       PreviousItem;                                             // 0x01C0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class AItem*                                       LastItem;                                                 // 0x01C8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class AItem*                                       PenultimateItem;                                          // 0x01D0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class AActor*                                      CarriedItem;                                              // 0x01D8(0x0008) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     FlareOffset;                                              // 0x01E0(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FlareAngle;                                               // 0x01EC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FlareCooldown;                                            // 0x01F0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FlareProductionTime;                                      // 0x01F4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FLinearColor                                FlareChromaColor;                                         // 0x01F8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              FlareProductionTimeLeft;                                  // 0x0208(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                MaxFlares;                                                // 0x020C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                Flares;                                                   // 0x0210(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              FlareCooldownRemaining;                                   // 0x0214(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UClass*                                      flareClass;                                               // 0x0218(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TArray<class UItemUpgrade*>                        FlareUpgrades;                                            // 0x0220(0x0010) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient)
	TArray<class UItemUpgrade*>                        GrenadeUpgrades;                                          // 0x0230(0x0010) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient)
	float                                              GrenadeCooldown;                                          // 0x0240(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                MaxGrenades;                                              // 0x0244(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                Grenades;                                                 // 0x0248(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              GrenadeCooldownRemaining;                                 // 0x024C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UClass*                                      grenadeClass;                                             // 0x0250(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class AItem*                                       EquippedItem;                                             // 0x0258(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0260(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.InventoryComponent");
		return ptr;
	}


	void Server_ThrowGrenade();
	void Server_ThrowFlare();
	void Server_Equip(class AItem* Item);
	void Server_DropCarriedItem();
	void Resupply(float percentage);
	class AItem* PickupItem(class UClass* itemClass);
	void OnRep_PickedUpItem();
	void OnRep_Items();
	void OnRep_EquippedItem(class AItem* oldItem);
	void OnRep_CarriedItem();
	void OnDeath(class UHealthComponentBase* Health);
	void OnCharacterStateChanged(ECharacterState NewState);
	bool IsJetPackEquipped();
	bool HasJetPack();
	class ARecallableSentryGunItem* GetRecallableSentryGunItem();
	TArray<class AItem*> GetAllItems();
	void EquipLastItem();
	void EquipAtIndex(int Index);
	void Equip(class AItem* Item);
	void DropPickedupItem();
	void CreateStartingEquipmentWhenItemsLoaded();
	void Client_Resupply(float percentage);
	void AnimationNotify2();
	void AnimationNotify1();
};


// Class FSD.InventoryList
// 0x0118 (0x0148 - 0x0030)
class UInventoryList : public UDataAsset
{
public:
	TArray<TSoftObjectPtr<class UClass>>               Items;                                                    // 0x0030(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<TSoftObjectPtr<class UClass>>               PrimaryWeapons;                                           // 0x0040(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<TSoftObjectPtr<class UClass>>               SecondaryWeapons;                                         // 0x0050(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<TSoftObjectPtr<class UClass>>               TraversalTools;                                           // 0x0060(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<TSoftObjectPtr<class UClass>>               ClassTools;                                               // 0x0070(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<TSoftObjectPtr<class UClass>>               Armors;                                                   // 0x0080(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<TSoftObjectPtr<class UClass>>               Flares;                                                   // 0x0090(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<TSoftObjectPtr<class UClass>>               Grenades;                                                 // 0x00A0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<TSoftObjectPtr<class UClass>>               MiningTools;                                              // 0x00B0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TSoftObjectPtr<class UClass>                       LaserPointerItem;                                         // 0x00C0(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	TSoftObjectPtr<class UClass>                       JetPackItem;                                              // 0x00E8(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	TSoftObjectPtr<class UClass>                       ResupplyItem;                                             // 0x0110(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0138(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.InventoryList");
		return ptr;
	}


	class UClass* GetPreviousUnlockedItem(EItemCategory Category, class UClass* currentItem, class AFSDPlayerState* PlayerState);
	class UClass* GetPreviousItem(EItemCategory Category, class UClass* currentItem);
	int GetNumberOfItems(EItemCategory Category);
	class UClass* GetNextUnlockedItem(EItemCategory Category, class UClass* currentItem, class AFSDPlayerState* PlayerState);
	class UClass* GetNextItem(EItemCategory Category, class UClass* currentItem);
	TArray<TSoftObjectPtr<class UClass>> GetItemList(EItemCategory Category);
	int GetItemIndex(EItemCategory Category, class UClass* Item);
};


// Class FSD.RejoinListener
// 0x0000 (0x0028 - 0x0028)
class URejoinListener : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RejoinListener");
		return ptr;
	}

};


// Class FSD.Targetable
// 0x0000 (0x0028 - 0x0028)
class UTargetable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Targetable");
		return ptr;
	}


	void ShowDamageEffects(class UParticleSystem* Particles, const struct FVector& Location, const struct FRotator& Orientation);
	class UHealthComponentBase* GetTargetHealthComponent();
	struct FVector GetTargetCenterMass();
	bool GetIsTargetable();
};


// Class FSD.AnimNotify_CycleItemComplete
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_CycleItemComplete : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimNotify_CycleItemComplete");
		return ptr;
	}

};


// Class FSD.HeatMaterialComponent
// 0x0018 (0x0108 - 0x00F0)
class UHeatMaterialComponent : public UActorComponent
{
public:
	struct FName                                       ParameterName;                                            // 0x00F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UMaterialInstanceDynamic*>            MaterialIntances;                                         // 0x00F8(0x0010) (CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.HeatMaterialComponent");
		return ptr;
	}


	void OnTemperatureChanged(float Temperature, bool Overheated);
	void AddHeatMaterial(class UMaterialInstanceDynamic* MaterialInstance);
};


// Class FSD.ItemCharacterAnimationSet
// 0x0118 (0x0148 - 0x0030)
class UItemCharacterAnimationSet : public UDataAsset
{
public:
	class UAnimSequence*                               FP_Idle;                                                  // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                FP_InspectWeapon;                                         // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               FP_Walk;                                                  // 0x0040(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               FP_Sprint;                                                // 0x0048(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               FP_JumpStart;                                             // 0x0050(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               FP_JumpLoop;                                              // 0x0058(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               FP_JumpLand;                                              // 0x0060(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ECharacterAnimSet                                  AnimationSetType;                                         // 0x0068(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	class UBlendSpace1D*                               TP_LookUpDown;                                            // 0x0070(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UBlendSpace1D*                               TP_LookUpDown_Aim;                                        // 0x0078(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_Sprint;                                                // 0x0080(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_Idle;                                                  // 0x0088(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_Idle_Aim;                                              // 0x0090(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_LookForward;                                           // 0x0098(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_LookForward_Aim;                                       // 0x00A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_JumpStart;                                             // 0x00A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_JumpStart_Aim;                                         // 0x00B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_JumpLoop;                                              // 0x00B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_JumpLoop_Aim;                                          // 0x00C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                TP_JumpLand;                                              // 0x00C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_Run_Forward;                                           // 0x00D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_Run_Forward_Aim;                                       // 0x00D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_Run_Right;                                             // 0x00E0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_Run_Right_Aim;                                         // 0x00E8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_Run_Left;                                              // 0x00F0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_Run_Left_Aim;                                          // 0x00F8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_Run_Back;                                              // 0x0100(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_Run_Back_Aim;                                          // 0x0108(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_Revived;                                               // 0x0110(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_Downed;                                                // 0x0118(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimSequence*                               TP_Downed_Loop;                                           // 0x0120(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                Loadout;                                                  // 0x0128(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UAnimSequence*>                       Loadout_IdleBreaks;                                       // 0x0130(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	float                                              CameraOffset;                                             // 0x0140(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0144(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ItemCharacterAnimationSet");
		return ptr;
	}

};


// Class FSD.ItemMarker
// 0x0000 (0x0328 - 0x0328)
class AItemMarker : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ItemMarker");
		return ptr;
	}


	void OnMarkerVisibilityChanged(bool Visible);
	void OnMarkerValidChanged(bool Valid);
};


// Class FSD.ItemPlacerAggregator
// 0x0040 (0x0148 - 0x0108)
class UItemPlacerAggregator : public UItemAggregator
{
public:
	float                                              PlacementDistance;                                        // 0x0108(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxOffsetZ;                                               // 0x010C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinOffsetZ;                                               // 0x0110(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ItemHeight;                                               // 0x0114(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            ShoutOnPlaced;                                            // 0x0118(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsVisible;                                                // 0x0120(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsValid;                                                  // 0x0121(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0122(0x0006) MISSED OFFSET
	class UClass*                                      MarkerType;                                               // 0x0128(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class AItemMarker*                                 PlacementMarker;                                          // 0x0130(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               CanOnlyPlaceOnTerrain;                                    // 0x0138(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0139(0x0007) MISSED OFFSET
	class AItem*                                       Item;                                                     // 0x0140(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ItemPlacerAggregator");
		return ptr;
	}


	void ToggleValid(bool Valid);
	void ToggleMarker(bool Visible);
	bool GetPlacement(struct FTransform* Placement);
};


// Class FSD.ItemsBarIcon
// 0x0028 (0x0230 - 0x0208)
class UItemsBarIcon : public UUserWidget
{
public:
	bool                                               Selected;                                                 // 0x0208(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0209(0x0007) MISSED OFFSET
	class UItemsBar*                                   ItemBar;                                                  // 0x0210(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class APlayerCharacter*                            Character;                                                // 0x0218(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class AItem*                                       Item;                                                     // 0x0220(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                Index;                                                    // 0x0228(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x022C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ItemsBarIcon");
		return ptr;
	}


	void OnUnselect();
	void OnSelect();
	void OnInit();
};


// Class FSD.ItemsBar
// 0x0038 (0x0260 - 0x0228)
class UItemsBar : public UFSDUserWidget
{
public:
	class UClass*                                      DefaultItemWidget;                                        // 0x0228(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bShowSupplyItem;                                          // 0x0230(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0231(0x0007) MISSED OFFSET
	TArray<class UItemsBarIcon*>                       ItemIcons;                                                // 0x0238(0x0010) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	class UItemsBarIcon*                               SupplyIcon;                                               // 0x0248(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UItemsBarIcon*                               SelectedIcon;                                             // 0x0250(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0258(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ItemsBar");
		return ptr;
	}


	void OnSupplyItemUnequipped(class UItemsBarIcon* ItemIcon);
	void OnSupplyItemEquipped(class UItemsBarIcon* ItemIcon);
	void OnSupplyItemAdded(class UItemsBarIcon* ItemIcon);
	void OnItemUnequipped(class UItemsBarIcon* ItemIcon);
	void OnItemsLoaded();
	void OnItemEquipped(class UItemsBarIcon* ItemIcon);
	void OnItemClicked();
	void OnItemAdded(class UItemsBarIcon* ItemIcon);
	void OnClear();
	void ItemEquipped(class AItem* NewItem);
	void ItemClicked(class AItem* NewItem);
};


// Class FSD.SkinnableComponent
// 0x0018 (0x0108 - 0x00F0)
class USkinnableComponent : public UActorComponent
{
public:
	TArray<class UItemSkin*>                           Skins;                                                    // 0x00F0(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UItemSkin*                                   EquippedSkin;                                             // 0x0100(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SkinnableComponent");
		return ptr;
	}


	void UpdateSkin(class AFSDPlayerState* Player);
	static TArray<class UItemSkin*> GetSkinsForItem(class UClass* itemClass);
	static class UItemSkin* GetEquippedSkin(class UClass* itemClass, class AFSDPlayerState* Player);
	static void EquipSkin(class UItemSkin* Skin, class UClass* itemClass, class AFSDPlayerState* Player);
};


// Class FSD.ItemSkin
// 0x0090 (0x00C0 - 0x0030)
class UItemSkin : public UDataAsset
{
public:
	struct FScriptMulticastDelegate                    OnSkinUnlocked;                                           // 0x0030(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSkinEquipped;                                           // 0x0040(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSkinUnequipped;                                         // 0x0050(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	bool                                               UnlockedFromStart;                                        // 0x0060(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	class UDLCBase*                                    RequiredDLC;                                              // 0x0068(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FText                                       SkinName;                                                 // 0x0070(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	class UMaterialInterface*                          SkinIconMaterial;                                         // 0x0088(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTexture2D*                                  SkinIcon;                                                 // 0x0090(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FColor                                      SkinIconTint;                                             // 0x0098(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	TArray<class USkinEffect*>                         SkinEffects;                                              // 0x00A0(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor)
	struct FGuid                                       SavegameID;                                               // 0x00B0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ItemSkin");
		return ptr;
	}


	bool Unlock(class UObject* WorldContext);
	void ItemSkinSignature__DelegateSignature(class UItemSkin* Skin);
	void ItemSkinEquipSignature__DelegateSignature(class UItemSkin* Skin);
	bool IsLocked(class AFSDPlayerState* Player);
	bool IsEquippedOnItem(class UClass* itemClass, class AFSDPlayerState* PlayerState);
};


// Class FSD.SkinEffect
// 0x0000 (0x0028 - 0x0028)
class USkinEffect : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SkinEffect");
		return ptr;
	}


	void Receive_RemoveFromItem(class UMeshComponent* Mesh, class AActor* Skinnable, bool IsFirstPerson);
	void Receive_AddToItem(class UMeshComponent* Mesh, class AActor* Skinnable, bool IsFirstPerson);
};


// Class FSD.MaterialSkinEffect
// 0x0010 (0x0038 - 0x0028)
class UMaterialSkinEffect : public USkinEffect
{
public:
	TArray<class UMaterialInterface*>                  Materials;                                                // 0x0028(0x0010) (CPF_Edit, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MaterialSkinEffect");
		return ptr;
	}

};


// Class FSD.MeshSkinEffect
// 0x0010 (0x0038 - 0x0028)
class UMeshSkinEffect : public USkinEffect
{
public:
	class UStaticMesh*                                 Mesh;                                                     // 0x0028(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MeshSkinEffect");
		return ptr;
	}

};


// Class FSD.PreviewActor
// 0x0018 (0x0340 - 0x0328)
class APreviewActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class UItemSkin*                                   CurrentSkin;                                              // 0x0330(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UClass*                                      itemClass;                                                // 0x0338(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PreviewActor");
		return ptr;
	}


	void UnSkinItem(class USkinEffect* Skin);
	void SkinItem(class USkinEffect* Skin);
	void SetItemClass(class UClass* itemClass);
	void OnUnSkinItem(class USkinEffect* Skin);
	void OnSkinPreviewChanged(class UItemSkin* PreviewSkin);
	void OnSkinItem(class USkinEffect* Skin);
	void OnSkinChanged();
	void ChangeSkin(class UItemSkin* NewSkin);
};


// Class FSD.ItemUpgrade
// 0x0100 (0x0130 - 0x0030)
class UItemUpgrade : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCrafted;                                                // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEquipped;                                               // 0x0048(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUnequipped;                                             // 0x0058(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	bool                                               EnableDangerousSaveGameIDEditing;                         // 0x0068(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x006C(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	struct FText                                       Name;                                                     // 0x0080(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       Description;                                              // 0x0098(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	int                                                Cost;                                                     // 0x00B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               UseOldCost;                                               // 0x00B4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EUpgradeTiers                                      UpgradeTier;                                              // 0x00B5(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EUpgradeClass                                      UpgradeClass;                                             // 0x00B6(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x00B7(0x0001) MISSED OFFSET
	class UItemUpgradeCategory*                        Category;                                                 // 0x00B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TMap<class UResourceData*, float>                  UpgradeCraftingCost;                                      // 0x00C0(0x0050) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst)
	TArray<class UResourceData*>                       ResourceCost;                                             // 0x0110(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UItemUpgradeElement*>                 Elements;                                                 // 0x0120(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ItemUpgrade");
		return ptr;
	}


	void UnequipUpgrade(class UClass* itemClass, class AFSDPlayerState* PlayerState);
	void ItemUpgradeSignature__DelegateSignature(class UItemUpgrade* Upgrade);
	static struct FText GetUpgradeName(class UItemUpgrade* Upgrade);
	TArray<struct FCraftingCost> GetUpgradeCost();
	struct FString GetSourceName();
	float GetCreditsCost();
	void EquipUpgrade(class UClass* itemClass, class AFSDPlayerState* PlayerState);
	void CraftItem(class UClass* itemClass, class AFSDPlayerController* PlayerController, class UClass* previewedCharacter);
	void AddToItem(class AActor* Item);
};


// Class FSD.CompositeItemUpgrade
// 0x0010 (0x0040 - 0x0030)
class UCompositeItemUpgrade : public UDataAsset
{
public:
	TArray<class UItemUpgrade*>                        upgrades;                                                 // 0x0030(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CompositeItemUpgrade");
		return ptr;
	}

};


// Class FSD.ItemUpgradeCategory
// 0x0040 (0x0070 - 0x0030)
class UItemUpgradeCategory : public UDataAsset
{
public:
	struct FText                                       CategoryName;                                             // 0x0030(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       CategoryDescription;                                      // 0x0048(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	class UTexture2D*                                  CategoryIcon;                                             // 0x0060(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FColor                                      CategoryTint;                                             // 0x0068(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ItemUpgradeCategory");
		return ptr;
	}

};


// Class FSD.ItemUpgradeElement
// 0x0000 (0x0030 - 0x0030)
class UItemUpgradeElement : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ItemUpgradeElement");
		return ptr;
	}

};


// Class FSD.MuzzleEffectUpgradeElement
// 0x0010 (0x0040 - 0x0030)
class UMuzzleEffectUpgradeElement : public UItemUpgradeElement
{
public:
	class UParticleSystem*                             FPMuzzleFlash;                                            // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             TPMuzzleFlash;                                            // 0x0038(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MuzzleEffectUpgradeElement");
		return ptr;
	}

};


// Class FSD.FireWeaponSoundUpgradeElement
// 0x0008 (0x0038 - 0x0030)
class UFireWeaponSoundUpgradeElement : public UItemUpgradeElement
{
public:
	class USoundCue*                                   FireSound;                                                // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FireWeaponSoundUpgradeElement");
		return ptr;
	}

};


// Class FSD.TracerUpgradeElement
// 0x0008 (0x0038 - 0x0030)
class UTracerUpgradeElement : public UItemUpgradeElement
{
public:
	class UParticleSystem*                             Tracer;                                                   // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TracerUpgradeElement");
		return ptr;
	}

};


// Class FSD.AmmoDrivenWeaponUpgrade
// 0x0008 (0x0138 - 0x0130)
class UAmmoDrivenWeaponUpgrade : public UItemUpgrade
{
public:
	EAmmoDrivenWeapnUpgradeType                        upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AmmoDrivenWeaponUpgrade");
		return ptr;
	}


	static float GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EAmmoDrivenWeapnUpgradeType upgradeType, bool includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.BeltDrivenWeaponUpgrade
// 0x0008 (0x0138 - 0x0130)
class UBeltDrivenWeaponUpgrade : public UItemUpgrade
{
public:
	EBeltDrivenWeaponUpgrade                           upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BeltDrivenWeaponUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EBeltDrivenWeaponUpgrade upgradeType);
};


// Class FSD.GatlingGunUpgrade
// 0x0008 (0x0138 - 0x0130)
class UGatlingGunUpgrade : public UItemUpgrade
{
public:
	EGatlingGunUpgrade                                 upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GatlingGunUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EGatlingGunUpgrade upgradeType);
};


// Class FSD.AssaultRifleUpgrade
// 0x0008 (0x0138 - 0x0130)
class UAssaultRifleUpgrade : public UItemUpgrade
{
public:
	EAssaultRifleUpgrade                               upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AssaultRifleUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EAssaultRifleUpgrade upgradeType);
};


// Class FSD.BoltActionRifleUpgrade
// 0x0008 (0x0138 - 0x0130)
class UBoltActionRifleUpgrade : public UItemUpgrade
{
public:
	EBoltActionRifleUpgrades                           upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BoltActionRifleUpgrade");
		return ptr;
	}


	static float GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EBoltActionRifleUpgrades upgradeType, bool includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.DualMachinePistolsUpgrade
// 0x0008 (0x0138 - 0x0130)
class UDualMachinePistolsUpgrade : public UItemUpgrade
{
public:
	EDualMachinePistolsUpgrades                        upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DualMachinePistolsUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EDualMachinePistolsUpgrades upgradeType);
};


// Class FSD.ChargedWeaponUpgrade
// 0x0008 (0x0138 - 0x0130)
class UChargedWeaponUpgrade : public UItemUpgrade
{
public:
	EChargedWeaponUpgrades                             upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ChargedWeaponUpgrade");
		return ptr;
	}


	static float GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EChargedWeaponUpgrades upgradeType, bool includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.AutoCannonUpgrade
// 0x0008 (0x0138 - 0x0130)
class UAutoCannonUpgrade : public UItemUpgrade
{
public:
	EAutoCannonUpgrades                                upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AutoCannonUpgrade");
		return ptr;
	}


	static float GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EAutoCannonUpgrades upgradeType, bool includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.SawedOffShotgunUpgrade
// 0x0008 (0x0138 - 0x0130)
class USawedOffShotgunUpgrade : public UItemUpgrade
{
public:
	ESawedOffShotgunUpgrades                           upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SawedOffShotgunUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, ESawedOffShotgunUpgrades upgradeType);
};


// Class FSD.BurstWeaponUpgrade
// 0x0008 (0x0138 - 0x0130)
class UBurstWeaponUpgrade : public UItemUpgrade
{
public:
	EBurstWeaponUpgrades                               upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BurstWeaponUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EBurstWeaponUpgrades upgradeType);
};


// Class FSD.AutoShotgunUpgrade
// 0x0008 (0x0138 - 0x0130)
class UAutoShotgunUpgrade : public UItemUpgrade
{
public:
	EAutoShotgunUpgrades                               upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AutoShotgunUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EAutoShotgunUpgrades upgradeType);
};


// Class FSD.BasicPistolUpgrade
// 0x0008 (0x0138 - 0x0130)
class UBasicPistolUpgrade : public UItemUpgrade
{
public:
	EBasicPistol                                       upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BasicPistolUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EBasicPistol upgradeType);
};


// Class FSD.RevolverUpgrade
// 0x0008 (0x0138 - 0x0130)
class URevolverUpgrade : public UItemUpgrade
{
public:
	ERevolerUpgrades                                   upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RevolverUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, ERevolerUpgrades upgradeType);
};


// Class FSD.CryoSprayUpgrade
// 0x0008 (0x0138 - 0x0130)
class UCryoSprayUpgrade : public UItemUpgrade
{
public:
	ECryoSprayUpgrades                                 upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CryoSprayUpgrade");
		return ptr;
	}


	static float GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, ECryoSprayUpgrades upgradeType, bool includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.ManualMiningUpgrade
// 0x0008 (0x0138 - 0x0130)
class UManualMiningUpgrade : public UItemUpgrade
{
public:
	EManualMiningUpgradeType                           upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ManualMiningUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EManualMiningUpgradeType upgradeType);
};


// Class FSD.FlameThrowerUpgrade
// 0x0008 (0x0138 - 0x0130)
class UFlameThrowerUpgrade : public UItemUpgrade
{
public:
	EFlameThrowerUpgradeType                           upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FlameThrowerUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EFlameThrowerUpgradeType upgradeType);
};


// Class FSD.StickyFlameStatusEffectUpgrade
// 0x0008 (0x0138 - 0x0130)
class UStickyFlameStatusEffectUpgrade : public UItemUpgrade
{
public:
	class UClass*                                      StatusEffect;                                             // 0x0130(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StickyFlameStatusEffectUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, class UClass* StatusEffect);
};


// Class FSD.AutoMinerUpgrade
// 0x0008 (0x0138 - 0x0130)
class UAutoMinerUpgrade : public UItemUpgrade
{
public:
	EAutoMinerUpgradeType                              upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AutoMinerUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EAutoMinerUpgradeType upgradeType);
};


// Class FSD.InventoryItemUpgrade
// 0x0008 (0x0138 - 0x0130)
class UInventoryItemUpgrade : public UItemUpgrade
{
public:
	EInventoryItemUpgradeType                          upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.InventoryItemUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EInventoryItemUpgradeType upgradeType);
};


// Class FSD.CapacityUpgrade
// 0x0008 (0x0138 - 0x0130)
class UCapacityUpgrade : public UItemUpgrade
{
public:
	float                                              Amount;                                                   // 0x0130(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0134(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CapacityUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player);
};


// Class FSD.CooldownUpgrade
// 0x0008 (0x0138 - 0x0130)
class UCooldownUpgrade : public UItemUpgrade
{
public:
	float                                              Amount;                                                   // 0x0130(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0134(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CooldownUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player);
};


// Class FSD.MultiHitscanUpgrade
// 0x0008 (0x0138 - 0x0130)
class UMultiHitscanUpgrade : public UItemUpgrade
{
public:
	EMultiHitscanUpgradeType                           upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MultiHitscanUpgrade");
		return ptr;
	}


	static float GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EMultiHitscanUpgradeType upgradeType, bool includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.HitscanBaseUpgrade
// 0x0008 (0x0138 - 0x0130)
class UHitscanBaseUpgrade : public UItemUpgrade
{
public:
	EHitScanBaseUpgradeType                            upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.HitscanBaseUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EHitScanBaseUpgradeType upgradeType);
};


// Class FSD.DamageUpgrade
// 0x0010 (0x0140 - 0x0130)
class UDamageUpgrade : public UItemUpgrade
{
public:
	EDamageUpgrade                                     upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      RequiredClass;                                            // 0x0138(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DamageUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class UClass* upgradedItem, class AFSDPlayerState* Player, EDamageUpgrade upgradeType);
};


// Class FSD.FlatDamageUpgrade
// 0x0010 (0x0140 - 0x0130)
class UFlatDamageUpgrade : public UItemUpgrade
{
public:
	float                                              Damage;                                                   // 0x0130(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0134(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0138(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FlatDamageUpgrade");
		return ptr;
	}


	static float GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, class UDamageClass* DamageClass, bool includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.DamageConversionUpgrade
// 0x0010 (0x0140 - 0x0130)
class UDamageConversionUpgrade : public UItemUpgrade
{
public:
	class UDamageClass*                                DamageClass;                                              // 0x0130(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ConversionPercentage;                                     // 0x0138(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               DamageIsAdded;                                            // 0x013C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x013D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DamageConversionUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class UClass* upgradedItem, class AFSDPlayerState* Player, class UDamageClass* DamageClass);
};


// Class FSD.GatlingHotShellsBonusUpgrade
// 0x0018 (0x0148 - 0x0130)
class UGatlingHotShellsBonusUpgrade : public UItemUpgrade
{
public:
	class UDamageClass*                                DamageClass;                                              // 0x0130(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ConversionPercentage;                                     // 0x0138(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               DamageIsAdded;                                            // 0x013C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x013D(0x0003) MISSED OFFSET
	float                                              TemperatureRequired;                                      // 0x0140(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0144(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GatlingHotShellsBonusUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, class UDamageClass* DamageClass);
};


// Class FSD.TargetSpecificDamageBonusUpgrade
// 0x0058 (0x0188 - 0x0130)
class UTargetSpecificDamageBonusUpgrade : public UItemUpgrade
{
public:
	float                                              Bonus;                                                    // 0x0130(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0134(0x0004) MISSED OFFSET
	struct FGameplayTagQuery                           TagQuery;                                                 // 0x0138(0x0048) (CPF_Edit)
	struct FName                                       Key;                                                      // 0x0180(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TargetSpecificDamageBonusUpgrade");
		return ptr;
	}


	static float GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, const struct FName& Key, bool includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.TargetStateDamageBonusUpgrade
// 0x0010 (0x0140 - 0x0130)
class UTargetStateDamageBonusUpgrade : public UItemUpgrade
{
public:
	ETargetStateDamageBonusType                        TargetState;                                              // 0x0130(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Bonus;                                                    // 0x0134(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDamageClass*                                DamageClass;                                              // 0x0138(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TargetStateDamageBonusUpgrade");
		return ptr;
	}


	static float GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, ETargetStateDamageBonusType TargetState, bool includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.StatusDamageBonusUpgrade
// 0x0020 (0x0150 - 0x0130)
class UStatusDamageBonusUpgrade : public UItemUpgrade
{
public:
	TArray<class UClass*>                              StatusEffects;                                            // 0x0130(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	float                                              Bonus;                                                    // 0x0140(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0144(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0148(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StatusDamageBonusUpgrade");
		return ptr;
	}


	static float GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, class UClass* StatusEffect, bool includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.PushSatusEffectDamageBonusUpgrade
// 0x0010 (0x0140 - 0x0130)
class UPushSatusEffectDamageBonusUpgrade : public UItemUpgrade
{
public:
	class UClass*                                      StatusEffect;                                             // 0x0130(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Chance;                                                   // 0x0138(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x013C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PushSatusEffectDamageBonusUpgrade");
		return ptr;
	}


	static float GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, class UClass* StatusEffect, bool includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.FearAoEBonusUpgrade
// 0x0008 (0x0138 - 0x0130)
class UFearAoEBonusUpgrade : public UItemUpgrade
{
public:
	float                                              FearFactor;                                               // 0x0130(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Range;                                                    // 0x0134(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FearAoEBonusUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player);
};


// Class FSD.ExplosionUpgrade
// 0x0008 (0x0138 - 0x0130)
class UExplosionUpgrade : public UItemUpgrade
{
public:
	EExplosionUpgrade                                  upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ExplosionUpgrade");
		return ptr;
	}


	static float GetUpgradedValue(class UClass* upgradedItem, class UClass* componentItem, class AFSDPlayerState* Player, EExplosionUpgrade upgradeType, bool includePreview, float* outBaseValue, float* outUpgradeValue);
};


// Class FSD.SingleUsableUpgrade
// 0x0008 (0x0138 - 0x0130)
class USingleUsableUpgrade : public UItemUpgrade
{
public:
	ESingleUsableUpgradeType                           upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SingleUsableUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class UClass* subItem, class AFSDPlayerState* Player, ESingleUsableUpgradeType upgradeType);
};


// Class FSD.FlareUpgrade
// 0x0008 (0x0138 - 0x0130)
class UFlareUpgrade : public UItemUpgrade
{
public:
	EFlareUpgradeType                                  upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FlareUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class AFSDPlayerState* Player, class UClass* flareClass, EFlareUpgradeType upgradeType);
};


// Class FSD.GrenadeUpgrade
// 0x0008 (0x0138 - 0x0130)
class UGrenadeUpgrade : public UItemUpgrade
{
public:
	EGrenadeUpgradeType                                upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GrenadeUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class AFSDPlayerState* Player, class UClass* flareClass, EGrenadeUpgradeType upgradeType);
};


// Class FSD.LineCutterProjectileUpgrade
// 0x0008 (0x0138 - 0x0130)
class ULineCutterProjectileUpgrade : public UItemUpgrade
{
public:
	ELineCutterUpgradeType                             upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LineCutterProjectileUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class AFSDPlayerState* Player, class UClass* Item, ELineCutterUpgradeType upgradeType);
};


// Class FSD.ProjectileUpgrade
// 0x0010 (0x0140 - 0x0130)
class UProjectileUpgrade : public UItemUpgrade
{
public:
	EProjectileUpgrade                                 upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      projectileClass;                                          // 0x0138(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ProjectileUpgrade");
		return ptr;
	}


	static float GetUpgradedValue(class UClass* Item, class UClass* upgradedItem, class AFSDPlayerState* Player, EProjectileUpgrade upgradeType, bool includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.FlaregunProjectileUpgrade
// 0x0010 (0x0140 - 0x0130)
class UFlaregunProjectileUpgrade : public UItemUpgrade
{
public:
	EFlaregunProjectileUpgrades                        upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      projectileClass;                                          // 0x0138(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FlaregunProjectileUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class UClass* upgradedItem, class AFSDPlayerState* Player, EFlaregunProjectileUpgrades upgradeType);
};


// Class FSD.ChargedProjectileUpgrade
// 0x0010 (0x0140 - 0x0130)
class UChargedProjectileUpgrade : public UItemUpgrade
{
public:
	EChargedProjectileUpgrades                         upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      projectileClass;                                          // 0x0138(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ChargedProjectileUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class UClass* upgradedActor, class AFSDPlayerState* Player, EChargedProjectileUpgrades upgradeType);
};


// Class FSD.ElectricalSMGUpgrade
// 0x0008 (0x0138 - 0x0130)
class UElectricalSMGUpgrade : public UItemUpgrade
{
public:
	EElectricalSMGUpgrades                             upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ElectricalSMGUpgrade");
		return ptr;
	}


	static float GetUpgradedValue(class AFSDPlayerState* Player, class UClass* Item, EElectricalSMGUpgrades upgradeType, bool includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.ZiplineGunUpgrade
// 0x0010 (0x0140 - 0x0130)
class UZiplineGunUpgrade : public UItemUpgrade
{
public:
	EZiplineGunUpgrades                                upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      projectileClass;                                          // 0x0138(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ZiplineGunUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class AFSDPlayerState* Player, class UClass* Item, EZiplineGunUpgrades upgradeType);
};


// Class FSD.GrapplingHookUpgrade
// 0x0008 (0x0138 - 0x0130)
class UGrapplingHookUpgrade : public UItemUpgrade
{
public:
	EGrapplingHookUpgrade                              upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GrapplingHookUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class AFSDPlayerState* Player, class UClass* Item, EGrapplingHookUpgrade upgradeType);
};


// Class FSD.SentryGunUpgrade
// 0x0008 (0x0138 - 0x0130)
class USentryGunUpgrade : public UItemUpgrade
{
public:
	ESentryGunUpgradeType                              upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SentryGunUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, ESentryGunUpgradeType upgradeType);
};


// Class FSD.ArmorRegeneratorUpgrade
// 0x0008 (0x0138 - 0x0130)
class UArmorRegeneratorUpgrade : public UItemUpgrade
{
public:
	EArmorRegeneratorUpgrades                          upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ArmorRegeneratorUpgrade");
		return ptr;
	}


	static float GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, EArmorRegeneratorUpgrades upgradeType, bool includePreview, float* outBaseValue, float* outUpgradeValue, EItemPreviewStatus* outPreviewStatus);
};


// Class FSD.AddComponentUpgrade
// 0x0010 (0x0140 - 0x0130)
class UAddComponentUpgrade : public UItemUpgrade
{
public:
	class UClass*                                      ComponentClass;                                           // 0x0130(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ServerOnly;                                               // 0x0138(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0139(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AddComponentUpgrade");
		return ptr;
	}


	static bool GetUpgradedValue(class UClass* Item, class AFSDPlayerState* Player, class UClass* ComponentClass, bool includePreview);
};


// Class FSD.TriggeredStatusEffectUpgrade
// 0x0038 (0x0168 - 0x0130)
class UTriggeredStatusEffectUpgrade : public UItemUpgrade
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0130(0x0010) MISSED OFFSET
	class UClass*                                      StatusEffect;                                             // 0x0140(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ETriggeredStatusEffectType                         upgradeType;                                              // 0x0148(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              AoERange;                                                 // 0x014C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UPawnAffliction*                             PawnAfflictionOnTrigger;                                  // 0x0150(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               AffectOwnerOnly;                                          // 0x0158(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0159(0x0003) MISSED OFFSET
	float                                              EffectDuration;                                           // 0x015C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class AActor*                                      Owner;                                                    // 0x0160(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TriggeredStatusEffectUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class AFSDPlayerState* Player, class UClass* Item, class UClass* StatusEffect, ETriggeredStatusEffectType aUpgradeType);
	void All_OnAoETriggered(const struct FVector_NetQuantize& Location, const struct FVector_NetQuantizeNormal& Normal);
};


// Class FSD.ArmorUpgrade
// 0x0008 (0x0138 - 0x0130)
class UArmorUpgrade : public UItemUpgrade
{
public:
	EArmorUpgradeType                                  upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ArmorUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class AFSDPlayerState* Player, class UClass* armorClass, EArmorUpgradeType aUpgradeType);
	static struct FUpgradeValues GetUpgradedStatValue(class AFSDPlayerState* Player, class UClass* armorClass, class UPawnStat* Stat);
};


// Class FSD.ArmorStatUpgrade
// 0x0010 (0x0140 - 0x0130)
class UArmorStatUpgrade : public UItemUpgrade
{
public:
	class UPawnStat*                                   Stat;                                                     // 0x0130(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Amount;                                                   // 0x0138(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x013C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ArmorStatUpgrade");
		return ptr;
	}

};


// Class FSD.BoscoUpgrade
// 0x0008 (0x0138 - 0x0130)
class UBoscoUpgrade : public UItemUpgrade
{
public:
	EBoscoUpgrades                                     upgradeType;                                              // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Amount;                                                   // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BoscoUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class AFSDPlayerState* Player, class UClass* Item, EBoscoUpgrades upgradeType);
};


// Class FSD.PlatformGunUpgrade
// 0x0008 (0x0138 - 0x0130)
class UPlatformGunUpgrade : public UItemUpgrade
{
public:
	EPlatformGunUpgrades                               myUpgradeType;                                            // 0x0130(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0131(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlatformGunUpgrade");
		return ptr;
	}


	static struct FUpgradeValues GetUpgradedValue(class AFSDPlayerState* Player, class UClass* Item, EPlatformGunUpgrades aUpgradeType);
};


// Class FSD.CombinedUpgrade
// 0x0010 (0x0140 - 0x0130)
class UCombinedUpgrade : public UItemUpgrade
{
public:
	TArray<class UItemUpgrade*>                        CombinedUpgrades;                                         // 0x0130(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CombinedUpgrade");
		return ptr;
	}


	TArray<class UItemUpgrade*> GetUpgrades();
};


// Class FSD.Upgradable
// 0x0000 (0x0028 - 0x0028)
class UUpgradable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Upgradable");
		return ptr;
	}


	void Upgraded(TArray<class UItemUpgrade*> upgrades);
};


// Class FSD.UpgradableGear
// 0x0000 (0x0028 - 0x0028)
class UUpgradableGear : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.UpgradableGear");
		return ptr;
	}


	void GetGearStatEntry(class AFSDPlayerState* PlayerState, TArray<struct FGearStatEntry>* Stats);
};


// Class FSD.JetPackItem
// 0x0038 (0x0480 - 0x0448)
class AJetPackItem : public AAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0448(0x0004) MISSED OFFSET
	float                                              ActiveTime;                                               // 0x044C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UCurveFloat*                                 VerticalAccelerationCurve;                                // 0x0450(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              VerticalAcceleration;                                     // 0x0458(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxVerticalSpeed;                                         // 0x045C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxHorizontalSpeed;                                       // 0x0460(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxHorizontalDrift;                                       // 0x0464(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BurnDuration;                                             // 0x0468(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RechargeDuration;                                         // 0x046C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Fuel;                                                     // 0x0470(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               Active;                                                   // 0x0474(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0475(0x0003) MISSED OFFSET
	class UPlayerMovementComponent*                    CharacterMovement;                                        // 0x0478(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.JetPackItem");
		return ptr;
	}


	void Server_StopThruster();
	void Server_StartThruster();
	void OnRep_Fuel(float OldFuel);
	void OnRep_Active();
	void OnFuelChanged(float Value, float Delta);
};


// Class FSD.KeepInsideWorld
// 0x0018 (0x0108 - 0x00F0)
class UKeepInsideWorld : public UActorComponent
{
public:
	TArray<TWeakObjectPtr<class AActor>>               ActorsToKeepInsideWorld;                                  // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	int                                                IteratorIndex;                                            // 0x0100(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0104(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.KeepInsideWorld");
		return ptr;
	}


	static void UnregisterForKeepInsideWorld(class UObject* WorldContextObject, class AActor* Actor);
	static void RegisterForKeepInsideWorld(class UObject* WorldContextObject, class AActor* Actor);
};


// Class FSD.LaserPointerMarker
// 0x0038 (0x0360 - 0x0328)
class ALaserPointerMarker : public AActor
{
public:
	struct FText                                       LookAtName;                                               // 0x0328(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net)
	struct FLinearColor                                LookAtColor;                                              // 0x0340(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class AActor*                                      LookAtTarget;                                             // 0x0350(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTexture2D*                                  LookAtIcon;                                               // 0x0358(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LaserPointerMarker");
		return ptr;
	}

};


// Class FSD.LaserPointerWaypoint
// 0x0020 (0x0348 - 0x0328)
class ALaserPointerWaypoint : public AActor
{
public:
	TWeakObjectPtr<class APlayerCharacter>             Character;                                                // 0x0328(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TWeakObjectPtr<class ALaserPointerItem>            LaserPointer;                                             // 0x0330(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     Normal;                                                   // 0x0338(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                Index;                                                    // 0x0344(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LaserPointerWaypoint");
		return ptr;
	}


	void OnShow();
	void OnHide();
};


// Class FSD.LaserPointerItem
// 0x01B0 (0x05F8 - 0x0448)
class ALaserPointerItem : public AAnimatedItem
{
public:
	class UClass*                                      MarkerType;                                               // 0x0448(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      SecondaryMarkerType;                                      // 0x0450(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TWeakObjectPtr<class ALaserPointerMarker>          ActiveMarker;                                             // 0x0458(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UClass*                                      WaypointType;                                             // 0x0460(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                MaxWaypoints;                                             // 0x0468(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x046C(0x0004) MISSED OFFSET
	TArray<class ALaserPointerWaypoint*>               Waypoints;                                                // 0x0470(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	int                                                NextWaypointIndex;                                        // 0x0480(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0484(0x0004) MISSED OFFSET
	struct FHoldButton                                 LaserpointButton;                                         // 0x0488(0x0028) (CPF_Edit)
	float                                              MarkerLifeTime;                                           // 0x04B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                ColorMinerals;                                            // 0x04B4(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                ColorEnemy;                                               // 0x04C4(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                ColorOther;                                               // 0x04D4(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x04E4(0x0004) MISSED OFFSET
	class UDialogDataAsset*                            DefaultLookAtShout;                                       // 0x04E8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            DefaultEnemyShout;                                        // 0x04F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USceneComponent*                             PointerComponent;                                         // 0x04F8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FHitResult                                  LookAtHit;                                                // 0x0500(0x0088) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_IsPlainOldData)
	struct FText                                       LookAtName;                                               // 0x0588(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient)
	struct FText                                       LookAtDescription;                                        // 0x05A0(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient)
	struct FLinearColor                                LookAtColor;                                              // 0x05B8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              LookAtDistance;                                           // 0x05C8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x05CC(0x0004) MISSED OFFSET
	class UTexture2D*                                  LookAtIcon;                                               // 0x05D0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	ELaserPointerTargetType                            TargetType;                                               // 0x05D8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x05D9(0x0007) MISSED OFFSET
	class AActor*                                      ExtraActor;                                               // 0x05E0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UDialogDataAsset*                            LookAtShout;                                              // 0x05E8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class AFSDGameState*                               GameState;                                                // 0x05F0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LaserPointerItem");
		return ptr;
	}


	void ServerPlaceMarker(const struct FVector& Location, const struct FText& Name, const struct FLinearColor& Color, class AActor* Target, ELaserPointerTargetType TypeOfTarget, class UTexture2D* Icon, class UClass* aMarkerType);
	void OnPointOfInterest(class AActor* targetActor, const struct FVector& TargetLocation, class UTexture2D* TargetIcon);
	void OnMarkerPlaced(const struct FVector& Location, const struct FText& Name, const struct FLinearColor& Color, class AActor* Target, ELaserPointerTargetType TypeOfTarget);
	void GetPointTransform(struct FTransform* PointTransform);
};


// Class FSD.LineItemComponent
// 0x0000 (0x0580 - 0x0580)
class ULineItemComponent : public USphereComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LineItemComponent");
		return ptr;
	}

};


// Class FSD.LineCarverComponent
// 0x0020 (0x05A0 - 0x0580)
class ULineCarverComponent : public ULineItemComponent
{
public:
	float                                              HRange;                                                   // 0x0580(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              VRange;                                                   // 0x0584(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CielingNoiseRange;                                        // 0x0588(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              WallNoiseRange;                                           // 0x058C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FloorNoiseRange;                                          // 0x0590(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FloorAngle;                                               // 0x0594(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0598(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LineCarverComponent");
		return ptr;
	}

};


// Class FSD.LineItem
// 0x0018 (0x0348 - 0x0330)
class ALineItem : public AGenerationItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	TArray<int>                                        Indicies;                                                 // 0x0338(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LineItem");
		return ptr;
	}

};


// Class FSD.LineCarver
// 0x0020 (0x0368 - 0x0348)
class ALineCarver : public ALineItem
{
public:
	class UFloodFillSettings*                          CeilingNoiseOverride;                                     // 0x0348(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          WallNoiseOverride;                                        // 0x0350(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          FloorNoiseOverride;                                       // 0x0358(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Cielingheight;                                            // 0x0360(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FloorDepth;                                               // 0x0364(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LineCarver");
		return ptr;
	}

};


// Class FSD.LineSegmentCarverComponent
// 0x0030 (0x0590 - 0x0560)
class ULineSegmentCarverComponent : public UGenerationComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0560(0x0008) MISSED OFFSET
	bool                                               Visible;                                                  // 0x0568(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0569(0x0003) MISSED OFFSET
	int                                                Layer;                                                    // 0x056C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Cielingheight;                                            // 0x0570(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FloorDepth;                                               // 0x0574(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          CeilingNoiseOverride;                                     // 0x0578(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          WallNoiseOverride;                                        // 0x0580(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          FloorNoiseOverride;                                       // 0x0588(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LineSegmentCarverComponent");
		return ptr;
	}

};


// Class FSD.LineSegmentCarver
// 0x0018 (0x0348 - 0x0330)
class ALineSegmentCarver : public AGenerationItem
{
public:
	class ULineSegmentCarverComponent*                 LineComponent;                                            // 0x0330(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0338(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LineSegmentCarver");
		return ptr;
	}

};


// Class FSD.LineFillerComponent
// 0x0020 (0x05A0 - 0x0580)
class ULineFillerComponent : public ULineItemComponent
{
public:
	float                                              Range;                                                    // 0x0580(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	float                                              NoiseRange;                                               // 0x0584(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	struct FRandRange                                  RandomRange;                                              // 0x0588(0x0008) (CPF_Edit)
	struct FRandRange                                  RandomNoiseRange;                                         // 0x0590(0x0008) (CPF_Edit)
	struct FRandRange                                  FillAmount;                                               // 0x0598(0x0008) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LineFillerComponent");
		return ptr;
	}

};


// Class FSD.LineFiller
// 0x0020 (0x0368 - 0x0348)
class ALineFiller : public ALineItem
{
public:
	class UFloodFillSettings*                          NoiseOverride;                                            // 0x0348(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRandRange                                  RangeScale;                                               // 0x0350(0x0008) (CPF_Edit)
	struct FRandRange                                  NoiseRangeScale;                                          // 0x0358(0x0008) (CPF_Edit)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0360(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LineFiller");
		return ptr;
	}

};


// Class FSD.LineSegmentFillerComponent
// 0x0030 (0x0590 - 0x0560)
class ULineSegmentFillerComponent : public UGenerationComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0560(0x0008) MISSED OFFSET
	bool                                               Visible;                                                  // 0x0568(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0569(0x0007) MISSED OFFSET
	class UFloodFillSettings*                          NoiseOverride;                                            // 0x0570(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRandRange                                  RangeScale;                                               // 0x0578(0x0008) (CPF_Edit)
	struct FRandRange                                  NoiseRangeScale;                                          // 0x0580(0x0008) (CPF_Edit)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0588(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LineSegmentFillerComponent");
		return ptr;
	}

};


// Class FSD.LineSegmentFiller
// 0x0018 (0x0348 - 0x0330)
class ALineSegmentFiller : public AGenerationItem
{
public:
	class ULineSegmentFillerComponent*                 LineComponent;                                            // 0x0330(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0338(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LineSegmentFiller");
		return ptr;
	}

};


// Class FSD.LocalizationFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class ULocalizationFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LocalizationFunctionLibrary");
		return ptr;
	}


	static TArray<struct FLocalizedLanguageInfo> GetLocalizedLanguages();
};


// Class FSD.FSDLocalizationSettings
// 0x0010 (0x0048 - 0x0038)
class UFSDLocalizationSettings : public UDeveloperSettings
{
public:
	TArray<struct FFSDTranslationProgress>             CommunityTranslationProgress;                             // 0x0038(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDLocalizationSettings");
		return ptr;
	}

};


// Class FSD.LookingAtWidget
// 0x0070 (0x0278 - 0x0208)
class ULookingAtWidget : public UUserWidget
{
public:
	TEnumAsByte<ECollisionChannel>                     TraceChannel;                                             // 0x0208(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0209(0x0003) MISSED OFFSET
	float                                              TargetMaxDistance;                                        // 0x020C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TargetSelectDuration;                                     // 0x0210(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TargetLostDuration;                                       // 0x0214(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TWeakObjectPtr<class APlayerCharacter>             Character;                                                // 0x0218(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TWeakObjectPtr<class AActor>                       CurrentTarget;                                            // 0x0220(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TScriptInterface<class UHealth>                    CurrentTargetHealth;                                      // 0x0228(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TWeakObjectPtr<class AActor>                       LookingAtActor;                                           // 0x0238(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TScriptInterface<class UHealth>                    LookingAtHealth;                                          // 0x0240(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              LookingAtTime;                                            // 0x0250(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              TargetLostTime;                                           // 0x0254(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               bTargetSet;                                               // 0x0258(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x17];                                      // 0x0259(0x0017) MISSED OFFSET
	bool                                               bTraceRequested;                                          // 0x0270(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0271(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LookingAtWidget");
		return ptr;
	}


	void SetCurrentTarget(class AActor* NewActor, const TScriptInterface<class UHealth>& HealthComponent);
	void ResetCurrentTarget();
	void ReceiveUpdateTarget(class AActor* InCurrentTarget, float DeltaTime);
	void ReceiveTargetLost();
	void ReceiveNewTarget(class AActor* InCurrentTarget);
	bool IsValidTarget(class AActor* PotentialTarget);
};


// Class FSD.ManualMiningItem
// 0x0228 (0x0670 - 0x0448)
class AManualMiningItem : public AAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0448(0x0008) MISSED OFFSET
	bool                                               QuadDamageCarving;                                        // 0x0450(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0451(0x0007) MISSED OFFSET
	class UFirstPersonStaticMeshComponent*             FPAnimationEventMesh;                                     // 0x0458(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UStaticMeshComponent*                        TPAnimationEventMesh;                                     // 0x0460(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDamageComponent*                            DamageComponent;                                          // 0x0468(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              Damage;                                                   // 0x0470(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	float                                              ArmorDamageMultiplier;                                    // 0x0474(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	class UDamageClass*                                DamageClass;                                              // 0x0478(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	int                                                RockMiningBonus;                                          // 0x0480(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                DirtMiningBonus;                                          // 0x0484(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              friendlyFireModifier;                                     // 0x0488(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	float                                              DamageRange;                                              // 0x048C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DamageRadius;                                             // 0x0490(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0494(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       WideDamageTrackingTags;                                   // 0x0498(0x0020) (CPF_Edit)
	class USoundCue*                                   MiningSound;                                              // 0x04B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UForceFeedbackEffect*                        MineRumble;                                               // 0x04C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UForceFeedbackEffect*                        PartialMineRumble;                                        // 0x04C8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UForceFeedbackEffect*                        DamageRumble;                                             // 0x04D0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      OnDamageEnemyStatusEffect;                                // 0x04D8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              GeneralImpactAudioVolume;                                 // 0x04E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x04E4(0x0004) MISSED OFFSET
	class UParticleSystem*                             ImpactParticles;                                          // 0x04E8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              HitCooldown;                                              // 0x04F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MiningDuration;                                           // 0x04F4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DistanceConsideredSameHit;                                // 0x04F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BlockParticlesScaleFP;                                    // 0x04FC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BlockParticlesScaleTP;                                    // 0x0500(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EManualMiningState                                 State;                                                    // 0x0504(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x16B];                                     // 0x0505(0x016B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ManualMiningItem");
		return ptr;
	}


	void Server_RemoveDebrisInstance(const struct FVector_NetQuantize& HitPos, int DebrisIndex, int remappedIndex);
	void Server_HitBlock(const struct FVector_NetQuantize& Position, int Material, bool removeDebris);
	void Server_DigBlock2(const struct FVector& carvePos, const struct FVector& carveDirection, int TerrainMaterial);
	void Server_DamageTarget(class UPrimitiveComponent* TargetComponent, const struct FVector_NetQuantize& ImpactPoint, const struct FVector_NetQuantizeNormal& ImpactNormal, class UFSDPhysicalMaterial* PhysMaterial, unsigned char BoneIndex);
	void All_SimulateHitBlock(const struct FVector_NetQuantize& Position, int materia, bool removeDebris);
	void All_SimulateDigDebris(const struct FVector_NetQuantize& Position, class UParticleSystem* Particles, class USoundCue* cue);
	void All_SimulateDigBlock(const struct FVector_NetQuantize& Position, bool spawnParticles, int Material, float Density);
	void All_SimulateDamageTarget(class UPrimitiveComponent* TargetComponent, const struct FVector_NetQuantize& ImpactPoint, const struct FVector_NetQuantizeNormal& ImpactNormal, class UFSDPhysicalMaterial* PhysMaterial, unsigned char BoneIndex);
};


// Class FSD.MilestoneAsset
// 0x00A8 (0x00D8 - 0x0030)
class UMilestoneAsset : public UDataAsset
{
public:
	struct FScriptMulticastDelegate                    OnMilestoneClaimed;                                       // 0x0030(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMilestoneReached;                                       // 0x0040(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FGuid                                       SavegameID;                                               // 0x0050(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	class UTexture2D*                                  LargeImage;                                               // 0x0060(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FText                                       FormattedTitle;                                           // 0x0068(0x0018) (CPF_Edit)
	class UMissionStat*                                TrackingStat;                                             // 0x0080(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TSoftObjectPtr<class UClass>                       TrackingCharacter;                                        // 0x0088(0x0028) (CPF_Edit)
	TArray<struct FMilestoneTier>                      Tiers;                                                    // 0x00B0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	class UFSDGameInstance*                            GameInstance;                                             // 0x00C0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                LastTierReached;                                          // 0x00C8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               bPendingMilestoneReached;                                 // 0x00CC(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x00CD(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MilestoneAsset");
		return ptr;
	}


	static TArray<class UMilestoneAsset*> SortMilestonesByProgress(class UObject* WorldContext, TArray<class UMilestoneAsset*>* Milestones);
	void OnMissionStatChanged(class UMissionStat* Stat, float Value);
	bool IsCompleted(class UObject* WorldContext);
	bool IsClaimable(class UObject* WorldContext);
	struct FText GetTitleForTier(int Tier);
	struct FText GetTitle(class UObject* WorldContext);
	int GetNextPerkPointsReward(class UObject* WorldContext);
	void GetCurrentProgress(class UObject* WorldContext, int* Tier, float* Progress, float* CurrentCount, float* TargetCount);
	int GetClaimedTier(class UObject* WorldContext);
	bool GetClaimedProgress(class UObject* WorldContext, int* Tier, float* Progress, float* CurrentCount, float* TargetCount);
	class UTexture2D* GetCategoryIcon();
	void ClearPendingMilestoneReached();
	int ClaimNextTier(class UObject* WorldContext);
};


// Class FSD.MiningPodCalldownLocation
// 0x0000 (0x0328 - 0x0328)
class AMiningPodCalldownLocation : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MiningPodCalldownLocation");
		return ptr;
	}

};


// Class FSD.MiningPod
// 0x0140 (0x0468 - 0x0328)
class AMiningPod : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	float                                              DropHeight;                                               // 0x0330(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     TargetLocation;                                           // 0x0334(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0340(0x0008) MISSED OFFSET
	class UAutoCarverComponent*                        AutoCarver;                                               // 0x0348(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0350(0x0010) MISSED OFFSET
	class UCurveFloat*                                 DropCurve;                                                // 0x0360(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UCurveFloat*                                 DepartCurve;                                              // 0x0368(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UCurveFloat*                                 CarverDropCurve;                                          // 0x0370(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CarverRotationSpeed;                                      // 0x0378(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     CarverScale;                                              // 0x037C(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FGameplayTagContainer                       GameplayTags;                                             // 0x0388(0x0020) (CPF_Edit)
	class UBoxComponent*                               DwarfCheckerBox;                                          // 0x03A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              DepartureTime;                                            // 0x03B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03B4(0x0004) MISSED OFFSET
	struct FText                                       DepartueCountdownName;                                    // 0x03B8(0x0018) (CPF_Edit)
	unsigned char                                      UnknownData04[0x8];                                       // 0x03D0(0x0008) MISSED OFFSET
	struct FMiningPodDialogs                           Dialogs;                                                  // 0x03D8(0x0048) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EMiningPodMission                                  MissionType;                                              // 0x0420(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               HasLanded;                                                // 0x0421(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x0422(0x0006) MISSED OFFSET
	class UOutlineComponent*                           PodOutline;                                               // 0x0428(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FVector                                     StartLocation;                                            // 0x0430(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	EMiningPodState                                    State;                                                    // 0x043C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	EMiningPodRampState                                RampState;                                                // 0x043D(0x0001) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x043E(0x0002) MISSED OFFSET
	float                                              TargetDropTime;                                           // 0x0440(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TargetDepartureTime;                                      // 0x0444(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TimeToDrop;                                               // 0x0448(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x044C(0x0004) MISSED OFFSET
	class UObjectivesManager*                          ObjectivesManager;                                        // 0x0450(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0x10];                                      // 0x0458(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MiningPod");
		return ptr;
	}


	static class AMiningPod* SpawnPodAtLocation(class UObject* WorldContextObject, class UClass* podClass, const struct FTransform& Transform);
	void SetMuleInstance(class ADonkeyCharacter* Donkey);
	void RecieveReturnTimerFifteenSecondWarning();
	void RecieveReturnTimerExpired();
	void PrepForTakeOff();
	void PowerUp();
	void PoweredUp();
	void OnRep_State();
	void OnRep_RampState();
	void OnPrepForTakeOff();
	void OnPoweringUp();
	void OnPoweredUp();
	void OnHostInsidePod(bool isInside);
	void OnDropStarted();
	void OnDroppodImpact();
	void OnDrillingStarted();
	void OnDeparting();
	void OnCountdownFinished();
	void OnCountdownChanged(int newTime);
	void OnAllDwavesInsidePod(bool AllInside);
	int GetTimeToDeparture();
	bool GetHasLanded();
	struct FVector GetDonkeyReturnPickupLocation();
	void ForceTakeoff();
	void ExitSpacerig();
	static void DropToTarget(class UObject* WorldContextObject, class UClass* podClass, const struct FTransform& dropLocation, int DropDelay);
	static void DropToMission(class UObject* WorldContextObject, class UClass* podClass, const struct FVector& Location);
	void Depart();
	void CorrectLocationsForSpawnedOnLocation();
	static struct FVector AdjustLandingLocationToGround(class UObject* WorldContextObjet, const struct FVector& initialLocation);
};


// Class FSD.MiningPodAnimInstance
// 0x0000 (0x0360 - 0x0360)
class UMiningPodAnimInstance : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MiningPodAnimInstance");
		return ptr;
	}

};


// Class FSD.MissionChallenge
// 0x0000 (0x0030 - 0x0030)
class UMissionChallenge : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MissionChallenge");
		return ptr;
	}

};


// Class FSD.MissionManager
// 0x0010 (0x0100 - 0x00F0)
class UMissionManager : public UActorComponent
{
public:
	TArray<class URunningMissionBP*>                   RunningBlueprints;                                        // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MissionManager");
		return ptr;
	}


	void OnMatchStarted();
};


// Class FSD.MissionMutator
// 0x0038 (0x0068 - 0x0030)
class UMissionMutator : public UDataAsset
{
public:
	class UClass*                                      MissionBP;                                                // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UMutator*>                            Mutators;                                                 // 0x0038(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	struct FText                                       Title;                                                    // 0x0048(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	class UTexture2D*                                  Icon;                                                     // 0x0060(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MissionMutator");
		return ptr;
	}

};


// Class FSD.Mutator
// 0x0000 (0x0030 - 0x0030)
class UMutator : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Mutator");
		return ptr;
	}

};


// Class FSD.VeinMutator
// 0x0010 (0x0040 - 0x0030)
class UVeinMutator : public UMutator
{
public:
	class UVeinResourceData*                           VeinResource;                                             // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Modifier;                                                 // 0x0038(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.VeinMutator");
		return ptr;
	}

};


// Class FSD.CraftingMaterialMutator
// 0x0008 (0x0038 - 0x0030)
class UCraftingMaterialMutator : public UMutator
{
public:
	float                                              Modifier;                                                 // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CraftingMaterialMutator");
		return ptr;
	}

};


// Class FSD.SupplyPodMutator
// 0x0008 (0x0038 - 0x0030)
class USupplyPodMutator : public UMutator
{
public:
	float                                              CostModifier;                                             // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SupplyPodMutator");
		return ptr;
	}

};


// Class FSD.PlayerShieldsMutator
// 0x0008 (0x0038 - 0x0030)
class UPlayerShieldsMutator : public UMutator
{
public:
	float                                              ShieldModifier;                                           // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerShieldsMutator");
		return ptr;
	}

};


// Class FSD.EnemyRarityMutator
// 0x0018 (0x0048 - 0x0030)
class UEnemyRarityMutator : public UMutator
{
public:
	float                                              RarityMultiplier;                                         // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              SpawnAmountMultiplier;                                    // 0x0034(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DifficultyMultiplier;                                     // 0x0038(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	class UEnemyDescriptor*                            EnemyDescriptor;                                          // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyRarityMutator");
		return ptr;
	}

};


// Class FSD.ForceStationaryEncounterMutator
// 0x0010 (0x0040 - 0x0030)
class UForceStationaryEncounterMutator : public UMutator
{
public:
	class UEnemyGroupDescriptor*                       EnemyGroup;                                               // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FIRandRange                                 GroupSize;                                                // 0x0038(0x0008) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ForceStationaryEncounterMutator");
		return ptr;
	}

};


// Class FSD.EncounterOverrideMutator
// 0x0000 (0x0030 - 0x0030)
class UEncounterOverrideMutator : public UMutator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EncounterOverrideMutator");
		return ptr;
	}

};


// Class FSD.NoHeadlightMutator
// 0x0000 (0x0030 - 0x0030)
class UNoHeadlightMutator : public UMutator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.NoHeadlightMutator");
		return ptr;
	}

};


// Class FSD.DifficultyMutator
// 0x0030 (0x0060 - 0x0030)
class UDifficultyMutator : public UMutator
{
public:
	float                                              ExtraLargeEnemyDamageResistanceMultiplier;                // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              EnemyDamageResistanceMultiplier;                          // 0x0034(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              SmallEnemyDamageResistanceMultiplier;                     // 0x0038(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              EnemyDamageModifierMultiplier;                            // 0x003C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              EnemyCountModifierMultiplier;                             // 0x0040(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              WeakpointDamageMultiplier;                                // 0x0044(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              HazardBonus;                                              // 0x0048(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FriendlyFireModifierMultiplier;                           // 0x004C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              EnemyWaveIntervalModifier;                                // 0x0050(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              EnemyNormalWaveIntervalModifier;                          // 0x0054(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              EnemyNormalWaveDifficultyMultiplier;                      // 0x0058(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DifficultyMutator");
		return ptr;
	}

};


// Class FSD.ResourceVeinMutator
// 0x0018 (0x0048 - 0x0030)
class UResourceVeinMutator : public UMutator
{
public:
	class UResourceData*                               Resource;                                                 // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              VeinLengthMultiplier;                                     // 0x0038(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RangeMultiplier;                                          // 0x003C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              NoiseRangeMultiplier;                                     // 0x0040(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ResourceVeinMutator");
		return ptr;
	}

};


// Class FSD.RewardMutator
// 0x0020 (0x0050 - 0x0030)
class URewardMutator : public UMutator
{
public:
	struct FText                                       RewardText;                                               // 0x0030(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	float                                              XPMultiplier;                                             // 0x0048(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CreditMultiplier;                                         // 0x004C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RewardMutator");
		return ptr;
	}

};


// Class FSD.CommunicationMutator
// 0x0008 (0x0038 - 0x0030)
class UCommunicationMutator : public UMutator
{
public:
	float                                              PitchMultiplier;                                          // 0x0030(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CommunicationMutator");
		return ptr;
	}

};


// Class FSD.MissionMutatorManager
// 0x0000 (0x00F0 - 0x00F0)
class UMissionMutatorManager : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MissionMutatorManager");
		return ptr;
	}

};


// Class FSD.MissionPlayerAndCharacterWidget
// 0x0040 (0x0248 - 0x0208)
class UMissionPlayerAndCharacterWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0208(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MissionPlayerAndCharacterWidget");
		return ptr;
	}


	void UpdateValues(int PlayerRank, int PlayerStars, int CharacterLevel, float CharacterProgress);
	void StepCounter(float TimeScale, bool* CounterFinished);
	void PingPlayerRank();
	void PingCharacterLevel(int Level, int Stars);
	void InitCounter(const struct FPlayerProgress& PlayerProgressStart, const struct FCharacterProgress& CharacterProgressStart, const struct FPlayerProgress& PlayerProgressFinish, const struct FCharacterProgress& CharacterProgressFinish);
};


// Class FSD.FSDMissionSettings
// 0x00B8 (0x00F0 - 0x0038)
class UFSDMissionSettings : public UDeveloperSettings
{
public:
	struct FSoftObjectPath                             DefaultRoomGenerator;                                     // 0x0038(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_Config)
	TMap<int, struct FMissionHazardSetting>            MissionComplexitySettings;                                // 0x0050(0x0050) (CPF_Edit, CPF_ZeroConstructor, CPF_Config)
	TMap<int, struct FMissionHazardSetting>            MissionDurationSettings;                                  // 0x00A0(0x0050) (CPF_Edit, CPF_ZeroConstructor, CPF_Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDMissionSettings");
		return ptr;
	}


	static float GetTotalHazardBonus(class UGeneratedMission* Mission, class UDifficultySetting* DifficultySetting);
};


// Class FSD.MissionStatCategory
// 0x0020 (0x0050 - 0x0030)
class UMissionStatCategory : public UDataAsset
{
public:
	struct FText                                       Title;                                                    // 0x0030(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	class UTexture2D*                                  Icon;                                                     // 0x0048(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MissionStatCategory");
		return ptr;
	}

};


// Class FSD.MissionStat
// 0x0048 (0x0078 - 0x0030)
class UMissionStat : public UDataAsset
{
public:
	struct FScriptMulticastDelegate                    OnCountChanged;                                           // 0x0030(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FGuid                                       SavegameID;                                               // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	struct FText                                       Title;                                                    // 0x0050(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	class UMissionStatCategory*                        Category;                                                 // 0x0068(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EMissionStatType                                   MissionStatType;                                          // 0x0070(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               DoNotShowInMissionStatView;                               // 0x0071(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0072(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MissionStat");
		return ptr;
	}


	void StatCountChanged__DelegateSignature(class UMissionStat* MissionStat, float Value);
	static struct FText MissionStatToText(EMissionStatType StatType, float Value);
	static void Increment(class UObject* WorldContext, class UMissionStat* Stat, class UClass* CharacterClass, float Amount);
	float GetStatMaxCount(class UObject* WorldContext);
	struct FText GetStatCountTotalAsText(class UObject* WorldContext);
	float GetStatCountTotal(class UObject* WorldContext);
	float GetStatCountPct(class UObject* WorldContext, class UClass* CharacterClass);
	struct FText GetStatCountAsText(class UObject* WorldContext, class UClass* CharacterClass);
	float GetStatCount(class UObject* WorldContext, class UClass* CharacterClass);
	struct FString GetSourceTitle();
	class UTexture2D* GetIcon();
	struct FText GetCategoryTitle();
};


// Class FSD.MissionStatsCollector
// 0x0028 (0x0118 - 0x00F0)
class UMissionStatsCollector : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x00F8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0100(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MissionStatsCollector");
		return ptr;
	}


	void OnResourceIncremented(class UCappedResource* Resource, float Amount);
};


// Class FSD.FSDDataAsset
// 0x0000 (0x0030 - 0x0030)
class UFSDDataAsset : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FSDDataAsset");
		return ptr;
	}

};


// Class FSD.GlobalMissionParameters
// 0x0020 (0x0050 - 0x0030)
class UGlobalMissionParameters : public UDataAsset
{
public:
	TArray<struct FResourceSpawner>                    DefaultResources;                                         // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<TSoftObjectPtr<class UClass>>               SecondaryObjectives;                                      // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GlobalMissionParameters");
		return ptr;
	}

};


// Class FSD.MissionTemplate
// 0x0128 (0x0158 - 0x0030)
class UMissionTemplate : public UDataAsset
{
public:
	class UGlobalMissionParameters*                    GlobalMissionParameters;                                  // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<TSoftObjectPtr<class UClass>>               PrimaryObjectives;                                        // 0x0038(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<TSoftObjectPtr<class UClass>>               SecondaryObjectives;                                      // 0x0048(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UMissionMutator*>                     Mutators;                                                 // 0x0058(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UMissionWarning*>                     Warnings;                                                 // 0x0068(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TSoftObjectPtr<class UClass>                       pls;                                                      // 0x0078(0x0028) (CPF_Edit)
	TSoftObjectPtr<class UWorld>                       Level;                                                    // 0x00A0(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	TArray<class UMissionComplexity*>                  LockedComplexities;                                       // 0x00C8(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UMissionDuration*>                    LockedDurations;                                          // 0x00D8(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	struct FText                                       MissionName;                                              // 0x00E8(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	class UTexture2D*                                  MissionIcon;                                              // 0x0100(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                MissionIconBorderColor;                                   // 0x0108(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                MissionTypeIndex;                                         // 0x0118(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
	struct FString                                     MissionTypeAnalyticsIndex;                                // 0x0120(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UClass*>                              DNA;                                                      // 0x0130(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	bool                                               MustBeUnLocked;                                           // 0x0140(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0141(0x0003) MISSED OFFSET
	float                                              StationaryEnemyScale;                                     // 0x0144(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FGuid                                       SavegameID;                                               // 0x0148(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MissionTemplate");
		return ptr;
	}


	void Receive_SetMissionParameters(class UGeneratedMission* Mission, struct FRandomStream* Random);
	bool IsLocked(class UFSDSaveGame* SaveGame);
	TSoftObjectPtr<class UClass> GetSoftReferenceToPLS();
	class UClass* GetPLS();
};


// Class FSD.FracturedMissionTemplate
// 0x0000 (0x0158 - 0x0158)
class UFracturedMissionTemplate : public UMissionTemplate
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FracturedMissionTemplate");
		return ptr;
	}

};


// Class FSD.LinearMissionTemplate
// 0x0000 (0x0158 - 0x0158)
class ULinearMissionTemplate : public UMissionTemplate
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LinearMissionTemplate");
		return ptr;
	}

};


// Class FSD.StarMissionTemplate
// 0x0000 (0x0158 - 0x0158)
class UStarMissionTemplate : public UMissionTemplate
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StarMissionTemplate");
		return ptr;
	}

};


// Class FSD.MotherlodeMissionTemplate
// 0x0000 (0x0158 - 0x0158)
class UMotherlodeMissionTemplate : public UMissionTemplate
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MotherlodeMissionTemplate");
		return ptr;
	}

};


// Class FSD.GlobalMissionSetup
// 0x0058 (0x0088 - 0x0030)
class UGlobalMissionSetup : public UDataAsset
{
public:
	struct FIRandRange                                 ExtraBiomes;                                              // 0x0030(0x0008) (CPF_Edit)
	struct FIRandRange                                 AdditionalMissionsForExtraBiomes;                         // 0x0038(0x0008) (CPF_Edit)
	struct FIRandRange                                 MissionsPerZone;                                          // 0x0040(0x0008) (CPF_Edit)
	TArray<struct FMissionBiomeItem>                   Biomes;                                                   // 0x0048(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	class UMissionNameBank*                            MissionNames;                                             // 0x0058(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FIRandRange                                 MutatorWarningCount;                                      // 0x0060(0x0008) (CPF_Edit)
	TArray<class UPlanetZone*>                         PlanetZones;                                              // 0x0068(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UMissionTemplate*>                    XIMMissionTemplates;                                      // 0x0078(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.GlobalMissionSetup");
		return ptr;
	}

};


// Class FSD.MissionFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UMissionFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MissionFunctionLibrary");
		return ptr;
	}


	static class UMissionGenerationManager* GetMissionGenerationManager(class UObject* WorldContextObject);
	static class UMissionGenerationManager* GetMissionGenerationComponent(class UObject* WorldContextObject);
	static int GetGlobalMissionSeed();
};


// Class FSD.MissionNameBank
// 0x0020 (0x0050 - 0x0030)
class UMissionNameBank : public UDataAsset
{
public:
	TArray<struct FText>                               FirstNames;                                               // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<struct FText>                               LastNames;                                                // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MissionNameBank");
		return ptr;
	}

};


// Class FSD.MissionComplexity
// 0x0030 (0x0060 - 0x0030)
class UMissionComplexity : public UDataAsset
{
public:
	struct FText                                       Title;                                                    // 0x0030(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	float                                              HazardBonus;                                              // 0x0048(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                NumberOfDots;                                             // 0x004C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FGuid                                       SavegameID;                                               // 0x0050(0x0010) (CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MissionComplexity");
		return ptr;
	}

};


// Class FSD.MissionDuration
// 0x0030 (0x0060 - 0x0030)
class UMissionDuration : public UDataAsset
{
public:
	struct FText                                       Title;                                                    // 0x0030(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	float                                              HazardBonus;                                              // 0x0048(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                NumberOfDots;                                             // 0x004C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FGuid                                       SavegameID;                                               // 0x0050(0x0010) (CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MissionDuration");
		return ptr;
	}

};


// Class FSD.MissionDNA
// 0x0028 (0x0050 - 0x0028)
class UMissionDNA : public UObject
{
public:
	float                                              MissionScale;                                             // 0x0028(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Weight;                                                   // 0x002C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMissionComplexity*                          Complexity;                                               // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMissionDuration*                            Duration;                                                 // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<struct FGameplayTagQuery>                   RoomQueries;                                              // 0x0040(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MissionDNA");
		return ptr;
	}


	float GetDurationHazardBonus();
	float GetComplexityHazardBonus();
};


// Class FSD.DNATester
// 0x0010 (0x0338 - 0x0328)
class ADNATester : public AActor
{
public:
	class UClass*                                      DNA;                                                      // 0x0328(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class URoomGeneratorGroup*                         Group;                                                    // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DNATester");
		return ptr;
	}

};


// Class FSD.RunningMissionBP
// 0x0000 (0x0028 - 0x0028)
class URunningMissionBP : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RunningMissionBP");
		return ptr;
	}


	void StartLogic();
};


// Class FSD.MissionWarning
// 0x0048 (0x0078 - 0x0030)
class UMissionWarning : public UDataAsset
{
public:
	class UClass*                                      MissionBP;                                                // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UMutator*>                            Mutators;                                                 // 0x0038(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	struct FText                                       Title;                                                    // 0x0048(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	class UTexture2D*                                  Icon;                                                     // 0x0060(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              HazardBonus;                                              // 0x0068(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	class UMissionStat*                                MissionCompletedStat;                                     // 0x0070(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MissionWarning");
		return ptr;
	}

};


// Class FSD.StatusEffectEnemies
// 0x0030 (0x0058 - 0x0028)
class UStatusEffectEnemies : public URunningMissionBP
{
public:
	TArray<class UClass*>                              StatusEffects;                                            // 0x0028(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	struct FGameplayTagContainer                       AllowedFilter;                                            // 0x0038(0x0020) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StatusEffectEnemies");
		return ptr;
	}


	void OnEnemySpawned(class APawn* enemy);
};


// Class FSD.ExterminationReward
// 0x0030 (0x0058 - 0x0028)
class UExterminationReward : public URunningMissionBP
{
public:
	class UResourceData*                               Resource;                                                 // 0x0028(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AwardSize;                                                // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       AllowedFilter;                                            // 0x0038(0x0020) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ExterminationReward");
		return ptr;
	}


	void OnEnemyKilled(const struct FGameplayTagContainer& GameplayTags);
};


// Class FSD.MotionAudioController
// 0x0050 (0x06A0 - 0x0650)
class UMotionAudioController : public UAudioComponent
{
public:
	float                                              DecaySpeed;                                               // 0x0650(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               DebugText;                                                // 0x0654(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               Clamp;                                                    // 0x0655(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               Interp;                                                   // 0x0656(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0657(0x0001) MISSED OFFSET
	float                                              AccelerationThreshold;                                    // 0x0658(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x065C(0x000C) MISSED OFFSET
	float                                              SpeedThreshold;                                           // 0x0668(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              FadeInTime;                                               // 0x066C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              FadeOutTime;                                              // 0x0670(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               AutoPlayOnSpeedThreshold;                                 // 0x0674(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x2B];                                      // 0x0675(0x002B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MotionAudioController");
		return ptr;
	}

};


// Class FSD.MouseCursorWidget
// 0x0008 (0x0230 - 0x0228)
class UMouseCursorWidget : public UFSDUserWidget
{
public:
	EInputSource                                       TargetInput;                                              // 0x0228(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bIsHovering;                                              // 0x0229(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x022A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MouseCursorWidget");
		return ptr;
	}


	void OnUnhover();
	void OnInputSourceChanged(EInputSource Source);
	void OnHover();
};


// Class FSD.MultiHitscanComponent
// 0x0058 (0x0280 - 0x0228)
class UMultiHitscanComponent : public UHitscanBaseComponent
{
public:
	int                                                BulletsPerShot;                                           // 0x0228(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MuzzleRadius;                                             // 0x022C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              GeneralImpactAudioVolume;                                 // 0x0230(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0234(0x0004) MISSED OFFSET
	TArray<class AActor*>                              DamagedActorCache;                                        // 0x0238(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<struct FMultiHitscanHit>                    Hits;                                                     // 0x0248(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<class AActor*>                              ActorsHit;                                                // 0x0258(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0268(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MultiHitscanComponent");
		return ptr;
	}


	void Server_RegisterHit(TArray<struct FMultiHitscanHit> hitResults);
	void All_ShowHit(TArray<struct FMultiHitscanHit> hitResults);
};


// Class FSD.MusicLibrary
// 0x0010 (0x0040 - 0x0030)
class UMusicLibrary : public UDataAsset
{
public:
	TArray<class USoundCue*>                           MusicCues;                                                // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MusicLibrary");
		return ptr;
	}

};


// Class FSD.MusicManager
// 0x00A0 (0x0190 - 0x00F0)
class UMusicManager : public UActorComponent
{
public:
	TMap<class UMusicLibrary*, class UAudioComponent*> AudioComponents;                                          // 0x00F0(0x0050) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	TMap<class USoundCue*, class UAudioComponent*>     NetworkedAudioComponents;                                 // 0x0140(0x0050) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MusicManager");
		return ptr;
	}


	void StopNetworked(class UMusicLibrary* library);
	void PlayNetworked(class UMusicLibrary* library);
	void PlayLocally(class UMusicLibrary* library);
	void OnNetworkedAudioFinished(class UAudioComponent* AudioComponent);
	void OnAudioFinished(class UAudioComponent* AudioComponent);
};


// Class FSD.NoiseFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UNoiseFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.NoiseFunctionLibrary");
		return ptr;
	}


	static void SphericalNoiseMovementComponent(class UObject* WorldContextObject, class USceneComponent* Component, const struct FVector& Center, float Radius, float Speed, float TimeOffset);
	static void SphericalNoiseMovementActor(class UObject* WorldContextObject, class AActor* Actor, const struct FVector& Center, float Radius, float Speed, float TimeOffset);
	static struct FVector NoiseSphere3D(class UObject* WorldContextObject, float Time, float Radius);
	static struct FVector2D NoiseSphere2D(class UObject* WorldContextObject, float Time, float Radius);
	static float Noise3D(class UObject* WorldContextObject, float X, float Y, float Z);
	static float Noise2D(class UObject* WorldContextObject, float X, float Y);
	static float Noise(class UObject* WorldContextObject, float X);
};


// Class FSD.NoiseVisualizor
// 0x0040 (0x0368 - 0x0328)
class ANoiseVisualizor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class UFloodFillSettings*                          FloodFillSettings;                                        // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FreqMultiplier;                                           // 0x0338(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_IsPlainOldData)
	float                                              AmplitudeMultiplier;                                      // 0x033C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     NoiseSize;                                                // 0x0340(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_IsPlainOldData)
	float                                              PointSize;                                                // 0x034C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_IsPlainOldData)
	float                                              PostNoiseAmplitude;                                       // 0x0350(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_IsPlainOldData)
	int                                                Octaves;                                                  // 0x0354(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     Origin;                                                   // 0x0358(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_IsPlainOldData)
	bool                                               ShowNoise;                                                // 0x0364(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               ShowTerrainNoise;                                         // 0x0365(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0366(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.NoiseVisualizor");
		return ptr;
	}

};


// Class FSD.NoisyPathfinderTest
// 0x0088 (0x03B0 - 0x0328)
class ANoisyPathfinderTest : public AActor
{
public:
	struct FVector                                     Start;                                                    // 0x0328(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     End;                                                      // 0x0334(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     StartDirection;                                           // 0x0340(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     EndDirection;                                             // 0x034C(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DirectionDistance;                                        // 0x0358(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DirectionPenalty;                                         // 0x035C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ZPenaltyPower;                                            // 0x0360(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ZPenaltyScale;                                            // 0x0364(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DistancePenaltyScale;                                     // 0x0368(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RandomPenaltyScale;                                       // 0x036C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<struct FPathObstacle>                       Obstacles;                                                // 0x0370(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UTunnelSegmentSetting*                       TunnelSettings;                                           // 0x0380(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                StepSize;                                                 // 0x0388(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               Realtime;                                                 // 0x038C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               CarvePath;                                                // 0x038D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               CanDiagonal;                                              // 0x038E(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x038F(0x0001) MISSED OFFSET
	class UFloodFillSettings*                          FloodFillSettings;                                        // 0x0390(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class ADeepCSGWorld*                               CSGWorld;                                                 // 0x0398(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x03A0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.NoisyPathfinderTest");
		return ptr;
	}

};


// Class FSD.NoMovementStateComponent
// 0x0008 (0x0130 - 0x0128)
class UNoMovementStateComponent : public UCharacterStateComponent
{
public:
	bool                                               DisableHeadLightOnEnter;                                  // 0x0128(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               EnableHeadLightOnExit;                                    // 0x0129(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x012A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.NoMovementStateComponent");
		return ptr;
	}

};


// Class FSD.ObjectivesManager
// 0x0030 (0x0120 - 0x00F0)
class UObjectivesManager : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnObjectivesCompleted;                                    // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UObjective*                                  Objective;                                                // 0x0100(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	TArray<class UObjective*>                          SecondaryObjectives;                                      // 0x0108(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)
	bool                                               ObjectivesInitialized;                                    // 0x0118(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               ObjectivesStarted;                                        // 0x0119(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               bCheatObjectivesCompleted;                                // 0x011A(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x011B(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ObjectivesManager");
		return ptr;
	}


	void OnObjectiveChanged(class UObjective* Obj);
	void ExitPodDescending();
	void ExitPodArrived();
	void DropPodExited();
};


// Class FSD.ObstructionChecker
// 0x0050 (0x0290 - 0x0240)
class UObstructionChecker : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0240(0x0008) MISSED OFFSET
	float                                              DistanceToCheck;                                          // 0x0248(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x024C(0x0004) MISSED OFFSET
	float                                              CheckInterval;                                            // 0x0250(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0254(0x0004) MISSED OFFSET
	TArray<struct FVector>                             RayOffsets;                                               // 0x0258(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	unsigned char                                      UnknownData03[0x28];                                      // 0x0268(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ObstructionChecker");
		return ptr;
	}


	void Timer_Tick();
	void Timer_Result();
	void CheckForObstructions();
};


// Class FSD.OptionalUIWidget
// 0x0010 (0x0218 - 0x0208)
class UOptionalUIWidget : public UUserWidget
{
public:
	class UOptionalUICategory*                         Category;                                                 // 0x0208(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ESlateVisibility                                   VisibleFlag;                                              // 0x0210(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ESlateVisibility                                   HiddenFlag;                                               // 0x0211(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0212(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.OptionalUIWidget");
		return ptr;
	}


	void OnVisibilityChanged(class UOptionalUICategory* UICategory, bool IsVisible);
};


// Class FSD.OutlineComponent
// 0x0038 (0x0128 - 0x00F0)
class UOutlineComponent : public UActorComponent
{
public:
	EOutline                                           DefaultOutline;                                           // 0x00F0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ActiveOnHoldTAB;                                          // 0x00F1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00F2(0x0002) MISSED OFFSET
	int                                                LockCounter;                                              // 0x00F4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	EOutline                                           CurrentOutline;                                           // 0x00F8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET
	TArray<class UPrimitiveComponent*>                 OutlinedComponents;                                       // 0x0100(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)
	TArray<class UPrimitiveComponent*>                 ExcludedComponents;                                       // 0x0110(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor)
	TWeakObjectPtr<class APlayerCharacter>             Character;                                                // 0x0120(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.OutlineComponent");
		return ptr;
	}


	void UnlockOutline();
	void ToggleDefaultOutline(bool Visible);
	void SetOutline(EOutline Outline);
	void RemoveFromOutline(class UPrimitiveComponent* Component);
	void OnToggleOutline(bool Visible);
	void OnOwnerDeath(class UHealthComponentBase* HealthComponent);
	void OnLocalPlayerSet(class APlayerCharacter* PlayerCharacter);
	void OnItemUnequipped(class AItem* Item);
	void OnItemEquipped(class AItem* Item);
	void LockOutline();
	void EnableActivateOnHoldTab();
	void AddToOutline(class UPrimitiveComponent* Component);
	void AddActorToOutline(class AActor* Actor);
};


// Class FSD.OverheatingAggregator
// 0x0038 (0x0140 - 0x0108)
class UOverheatingAggregator : public UItemAggregator
{
public:
	struct FScriptMulticastDelegate                    OnOverheatingProgressChanged;                             // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOverheatedChanged;                                      // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0128(0x0004) MISSED OFFSET
	float                                              HeatLossPerSecond;                                        // 0x012C(0x0004) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              OverheatedDuration;                                       // 0x0130(0x0004) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bIsOverheated;                                            // 0x0134(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0135(0x0003) MISSED OFFSET
	float                                              Temperature;                                              // 0x0138(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x013C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.OverheatingAggregator");
		return ptr;
	}


	void Server_SetTemperature(float NewTemperature);
	void Server_SetIsOverheated(bool NewOverheated);
	void OverheatingProgressChanged__DelegateSignature(float Progress);
	void OverheatedChanged__DelegateSignature(bool Overheated);
	void OnRep_Temperature();
	void OnRep_IsOverheated();
	float GetTemperature();
	float GetOverheatingProgress();
	bool GetIsOverheated();
};


// Class FSD.ParalyzedStateComponent
// 0x0000 (0x0128 - 0x0128)
class UParalyzedStateComponent : public UCharacterStateComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ParalyzedStateComponent");
		return ptr;
	}

};


// Class FSD.ParasiteEnemy
// 0x0090 (0x03B8 - 0x0328)
class AParasiteEnemy : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class USceneComponent*                             Root;                                                     // 0x0330(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x0338(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UStaticMeshComponent*                        Tentacles1;                                               // 0x0340(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UStaticMeshComponent*                        Tentacles2;                                               // 0x0348(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UEnemyHealthComponent*                       Health;                                                   // 0x0350(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UEnemyComponent*                             Info;                                                     // 0x0358(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UOutlineComponent*                           Outline;                                                  // 0x0360(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0368(0x0010) MISSED OFFSET
	struct FGameplayTagContainer                       GameplayTags;                                             // 0x0378(0x0020) (CPF_Edit, CPF_BlueprintVisible)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0398(0x0008) MISSED OFFSET
	class UParticleSystem*                             deathParticles;                                           // 0x03A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class USoundBase*                                  deathSound;                                               // 0x03A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x03B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ParasiteEnemy");
		return ptr;
	}


	void OnTargetDeath(class UHealthComponentBase* aHealthComponent);
	void OnSelfDeath(class UHealthComponentBase* aHealthComponent);
};


// Class FSD.PassedOutStateComponent
// 0x0010 (0x0138 - 0x0128)
class UPassedOutStateComponent : public UCharacterStateComponent
{
public:
	class UDialogDataAsset*                            ReviveShout;                                              // 0x0128(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bAllPlayersPassedOut;                                     // 0x0130(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0131(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PassedOutStateComponent");
		return ptr;
	}


	void ReceiveTeamPassedOut();
};


// Class FSD.PathfinderCollisionComponent
// 0x0000 (0x05F0 - 0x05F0)
class UPathfinderCollisionComponent : public UStaticMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PathfinderCollisionComponent");
		return ptr;
	}


	void DisablePFCollision();
	void ActivatePFCollision();
};


// Class FSD.PathfinderDebugProbe
// 0x0008 (0x0330 - 0x0328)
class APathfinderDebugProbe : public AActor
{
public:
	class AActor*                                      Dest;                                                     // 0x0328(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PathfinderDebugProbe");
		return ptr;
	}

};


// Class FSD.PathfinderFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UPathfinderFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PathfinderFunctionLibrary");
		return ptr;
	}


	static struct FVector SnapToGrid(class UObject* WorldContextObject, const struct FVector& Origin, EDeepPathFinderType pathType, EDeepPathFinderSize pathSize, float maxSnapDistance);
	static struct FVector FindRandomPositionOnNavmeshAtDistance(class UObject* WorldContextObject, const struct FVector& Origin, float atDistance);
	static struct FVector FindRandomNearbyPositionOnNavmesh(class UObject* WorldContextObject, const struct FVector& Origin, float Radius);
	static struct FVector FindPointAlongPathTo(class UObject* WorldContextObject, const struct FVector& Origin, const struct FVector& Destination, float atDistance);
};


// Class FSD.PawnAffliction
// 0x0048 (0x0078 - 0x0030)
class UPawnAffliction : public UDataAsset
{
public:
	class UTexture2D*                                  Icon;                                                     // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FColor                                      IconColor;                                                // 0x0038(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<class UClass*>                              EnemyEffects;                                             // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UClass*>                              PlayerFirstPersonEffects;                                 // 0x0050(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UClass*>                              PlayerThirdPersonEffects;                                 // 0x0060(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UDialogDataAsset*                            PlayerShoutOnBegin;                                       // 0x0070(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PawnAffliction");
		return ptr;
	}

};


// Class FSD.PawnAfflictionComponent
// 0x0080 (0x0170 - 0x00F0)
class UPawnAfflictionComponent : public UActorComponent
{
public:
	TMap<class UPawnAffliction*, struct FPawnAfflictionItem> ActiveAfflictions;                                        // 0x00F0(0x0050) (CPF_ZeroConstructor, CPF_Transient)
	TArray<class UPawnAffliction*>                     NetworkedAfflictions;                                     // 0x0140(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Transient)
	class UClass*                                      FrozenEffect;                                             // 0x0150(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      BurningEffect;                                            // 0x0158(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EFrozenBitsSize                                    EffectSize;                                               // 0x0160(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0161(0x0003) MISSED OFFSET
	float                                              BaseEffectScale;                                          // 0x0164(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               UseDormancy;                                              // 0x0168(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0169(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PawnAfflictionComponent");
		return ptr;
	}


	void PushAffliction(class UPawnAffliction* affliction);
	void PopAffliction(class UPawnAffliction* affliction);
	void OnRep_NetworkedAfflictions();
	void OnDeath(class UHealthComponentBase* HealthComponent);
};


// Class FSD.PlayerAfflictionComponent
// 0x0050 (0x01C0 - 0x0170)
class UPlayerAfflictionComponent : public UPawnAfflictionComponent
{
public:
	struct FScriptMulticastDelegate                    OnAfflictionActivatedEvent;                               // 0x0170(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAfflictionDeactivatedEvent;                             // 0x0180(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OverlayChangedDelegate;                                   // 0x0190(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UTexture2D*                                  FP_ScreenOverlay;                                         // 0x01A0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FLinearColor                                FP_OverlayColor;                                          // 0x01A8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TWeakObjectPtr<class APlayerCharacter>             Character;                                                // 0x01B8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerAfflictionComponent");
		return ptr;
	}


	void SetPlayerOverlay(class UTexture2D* Texture, const struct FLinearColor& Color);
	void HideOverlay();
};


// Class FSD.EnemyPawnAfflictionComponent
// 0x0000 (0x0170 - 0x0170)
class UEnemyPawnAfflictionComponent : public UPawnAfflictionComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyPawnAfflictionComponent");
		return ptr;
	}

};


// Class FSD.DeepPatherFinderCharacterAfflictionComponent
// 0x0008 (0x0178 - 0x0170)
class UDeepPatherFinderCharacterAfflictionComponent : public UPawnAfflictionComponent
{
public:
	class ADeepPathfinderCharacter*                    Character;                                                // 0x0170(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DeepPatherFinderCharacterAfflictionComponent");
		return ptr;
	}

};


// Class FSD.StaticObjectAfflictionComponent
// 0x0008 (0x0178 - 0x0170)
class UStaticObjectAfflictionComponent : public UPawnAfflictionComponent
{
public:
	class UStaticMeshComponent*                        Mesh;                                                     // 0x0170(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StaticObjectAfflictionComponent");
		return ptr;
	}

};


// Class FSD.AnimatedObjectAfflictionComponent
// 0x0008 (0x0178 - 0x0170)
class UAnimatedObjectAfflictionComponent : public UPawnAfflictionComponent
{
public:
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x0170(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AnimatedObjectAfflictionComponent");
		return ptr;
	}

};


// Class FSD.PawnStat
// 0x0008 (0x0038 - 0x0030)
class UPawnStat : public UDataAsset
{
public:
	float                                              StartingValue;                                            // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EPawnStatType                                      PawnStatType;                                             // 0x0034(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EPawnStatType                                      ValueModificationType;                                    // 0x0035(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0036(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PawnStat");
		return ptr;
	}

};


// Class FSD.PawnStatsComponent
// 0x0018 (0x0108 - 0x00F0)
class UPawnStatsComponent : public UActorComponent
{
public:
	TArray<struct FPawnStatEntry>                      Stats;                                                    // 0x00F0(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Transient)
	bool                                               UseDormancy;                                              // 0x0100(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0101(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PawnStatsComponent");
		return ptr;
	}


	void RemoveModifier(class UPawnStat* Stat, float Value);
	float GetStatValue(class UPawnStat* Stat);
	void ChangeModifier(class UPawnStat* Stat, float CurrentValue, float NewValue);
	int AddModifier(class UPawnStat* Stat, float Value);
};


// Class FSD.PerkLogic
// 0x0000 (0x00F0 - 0x00F0)
class UPerkLogic : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PerkLogic");
		return ptr;
	}


	void StartLogic(int Rank);
	class APlayerCharacter* GetCharacter();
	struct FText GetAdditionalText(int Rank);
};


// Class FSD.PhotographyStateComponent
// 0x0000 (0x0128 - 0x0128)
class UPhotographyStateComponent : public UCharacterStateComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PhotographyStateComponent");
		return ptr;
	}

};


// Class FSD.PillarSettings
// 0x0038 (0x0068 - 0x0030)
class UPillarSettings : public UDataAsset
{
public:
	TArray<struct FPillarSegment>                      PillarSegments;                                           // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	struct FRandRange                                  PointRange;                                               // 0x0040(0x0008) (CPF_Edit)
	struct FRandRange                                  PointNoiseRange;                                          // 0x0048(0x0008) (CPF_Edit)
	struct FRandRange                                  PillarRangeScale;                                         // 0x0050(0x0008) (CPF_Edit)
	struct FRandRange                                  PillarNoiseRangeScale;                                    // 0x0058(0x0008) (CPF_Edit)
	class UFloodFillSettings*                          Noise;                                                    // 0x0060(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PillarSettings");
		return ptr;
	}

};


// Class FSD.PillarGenerationComponent
// 0x0020 (0x0580 - 0x0560)
class UPillarGenerationComponent : public UGenerationComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0560(0x0008) MISSED OFFSET
	bool                                               Visible;                                                  // 0x0568(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0569(0x0007) MISSED OFFSET
	class UPillarSettings*                             PillarSettings;                                           // 0x0570(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0578(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PillarGenerationComponent");
		return ptr;
	}

};


// Class FSD.PillarGenerationItem
// 0x0008 (0x0338 - 0x0330)
class APillarGenerationItem : public AGenerationItem
{
public:
	class UPillarGenerationComponent*                  PillarComponent;                                          // 0x0330(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PillarGenerationItem");
		return ptr;
	}

};


// Class FSD.PlaceableItem
// 0x0020 (0x0468 - 0x0448)
class APlaceableItem : public AAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0448(0x0008) MISSED OFFSET
	class UCapacityHoldingItemAggregator*              Capacity;                                                 // 0x0450(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UItemPlacerAggregator*                       ItemPlacer;                                               // 0x0458(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UClass*                                      PlacableClass;                                            // 0x0460(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlaceableItem");
		return ptr;
	}


	void Server_SpawnItem(const struct FVector& Location);
	void ReceiveItemSpawned(class AActor* SpawnedActor);
	void OnCarriedAmountChanged(int newAmount);
};


// Class FSD.PlanetZoneSetup
// 0x0010 (0x0040 - 0x0030)
class UPlanetZoneSetup : public UDataAsset
{
public:
	TArray<class UPlanetZone*>                         PlanetZones;                                              // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlanetZoneSetup");
		return ptr;
	}


	class UPlanetZone* GetPlanetZoneForBiome(class UBiome* Biome);
};


// Class FSD.PlanetZone
// 0x0038 (0x0068 - 0x0030)
class UPlanetZone : public UDataAsset
{
public:
	TArray<class UBiome*>                              Biomes;                                                   // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<struct FRequiredMissionItem>                RequiredMissions;                                         // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	bool                                               MustBeUnLocked;                                           // 0x0050(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	struct FGuid                                       SavegameID;                                               // 0x0054(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlanetZone");
		return ptr;
	}


	bool IsUnlocked(class UFSDSaveGame* SaveGame);
};


// Class FSD.PlayerAnimInstance
// 0x00C0 (0x0420 - 0x0360)
class UPlayerAnimInstance : public UAnimInstance
{
public:
	bool                                               IsFirstPerson;                                            // 0x0360(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0361(0x0007) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x0368(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UParticleSystem*                             DefaultFootstepParticle;                                  // 0x0370(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   DefaultFootStepSound;                                     // 0x0378(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UItemCharacterAnimationSet*                  AnimationSetA;                                            // 0x0380(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UItemCharacterAnimationSet*                  AnimationSetB;                                            // 0x0388(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               AnimationSetAIsPrimary;                                   // 0x0390(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	ECharacterState                                    CharacterState;                                           // 0x0391(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0392(0x0002) MISSED OFFSET
	float                                              Speed;                                                    // 0x0394(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              WalkRate;                                                 // 0x0398(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              Direction;                                                // 0x039C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FRotator                                    AimRotation;                                              // 0x03A0(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              Pitch;                                                    // 0x03AC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsInAir;                                                  // 0x03B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsMoving;                                                 // 0x03B1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsSprinting;                                              // 0x03B2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsAiming;                                                 // 0x03B3(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsAlive;                                                  // 0x03B4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsLyingDown;                                              // 0x03B5(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsLookingAtMap;                                           // 0x03B6(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x03B7(0x0001) MISSED OFFSET
	int                                                DanceMove;                                                // 0x03B8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsDancing;                                                // 0x03BC(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x03BD(0x0003) MISSED OFFSET
	float                                              CropBeard;                                                // 0x03C0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x03C4(0x0004) MISSED OFFSET
	class UAnimMontage*                                ActiveUseMontage;                                         // 0x03C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UUseAnimationSetting*                        CurrentUseSetting;                                        // 0x03D0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UAnimMontage*                                EndUseMontageToPlay;                                      // 0x03D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              AimDuration;                                              // 0x03E0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ReviveProgress;                                           // 0x03E4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0xC];                                       // 0x03E8(0x000C) MISSED OFFSET
	float                                              IdleTimeForInspect;                                       // 0x03F4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RepeatDealayForInspect;                                   // 0x03F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ECharacterMoveDirection                            CharacterMoveDirection;                                   // 0x03FC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x03FD(0x0003) MISSED OFFSET
	float                                              MoveAdjustmentAngle;                                      // 0x0400(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0404(0x0004) MISSED OFFSET
	class UItemCharacterAnimationSet*                  CarryAnimationSet;                                        // 0x0408(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UItemCharacterAnimationSet*                  DefaultAnimationSet;                                      // 0x0410(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0x8];                                       // 0x0418(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerAnimInstance");
		return ptr;
	}


	bool StopUseMontage();
	void StopInspectWeapon();
	void StartInspectWeapon();
	void SetAiming();
	void PlayUseMontages(class UUseAnimationSetting* useSetting);
	bool IsAllowedToPlayMovementAnimation(bool aInvert);
	class UItemCharacterAnimationSet* GetAnimationSet();
};


// Class FSD.PlayerFPAnimInstance
// 0x0060 (0x0480 - 0x0420)
class UPlayerFPAnimInstance : public UPlayerAnimInstance
{
public:
	struct FRotator                                    WeaponRecoil;                                             // 0x0420(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              HeadBobScale;                                             // 0x042C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              WeaponSwayRecoverySpeed;                                  // 0x0430(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              WeaponSwayAlphaRecoverySpeed;                             // 0x0434(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRotator                                    WeaponSwayAngle;                                          // 0x0438(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              WeaponSwayMaxAngle;                                       // 0x0444(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRotator                                    CameraAntiSwayAngle;                                      // 0x0448(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              WeaponSwayAlpha;                                          // 0x0454(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              WeaponSwayToApply;                                        // 0x0458(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     CameraOffset;                                             // 0x045C(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     NegativeCameraOffset;                                     // 0x0468(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0474(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerFPAnimInstance");
		return ptr;
	}

};


// Class FSD.PlayerTPAnimInstance
// 0x0070 (0x0490 - 0x0420)
class UPlayerTPAnimInstance : public UPlayerAnimInstance
{
public:
	float                                              RigidBodyBlend;                                           // 0x0420(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               RigidBodyOn;                                              // 0x0424(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0425(0x0003) MISSED OFFSET
	float                                              UpperBodyBlend;                                           // 0x0428(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              AimingValue;                                              // 0x042C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FRotator                                    CounerMoveadjustmentAngleRotator;                         // 0x0430(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               FullBodyAnimActive;                                       // 0x043C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x043D(0x0003) MISSED OFFSET
	float                                              FullBodyBlendTime;                                        // 0x0440(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              BodyTurnRecoverySpeed;                                    // 0x0444(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BodyTurnMaxAngle;                                         // 0x0448(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BodyTurnLerpEXP;                                          // 0x044C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TurnAnimationDuration;                                    // 0x0450(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0454(0x000C) MISSED OFFSET
	bool                                               IsResettingBodyTurn;                                      // 0x0460(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0461(0x0003) MISSED OFFSET
	struct FRotator                                    BodyTurn;                                                 // 0x0464(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRotator                                    CounterBodyTurn;                                          // 0x0470(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               TurningLeft;                                              // 0x047C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               TurningRight;                                             // 0x047D(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x047E(0x0002) MISSED OFFSET
	float                                              TurnProgress;                                             // 0x0480(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               HasPickedUpItem;                                          // 0x0484(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0xB];                                       // 0x0485(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerTPAnimInstance");
		return ptr;
	}


	void SetOverrideFullBody(bool overrideEnabled);
	class UAnimSequence* GetTPSprint();
	class UAnimSequence* GetTPLookForward_Aim();
	class UAnimSequence* GetTPLookForward();
	class UAnimSequence* GetTPJumpStart_Aim();
	class UAnimSequence* GetTPJumpStart();
	class UAnimSequence* GetTPJumpLoop_Aim();
	class UAnimSequence* GetTPJumpLoop();
	class UAnimSequence* GetTPIdle();
	class UAnimSequence* GetTPDowned_Aim();
	class UAnimSequence* GetTPDowned();
	ECharacterAnimSet GetAnimationSetType();
};


// Class FSD.PlayerCharacter
// 0x06D0 (0x0E10 - 0x0740)
class APlayerCharacter : public ACharacter
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0740(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCameraModeChanged;                                      // 0x0750(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDownCameraTargetChanged;                                // 0x0760(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActionHoldProgress;                                     // 0x0770(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnJumpPressed;                                            // 0x0780(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnJumpReleased;                                           // 0x0790(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSecondaryFirePressed;                                   // 0x07A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSecondaryFireReleased;                                  // 0x07B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnManualMiningBegin;                                      // 0x07C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnManualMiningEnd;                                        // 0x07D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLaserPointerPressed;                                    // 0x07E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLaserPointerReleased;                                   // 0x07F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFlareThrown;                                            // 0x0800(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDropItem;                                               // 0x0810(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUpdateMeshes;                                           // 0x0820(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOpenChat;                                               // 0x0830(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAcceptInvite;                                           // 0x0840(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRejectInvite;                                           // 0x0850(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIgnoreInvite;                                           // 0x0860(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnToggleOutline;                                          // 0x0870(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnToggleMapTool;                                          // 0x0880(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnToggleScanTool;                                         // 0x0890(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDepthChanged;                                           // 0x08A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterStateChanged;                                  // 0x08B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDamagedEnemy;                                           // 0x08C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLaserPointerEvent;                                      // 0x08D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSecondaryLaserPointerEvent;                             // 0x08E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSaluteEvent;                                            // 0x08F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerShout;                                            // 0x0900(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReviveCallEvent;                                        // 0x0910(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRevivedOtherCharacter;                                  // 0x0920(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHeadlightOnChanged;                                     // 0x0930(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCallDonkey;                                             // 0x0940(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FGameplayTagContainer                       GameplayTags;                                             // 0x0950(0x0020) (CPF_Edit, CPF_BlueprintVisible)
	class UZipLineStateComponent*                      ZipLineStateComponent;                                    // 0x0970(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FDownCameraSettings                         DownCameraSettings;                                       // 0x0978(0x0018) (CPF_Edit)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0990(0x0008) MISSED OFFSET
	TArray<TWeakObjectPtr<class AArmorRegeneratorActor>> ActiveShieldGenerators;                                   // 0x0998(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	struct FGuid                                       SavegameID;                                               // 0x09A8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     EstimatedVelocity;                                        // 0x09B8(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x09C4(0x000C) MISSED OFFSET
	struct FHoldButton                                 FlareHeadlightButton;                                     // 0x09D0(0x0028) (CPF_Edit)
	struct FHoldButton                                 CycleItemButton;                                          // 0x09F8(0x0028) (CPF_Edit)
	struct FHoldButton                                 ToggleHUDButton;                                          // 0x0A20(0x0028) (CPF_Edit)
	float                                              EquipLaserpointerHoldDuration;                            // 0x0A48(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsPressingMovementInputKey;                               // 0x0A4C(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x1B];                                      // 0x0A4D(0x001B) MISSED OFFSET
	class UPlayerCharacterID*                          characterID;                                              // 0x0A68(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      TutorialManagerType;                                      // 0x0A70(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USkeletalMeshComponent*                      FPMesh;                                                   // 0x0A78(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UCameraComponent*                            FirstPersonCamera;                                        // 0x0A80(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneComponent*                             FirstPersonRoot;                                          // 0x0A88(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UCharacterIntoxicationComponent*             IntoxicationComponent;                                    // 0x0A90(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UMissionStatsCollector*                      MissionStatsCollector;                                    // 0x0A98(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USpringArmComponent*                         ThirdPersonSpringArm;                                     // 0x0AA0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UCameraComponent*                            ThirdPersonCamera;                                        // 0x0AA8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UPointLightComponent*                        ThirdPersonLight;                                         // 0x0AB0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USpringArmComponent*                         FollowSpringArm;                                          // 0x0AB8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UCameraComponent*                            FollowCamera;                                             // 0x0AC0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UCameraComponent*                            DownCamera;                                               // 0x0AC8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UCharacterCameraController*                  CameraController;                                         // 0x0AD0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UPlayerHealthComponent*                      HealthComponent;                                          // 0x0AD8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UInventoryComponent*                         InventoryComponent;                                       // 0x0AE0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UCharacterUseComponent*                      UseComponent;                                             // 0x0AE8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USingleUsableComponent*                      UsableComponent;                                          // 0x0AF0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UOutlineComponent*                           OutlineComponent;                                         // 0x0AF8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UTrailComponent*                             TrailComponent;                                           // 0x0B00(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UCharacterRecoilComponent*                   RecoilComponent;                                          // 0x0B08(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UStatusEffectsComponent*                     StatusEffectsComponent;                                   // 0x0B10(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UPawnStatsComponent*                         PawnStatsComponent;                                       // 0x0B18(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UPlayerAfflictionComponent*                  PawnAfflictionComponent;                                  // 0x0B20(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UAttackerPositioningComponent*               AttackerPositioningComponent;                             // 0x0B28(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UCommunicationComponent*                     CommunicationComponent;                                   // 0x0B30(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneComponent*                             TerrainScannerRoot;                                       // 0x0B38(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneCaptureComponent2D*                    TerrainScannerCapture;                                    // 0x0B40(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UUseAnimationSetting*                        TerrainScannerUseAnimation;                               // 0x0B48(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UPlayerTemperatureComponent*                 TemperatureComponent;                                     // 0x0B50(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              TerrainScannerStartAngle;                                 // 0x0B58(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                TerrainScannerZoomDirection;                              // 0x0B5C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TerrainScannerScale;                                      // 0x0B60(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0B64(0x0004) MISSED OFFSET
	class UPlayerReactiveTerrainTrackerComponent*      ReactiveTerrainTracker;                                   // 0x0B68(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              RunningSpeed;                                             // 0x0B70(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsPlayableCharacter;                                      // 0x0B74(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0B75(0x0003) MISSED OFFSET
	class UAudioComponent*                             SprintSoundComponent;                                     // 0x0B78(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USoundCue*                                   SpringSound;                                              // 0x0B80(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FAnalogAimSettings                          AimSettings;                                              // 0x0B88(0x0040) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	float                                              DownedCameraMinPitch;                                     // 0x0BC8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DownedCameraMaxPitch;                                     // 0x0BCC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DownedCameraTurnDirection;                                // 0x0BD0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TurnToFaceScannerAngularSpeed;                            // 0x0BD4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DelayedTerrainScannerScale;                               // 0x0BD8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              DelayedTerrainScannerZoom;                                // 0x0BDC(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              CarryingMovementSpeedPenalty;                             // 0x0BE0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CarryingMaxFallVelocity;                                  // 0x0BE4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TMap<unsigned char, class UCharacterStateComponent*> CharacterStates;                                          // 0x0BE8(0x0050) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)
	TWeakObjectPtr<class ATutorialManager>             TutorialManager;                                          // 0x0C38(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UCharacterStateComponent*                    ActiveCharacterState;                                     // 0x0C40(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               IsInDropPod;                                              // 0x0C48(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsInEscapePod;                                            // 0x0C49(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x0C4A(0x0002) MISSED OFFSET
	float                                              ButtonMemoryDuration;                                     // 0x0C4C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsRunning;                                                // 0x0C50(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0C51(0x0003) MISSED OFFSET
	float                                              ForwardInput;                                             // 0x0C54(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              RightInput;                                               // 0x0C58(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0xC];                                       // 0x0C5C(0x000C) MISSED OFFSET
	float                                              StoppedRunningTime;                                       // 0x0C68(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              ShoutPressedTime;                                         // 0x0C6C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               bIsUsingItemPressed;                                      // 0x0C70(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               bIsUsingPressed;                                          // 0x0C71(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData09[0x2];                                       // 0x0C72(0x0002) MISSED OFFSET
	float                                              UsingDelay;                                               // 0x0C74(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               HeadLightOn;                                              // 0x0C78(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               isUsing;                                                  // 0x0C79(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsLookingAtMap;                                           // 0x0C7A(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData10[0x1];                                       // 0x0C7B(0x0001) MISSED OFFSET
	float                                              JumpPressedTime;                                          // 0x0C7C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               CanMove;                                                  // 0x0C80(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               CanAim;                                                   // 0x0C81(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               CanUseItem;                                               // 0x0C82(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               CanChangeItems;                                           // 0x0C83(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               CanMine;                                                  // 0x0C84(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsStandingDown;                                           // 0x0C85(0x0001) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               InDanceRange;                                             // 0x0C86(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData11[0x1];                                       // 0x0C87(0x0001) MISSED OFFSET
	int                                                DanceMove;                                                // 0x0C88(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	ECharacterCameraMode                               CameraMode;                                               // 0x0C8C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsInCharacterSelectionWorld;                              // 0x0C8D(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData12[0x2];                                       // 0x0C8E(0x0002) MISSED OFFSET
	float                                              IdleTime;                                                 // 0x0C90(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x0C94(0x0004) MISSED OFFSET
	class UAnimMontage*                                FPSaluteMontage;                                          // 0x0C98(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                TPSaluteMontage;                                          // 0x0CA0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                FPDrinkSalute;                                            // 0x0CA8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                TPDrinkSalute;                                            // 0x0CB0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            SaluteShout;                                              // 0x0CB8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            DrinkShout;                                               // 0x0CC0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                CurrentSaluteMontage;                                     // 0x0CC8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               UpdateMapToolActors;                                      // 0x0CD0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData14[0x7];                                       // 0x0CD1(0x0007) MISSED OFFSET
	TArray<class UMaterialInterface*>                  CachedMaterials;                                          // 0x0CD8(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData15[0x10];                                      // 0x0CE8(0x0010) MISSED OFFSET
	struct FHeroInfo                                   HeroInfo;                                                 // 0x0CF8(0x0080) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FString                                     SteamClassID;                                             // 0x0D78(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	class UMaterialInstanceDynamic*                    RadarMaterialInstance;                                    // 0x0D88(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                RadarMaterialAngleParameterIndex;                         // 0x0D90(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     LastUpdateVisibiltyPos;                                   // 0x0D94(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData16[0x8];                                       // 0x0DA0(0x0008) MISSED OFFSET
	class UCharacterStateComponent*                    NextCharacterState;                                       // 0x0DA8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData17[0x8];                                       // 0x0DB0(0x0008) MISSED OFFSET
	bool                                               PlayerIsLeavingInDroppod;                                 // 0x0DB8(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData18[0x13];                                      // 0x0DB9(0x0013) MISSED OFFSET
	struct FCameraSpringSettings                       CameraSpringSettings;                                     // 0x0DCC(0x003C) (CPF_Edit)
	unsigned char                                      UnknownData19[0x8];                                       // 0x0E08(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerCharacter");
		return ptr;
	}


	void UseZipLine(class AZipLineProjectile* zipline, const struct FVector& Start, const struct FVector& End);
	void Unparalyze();
	void ToggleScanTool(bool Visible);
	void ToggleMapTool(bool Visible);
	void ToggleHUDReleased();
	void ToggleHUDPressed();
	void ToggleHeadLight();
	void ThrowGrenade();
	void ThrowFlareReleased();
	void ThrowFlarePressed();
	void ThrowFlare();
	void StartTutorials(bool ResetTutorials);
	void SetStandingDown(bool StandingDown);
	void SetRadarMaterialInstance(class UMaterialInstanceDynamic* matInstance);
	void SetOutsideShieldGenerator(class AArmorRegeneratorActor* Shield);
	void SetIsCharacterSelectionModel();
	void SetInsideShieldGenerator(class AArmorRegeneratorActor* Shield);
	void SetInCharacterSelectionWorld();
	void SetHeadLight(bool on);
	void SetCameraMode(ECharacterCameraMode NewCameraMode);
	void Server_ThrowCarriedItem(const struct FVector_NetQuantizeNormal& Force);
	void Server_StartSalute(class UAnimMontage* startSalute);
	void Server_SetUsing(bool characterIsUsing);
	void Server_SetRunning(bool characterIsRunning);
	void Server_SetIsPressingMovementInput(bool aIsPushingInput);
	void Server_SetIslookingAtMap(bool lookingAtMap);
	void Server_SetIsJumpPressed(bool InJumpPressed);
	void Server_SetClientReady();
	void Server_CallDonkey();
	void SendLevelUpStatistics(int currentRank);
	void ReviveProgress(float Progress);
	void RejectInvite();
	void ReceiveOnHeadlightOn();
	void Paralyze();
	void OpenChat();
	void OnResourceFull(class UCappedResource* Resource);
	void OnRep_IsStandingDown();
	void OnRep_IsLookingAtMap();
	void OnRep_HeadLightOn();
	void OnRep_DanceMove();
	void OnRep_CharacterState(class UCharacterStateComponent* OldState);
	void OnItemEquipped(class AItem* Item);
	void OnCharacterUsed(class APlayerCharacter* user);
	void MouseWheelUp();
	void MouseWheelDown();
	bool LockIfState(ECharacterState LockIf, ECharacterState LockTo, bool canMoveAndAim);
	void JumpRelease();
	void JumpPress();
	bool IsWithinDistance(class AActor* Source, float distance);
	bool IsWalking();
	bool IsStateActive(ECharacterState State);
	bool IsSaluting();
	bool IsParalyzed();
	bool IsMovementInputPressed();
	bool IsMining();
	bool IsLyingDown();
	bool IsJumpPressed();
	bool IsInState(ECharacterState aState);
	bool IsFrozen();
	bool IsFirstPerson();
	bool IsDown();
	bool IsAlive();
	void IgnoreInvite();
	bool HasBeenRevived();
	class UTrailComponent* GetTrailComponent();
	class UPlayerTPAnimInstance* GetTPAnimInstance();
	float GetTimeSinceLastRevival();
	ECharacterState GetPreviousState();
	class AFSDPlayerState* GetPlayerState();
	struct FString GetPlayerName();
	class AFSDPlayerController* GetPlayerController();
	struct FString GetLoadoutAnalyticsString();
	class UInventoryList* GetInventoryList();
	struct FText GetHeroName();
	class UTexture2D* GetHeroIcon();
	struct FLinearColor GetHeroColor();
	class UPlayerFPAnimInstance* GetFPAnimInstance();
	class APlayerCharacter* GetDownCameraTarget();
	class USceneComponent* GetDownCameraRotationPoint();
	class USceneComponent* GetDownCameraAttachPoint();
	ECharacterState GetCurrentState();
	float GetClassXP();
	class UCharacterGearComponent* GetCharacterGear();
	float GetBeginRevivedProgress();
	struct FString GetAnalyticsClass();
	struct FVector GetActorGroundLocation();
	TArray<class AArmorRegeneratorActor*> GetActiveShieldGenerators();
	class UPlayerAnimInstance* GetActiveAnimInstance();
	void ForceIsPressingMovementInputKey();
	void CycleItemReleased();
	void CycleItemPressed();
	void Client_TargetDamaged(class UObject* EnemyHealth, float Damage, float DamageModifier, float HealthRemaining);
	void CheatRevive();
	void CheatGodMode();
	void ChangeState(ECharacterState NewState);
	void ChangeIfDifferentState(ECharacterState NewState);
	void BP_OnUpdateMeshes();
	void BP_OnControllerReady();
	void All_StartSalute(class UAnimMontage* saluteMontage);
	void All_ShowImpactEffects(class UParticleSystem* Particles, const struct FVector_NetQuantize& Location, const struct FVector_NetQuantizeNormal& Orientation);
	float AddClassXP(float Amount);
	void AcceptInvite();
};


// Class FSD.PlayerCharacterFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UPlayerCharacterFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerCharacterFunctionLibrary");
		return ptr;
	}


	static bool SetPlayerVoiceMuted(class UObject* WorldContextObject, class AFSDPlayerState* PlayerState, bool Mute, bool TrySystemWide, int LocalUserNum);
	static bool IsPlayerVoiceMuted(class UObject* WorldContextObject, class AFSDPlayerState* PlayerState, int LocalUserNum);
	static class APlayerCharacter* GetRandomPlayer(class UObject* WorldContextObject, bool MustBeAlive, bool MustNotBeParalyzed);
	static class APlayerCharacter* GetNearestVisiblePlayer(class AActor* From, float MaxDistance, bool MustBeAlive, bool MustNotBeParalyzed);
	static class APlayerCharacter* GetNearestPlayerToPosition(class UObject* WorldContextObject, const struct FVector& Position, float MaxDistance, bool MustBeAlive, bool MustBeUnparalyzed, bool XYOnly);
	static class APlayerCharacter* GetNearestPlayerFrom(class UWorld* World, const struct FVector& From, float MaxDistance, bool MustBeAlive, bool MustBeUnparalyzed, bool XYOnly);
	static class APlayerCharacter* GetNearestPlayer(class AActor* From, float MaxDistance, bool MustBeAlive, bool MustBeUnparalyzed, bool XYOnly);
};


// Class FSD.PlayerCharacterID
// 0x0038 (0x0068 - 0x0030)
class UPlayerCharacterID : public UDataAsset
{
public:
	struct FGuid                                       SavegameID;                                               // 0x0030(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TSoftObjectPtr<class UClass>                       Character;                                                // 0x0040(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerCharacterID");
		return ptr;
	}


	class UClass* GetCharacterClass();
	class APlayerCharacter* GetCharacter();
};


// Class FSD.PlayerHealthComponent
// 0x00D8 (0x0318 - 0x0240)
class UPlayerHealthComponent : public UHealthComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0240(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFullHealthCannotHeal;                                   // 0x0248(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHealedFromCrystalEvent;                                 // 0x0258(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHealthRegeneratingChanged;                              // 0x0268(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0278(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayerHit;                                              // 0x0288(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	float                                              MaxHealth;                                                // 0x0298(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxArmor;                                                 // 0x029C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ArmorDamage;                                              // 0x02A0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x02A4(0x0004) MISSED OFFSET
	float                                              ReviveArmorReturnRatio;                                   // 0x02A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              HealthPerCrystalVolume;                                   // 0x02AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FHealthRegenerationParams                   HealthRegeneration;                                       // 0x02B0(0x0010) (CPF_Edit)
	class UCurveFloat*                                 ArmorRegenCurve;                                          // 0x02C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ShieldRegenDelay;                                         // 0x02C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x02CC(0x0004) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x02D0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UParticleSystem*                             GenericImpactParticles;                                   // 0x02D8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              InvulnerabilityDuration;                                  // 0x02E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              IronWillCooldown;                                         // 0x02E4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      IronWillStatusEffect;                                     // 0x02E8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ReviveInvulnerabilityTime;                                // 0x02F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x24];                                      // 0x02F4(0x0024) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerHealthComponent");
		return ptr;
	}


	void OnRep_MaxHealth();
	void OnRep_MaxArmor();
	void OnRep_ArmorDamage(float oldDamage);
	bool GetIsHealthRegenerating();
	float GetHealthRegeneratingTargetRatio();
	void Client_SetHealthRegenerating(bool isRegenerating);
	void Client_HealthFullCannotHeal();
};


// Class FSD.PlayerMovementComponent
// 0x0030 (0x0750 - 0x0720)
class UPlayerMovementComponent : public UCharacterMovementComponent
{
public:
	bool                                               DebugFastMove;                                            // 0x0720(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0721(0x0007) MISSED OFFSET
	class USoundBase*                                  SlidingOnIceSound;                                        // 0x0728(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              MovementPenalty;                                          // 0x0730(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C];                                      // 0x0734(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerMovementComponent");
		return ptr;
	}

};


// Class FSD.PlayerProximityTracker
// 0x0048 (0x0138 - 0x00F0)
class UPlayerProximityTracker : public UActorComponent
{
public:
	float                                              MaxDistanceBetweenPlayers;                                // 0x00F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PlayerSpheresUpdateRatePerSecond;                         // 0x00F4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<struct FPlayerSphere>                       PlayerSpheres;                                            // 0x00F8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	TArray<struct FProximityTriggerItem>               LocalPlayerProximityTriggers;                             // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<struct FProximityTriggerItem>               AnyPlayerProximityTriggers;                               // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0128(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerProximityTracker");
		return ptr;
	}


	static void Receive_RegisterForLocalPlayerProximity(class UObject* WorldContextObject, const struct FVector& Location, float distance, const struct FScriptDelegate& proximityCallback, bool triggerOnlyOnce);
	static void Receive_RegisterForAnyPlayerProximity(class UObject* WorldContextObject, const struct FVector& Location, float distance, const struct FScriptDelegate& proximityCallback, bool triggerOnlyOnce);
	struct FPlayerSphere GetPrimarySphere();
	TArray<struct FPlayerSphere> GetPlayerSpheres();
};


// Class FSD.PlayerRejoinState
// 0x0070 (0x0160 - 0x00F0)
class UPlayerRejoinState : public UActorComponent
{
public:
	class UClass*                                      CharacterClass;                                           // 0x00F0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x68];                                      // 0x00F8(0x0068) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerRejoinState");
		return ptr;
	}


	void Server_AddIntValue(const struct FGuid& ItemKey, const struct FName& ValueKey, int Value);
	void Server_AddFloatValue(const struct FGuid& ItemKey, const struct FName& ValueKey, float Value);
	void Client_SetValues(TArray<struct FRejoinFloat> floatValues, TArray<struct FRejoinInt> intValues);
};


// Class FSD.ResourcesComponent
// 0x0058 (0x0148 - 0x00F0)
class UResourcesComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnResourceChanged;                                        // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResourceIncreased;                                      // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResourceFull;                                           // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResourceAdded;                                          // 0x0120(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	TArray<class UCappedResource*>                     resources;                                                // 0x0130(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor)
	float                                              ResourceCap;                                              // 0x0140(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0144(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ResourcesComponent");
		return ptr;
	}


	void ResourceIncreased(class UCappedResource* Resource, float Delta);
	void ResourceFull(class UCappedResource* Resource);
	void ResourceChanged(class UCappedResource* Resource, float currentAmount);
	void OnRep_Resources();
	static int GetXPFromResourceMap(TMap<class UResourceData*, float> resources);
	int GetXpFromMining();
	class UCappedResource* GetResource(class UResourceData* Data, bool createIfAmountIsZero);
	float GetCapacityPct();
	TArray<class UCappedResource*> GetAllResources();
};


// Class FSD.PlayerResourceComponent
// 0x0000 (0x0148 - 0x0148)
class UPlayerResourceComponent : public UResourcesComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerResourceComponent");
		return ptr;
	}


	static class UPlayerResourceComponent* GetFromPlayer(class APlayerCharacter* PlayerCharacter);
};


// Class FSD.TemperatureComponent
// 0x0010 (0x0100 - 0x00F0)
class UTemperatureComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TemperatureComponent");
		return ptr;
	}


	static bool TryPushHeatSource(class AActor* Target, float Temperature, ETemperatureIntensity Intensity);
	static bool TryPopHeatSource(class AActor* Target, float Temperature, ETemperatureIntensity Intensity);
	void ChangeTemperature(float Degrees, class AActor* Source);
};


// Class FSD.PlayerTemperatureComponent
// 0x00A0 (0x01A0 - 0x0100)
class UPlayerTemperatureComponent : public UTemperatureComponent
{
public:
	struct FScriptMulticastDelegate                    OnTemperatureChanged;                                     // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTemperatureStateChanged;                                // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTemperatureChangeRate;                                  // 0x0120(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDefrosting;                                             // 0x0130(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBarVisibilityChanged;                                   // 0x0140(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	float                                              MinimumTemperature;                                       // 0x0150(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaximumTemperature;                                       // 0x0154(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DefrostTemperature;                                       // 0x0158(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BurnTemperature;                                          // 0x015C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DouseFireTemperature;                                     // 0x0160(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TemperaturRegainSpeed;                                    // 0x0164(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DefrostingRequired;                                       // 0x0168(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              NormalTemperature;                                        // 0x016C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              CurrentTemperature;                                       // 0x0170(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              TargetTemperature;                                        // 0x0174(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0178(0x0008) MISSED OFFSET
	int8_t                                             TemperatureChangeSpeed;                                   // 0x0180(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0181(0x0003) MISSED OFFSET
	float                                              DefrostProgress;                                          // 0x0184(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsPlayerOnFire;                                           // 0x0188(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               barVisible;                                               // 0x0189(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x018A(0x0006) MISSED OFFSET
	class APlayerCharacter*                            Character;                                                // 0x0190(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	EPlayerTemperatureState                            TemperatureState;                                         // 0x0198(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0199(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerTemperatureComponent");
		return ptr;
	}


	void SetNormalTemperature();
	void SetFrozenTemperature();
	void OnRep_TemperatureState(EPlayerTemperatureState OldState);
	void OnRep_TemperatureChangeSpeed(int8_t OldSpeed);
	void OnRep_DefrostProgress();
	void OnRep_CurrentTemperature(float OldTemperature);
	void OnDeath(class UHealthComponentBase* Health);
	int GetTemperatureChangedSpeed();
	float GetDefrostProgress();
	float GetCurrentTemperatureNormalized();
	void Defrost(float Amount);
};


// Class FSD.PlayerTriggerBox
// 0x0050 (0x0380 - 0x0330)
class APlayerTriggerBox : public ATriggerBox
{
public:
	struct FScriptMulticastDelegate                    OnPlayerEntered;                                          // 0x0330(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerExited;                                           // 0x0340(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllPlayersEntered;                                      // 0x0350(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllPlayersExited;                                       // 0x0360(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	TArray<class APlayerCharacter*>                    PlayersInside;                                            // 0x0370(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerTriggerBox");
		return ptr;
	}


	void TriggerBoxPlayerEvent__DelegateSignature(class APlayerCharacter* Player);
	void TriggerBoxEvent__DelegateSignature();
	bool IsAnyPlayerInside(bool excludingDeadPlayers);
	void BP_OnPlayerExited(class APlayerCharacter* Player);
	void BP_OnPlayerEntered(class APlayerCharacter* Player);
	void BP_OnAllPlayersExited();
	void BP_OnAllPlayersEntered();
	bool AreAllPlayersInside(bool excludingDeadPlayers);
};


// Class FSD.PostProcessingManager
// 0x0030 (0x0358 - 0x0328)
class APostProcessingManager : public AActor
{
public:
	TArray<TWeakObjectPtr<class AFSDPostProcessingActor>> RegisteredActors;                                         // 0x0328(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<struct FPostProcessingBlendable>            CurrentBlendables;                                        // 0x0338(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<class UMaterialInstanceDynamic*>            Materials;                                                // 0x0348(0x0010) (CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PostProcessingManager");
		return ptr;
	}

};


// Class FSD.CaveInfluencer
// 0x0000 (0x0030 - 0x0030)
class UCaveInfluencer : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CaveInfluencer");
		return ptr;
	}

};


// Class FSD.ProceduralSettings
// 0x0008 (0x0038 - 0x0030)
class UProceduralSettings : public UDataAsset
{
public:
	class UDebrisPositioning*                          SecretRoomPositioning;                                    // 0x0030(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ProceduralSettings");
		return ptr;
	}

};


// Class FSD.FakePhysicsProjectile
// 0x00B8 (0x0468 - 0x03B0)
class AFakePhysicsProjectile : public AProjectileBase
{
public:
	struct FFakeMoverState                             MoverState;                                               // 0x03B0(0x0060) (CPF_Edit, CPF_BlueprintVisible)
	struct FFakeMoveState                              posVel;                                                   // 0x0410(0x0024) (CPF_Net, CPF_Transient)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0434(0x0004) MISSED OFFSET
	class UFakeMoverSettings*                          MoveSettings;                                             // 0x0438(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              InitialSpeed;                                             // 0x0440(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DampOmega;                                                // 0x0444(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              SyncTime;                                                 // 0x0448(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C];                                      // 0x044C(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FakePhysicsProjectile");
		return ptr;
	}


	void SphereBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnRep_PosVel(const struct FFakeMoveState& posVel);
};


// Class FSD.LineCutterProjectile
// 0x0140 (0x04F8 - 0x03B8)
class ALineCutterProjectile : public AProjectile
{
public:
	struct FScaledEffect                               EletricHitEffect;                                         // 0x03B8(0x0010) (CPF_Edit)
	struct FScaledEffect                               ProjectileDisappearEffect;                                // 0x03C8(0x0010) (CPF_Edit, CPF_BlueprintVisible)
	float                                              SwipeRadius;                                              // 0x03D8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DoubleLineDistanceMultiplier;                             // 0x03DC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              OverlapRadius;                                            // 0x03E0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               DestroyOnTerrainCollision;                                // 0x03E4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsDead;                                                   // 0x03E5(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EImpactDecalSize                                   EletricDecalSize;                                         // 0x03E6(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EImpactDecalSize                                   ImpactDecalSize;                                          // 0x03E7(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x40];                                      // 0x03E8(0x0040) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnLineDestroy;                                            // 0x0428(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLineSetMaxSize;                                         // 0x0438(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLineMuliMaxSize;                                        // 0x0448(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLineLifespanEnd;                                        // 0x0458(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLineAddMaxSize;                                         // 0x0468(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPerformHit;                                             // 0x0478(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLineEffectHide;                                         // 0x0488(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FVector                                     LeftLastPosition;                                         // 0x0498(0x000C) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector                                     RightLastPosition;                                        // 0x04A4(0x000C) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ShouldExplode;                                            // 0x04B0(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               OnlyOne;                                                  // 0x04B1(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsDoubleLine;                                             // 0x04B2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x04B3(0x0001) MISSED OFFSET
	float                                              LineMaxSize;                                              // 0x04B4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              LineExpansionDelay;                                       // 0x04B8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TimeToLineExpansion;                                      // 0x04BC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FireRate;                                                 // 0x04C0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x04C4(0x0004) MISSED OFFSET
	class UCapsuleComponent*                           LineCollider;                                             // 0x04C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDamageComponent*                            DamageComponent;                                          // 0x04D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x20];                                      // 0x04D8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.LineCutterProjectile");
		return ptr;
	}


	void TerrainSweep(const struct FVector& Left, const struct FVector& Right);
	void SpawnDecal(struct FHitResult* Result);
	void Server_RemoveDebris(int instance, int Component);
	void PerformHit__DelegateSignature(const struct FHitResult& Result);
	void LineSetMaxSize__DelegateSignature(float MaxSize, float MaxSizeVisual);
	void LineMuliMaxSize__DelegateSignature(float Multiplier);
	void LineLifeSpanDestroy__DelegateSignature();
	void LineEffectHide__DelegateSignature();
	void LineDestroy__DelegateSignature(const struct FHitResult& Result);
	void LineAddMaxSize__DelegateSignature(float Size);
	void Fire(const struct FVector& Origin, const struct FVector& Direction, float distance);
};


// Class FSD.ExplosionBaseComponent
// 0x0010 (0x0100 - 0x00F0)
class UExplosionBaseComponent : public UActorComponent
{
public:
	float                                              CarveDiameterCM;                                          // 0x00F0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CarveNoiseCM;                                             // 0x00F4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CarveBurnThicknessCM;                                     // 0x00F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ExplosionBaseComponent");
		return ptr;
	}


	void DamageOnly(const struct FVector& Location, const struct FName& BoneName, class UPrimitiveComponent* Target, class UPhysicalMaterial* PhysicalMaterial, class UDamageComponent* DamageComponent);
	void DamageArmorClients(class AActor* Target, const struct FName& BoneName, class UDamageComponent* DamageComponent);
	void DamageAndCarve(const struct FVector& Location, const struct FName& BoneName, class UPrimitiveComponent* Target, class UPhysicalMaterial* PhysicalMaterial, class UDamageComponent* DamageComponent);
};


// Class FSD.ExplosionComponent
// 0x0000 (0x0100 - 0x0100)
class UExplosionComponent : public UExplosionBaseComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ExplosionComponent");
		return ptr;
	}

};


// Class FSD.ProjectileExplosion
// 0x0028 (0x0128 - 0x0100)
class UProjectileExplosion : public UExplosionBaseComponent
{
public:
	struct FScaledEffect                               ExplosionEffect;                                          // 0x0100(0x0010) (CPF_Edit)
	class USoundCue*                                   ExplosionSound;                                           // 0x0110(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UForceFeedbackEffect*                        ForceFeedbackEffect;                                      // 0x0118(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UForceFeedbackAttenuation*                   ForceFeedbackAttanuation;                                 // 0x0120(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ProjectileExplosion");
		return ptr;
	}


	void SpawnEffects(const struct FVector& Location, const struct FVector& Normal);
};


// Class FSD.ProjectileLauncherBaseComponent
// 0x0028 (0x0158 - 0x0130)
class UProjectileLauncherBaseComponent : public UWeaponFireComponent
{
public:
	struct FScriptMulticastDelegate                    OnProjectileSpawned;                                      // 0x0130(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	TArray<class UItemUpgrade*>                        ProjectileUpgrades;                                       // 0x0140(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	float                                              ArcStartAngle;                                            // 0x0150(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0154(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ProjectileLauncherBaseComponent");
		return ptr;
	}


	void Server_StopFire();
	void Server_Fire(const struct FVector& Origin, const struct FVector_NetQuantizeNormal& Direction);
	void ProjectileSpawned__DelegateSignature(class AProjectileBase* Projectile);
	void All_ShowHit();
};


// Class FSD.ProjectileLauncherComponent
// 0x0008 (0x0160 - 0x0158)
class UProjectileLauncherComponent : public UProjectileLauncherBaseComponent
{
public:
	class UClass*                                      projectileClass;                                          // 0x0158(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ProjectileLauncherComponent");
		return ptr;
	}


	void SetProjectileClass(class UClass* NewProjectileClass);
};


// Class FSD.ChargedProjectileLauncherComponent
// 0x0010 (0x0168 - 0x0158)
class UChargedProjectileLauncherComponent : public UProjectileLauncherBaseComponent
{
public:
	class UClass*                                      NormalProjectileClass;                                    // 0x0158(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      ChargedProjectileClass;                                   // 0x0160(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ChargedProjectileLauncherComponent");
		return ptr;
	}

};


// Class FSD.RadarPointComponent
// 0x0020 (0x0110 - 0x00F0)
class URadarPointComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnRemove;                                                 // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	float                                              PointPriority;                                            // 0x0100(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	class UClass*                                      WidgetClass;                                              // 0x0108(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RadarPointComponent");
		return ptr;
	}


	static void MapToRadarPosition(const struct FVector& playerPos, const struct FVector& playerForward, const struct FVector& Pos, bool snap, struct FVector* radarPos, float* Alpha);
};


// Class FSD.NetworkedRadarPointComponent
// 0x0000 (0x0110 - 0x0110)
class UNetworkedRadarPointComponent : public URadarPointComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.NetworkedRadarPointComponent");
		return ptr;
	}

};


// Class FSD.RandomSelectorItem
// 0x0008 (0x0338 - 0x0330)
class ARandomSelectorItem : public AGenerationItem
{
public:
	int                                                Min;                                                      // 0x0330(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                Max;                                                      // 0x0334(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RandomSelectorItem");
		return ptr;
	}

};


// Class FSD.RandRangeFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class URandRangeFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RandRangeFunctionLibrary");
		return ptr;
	}


	static int GetValueFromStream(const struct FIRandRange& RandRange, struct FRandomStream* RandomStream);
	static float GetFloatValue(const struct FRandRange& RandRange);
	static float GetFloatFromStream(const struct FRandRange& RandRange, struct FRandomStream* RandomStream);
};


// Class FSD.RandIntervalFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class URandIntervalFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RandIntervalFunctionLibrary");
		return ptr;
	}


	static float GetFloatValue(const struct FRandInterval& RandInterval);
};


// Class FSD.RDGComponent
// 0x0010 (0x0100 - 0x00F0)
class URDGComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnDetonated;                                              // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RDGComponent");
		return ptr;
	}

};


// Class FSD.RDGLauncher
// 0x0010 (0x0698 - 0x0688)
class ARDGLauncher : public AAmmoDrivenWeapon
{
public:
	TArray<class URDGComponent*>                       ActiveGrenades;                                           // 0x0688(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RDGLauncher");
		return ptr;
	}


	void Server_DetonateAll();
	void RegisterGrenade(class URDGComponent* Grenade);
};


// Class FSD.ReactiveTerrain
// 0x0000 (0x0028 - 0x0028)
class UReactiveTerrain : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ReactiveTerrain");
		return ptr;
	}


	void Receive_OnActorLeft(class UStatusEffectsComponent* StatusEffects);
	void Receive_OnActorEntered(class UStatusEffectsComponent* StatusEffects);
};


// Class FSD.ReactiveTerrainTrackerComponent
// 0x0000 (0x00F0 - 0x00F0)
class UReactiveTerrainTrackerComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ReactiveTerrainTrackerComponent");
		return ptr;
	}

};


// Class FSD.PlayerReactiveTerrainTrackerComponent
// 0x0008 (0x00F8 - 0x00F0)
class UPlayerReactiveTerrainTrackerComponent : public UReactiveTerrainTrackerComponent
{
public:
	class UFSDPhysicalMaterial*                        CurrentPhysicalMaterial;                                  // 0x00F0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerReactiveTerrainTrackerComponent");
		return ptr;
	}

};


// Class FSD.PathfinderReactiveTerrainTrackerComponent
// 0x0020 (0x0110 - 0x00F0)
class UPathfinderReactiveTerrainTrackerComponent : public UReactiveTerrainTrackerComponent
{
public:
	struct FRandRange                                  CheckInterval;                                            // 0x00F0(0x0008) (CPF_Edit)
	class UFSDPhysicalMaterial*                        CurrentPhysicalMaterial;                                  // 0x00F8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UStatusEffectsComponent*                     StatusEffectsComponent;                                   // 0x0100(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0108(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PathfinderReactiveTerrainTrackerComponent");
		return ptr;
	}

};


// Class FSD.RecallableActor
// 0x0070 (0x04A8 - 0x0438)
class ARecallableActor : public ADeepPathfinderCharacter
{
public:
	struct FScriptMulticastDelegate                    OnStateChanged;                                           // 0x0438(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReturnFinish;                                           // 0x0448(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRelocateFinished;                                       // 0x0458(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	float                                              AcceptanceRadius;                                         // 0x0468(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AutoRecallDistance;                                       // 0x046C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RelocateLandingHeight;                                    // 0x0470(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0474(0x0004) MISSED OFFSET
	class UClass*                                      RelocationMarkerType;                                     // 0x0478(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TWeakObjectPtr<class AActor>                       RecallTarget;                                             // 0x0480(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	ERecallableActorState                              State;                                                    // 0x0488(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0489(0x0003) MISSED OFFSET
	struct FVector                                     RelocateLocation;                                         // 0x048C(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               RelocateLanded;                                           // 0x0498(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0499(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       RelocationMarker;                                         // 0x049C(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               bInitialized;                                             // 0x04A4(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x04A5(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RecallableActor");
		return ptr;
	}


	void SetRecallTarget(class AActor* NewTarget);
	void Relocate(const struct FVector& NewLocation);
	void ReceiveOnStateChanged();
	void RecallableActorStateChanged__DelegateSignature(class ARecallableActor* Sender, ERecallableActorState State);
	void Recall();
	void OnReturnSucceeded();
	void OnReturnFailed();
	void OnRep_State(ERecallableActorState OldState);
	void OnRep_RecallTarget();
	void OnRelocated();
	void OnRecallTargetChanged(class AActor* NewTarget);
	void OnPathFinished(bool success);
	void OnMoving();
	void OnMoveRequested();
	void OnMoveFinished(bool returnedHome);
	bool GetIsReturning();
	bool GetIsMovingOrMoveRequested();
	bool GetIsMoving();
	bool GetIsMoveRequested();
	void BeginMove();
};


// Class FSD.RecallableItem
// 0x0020 (0x0468 - 0x0448)
class ARecallableItem : public AAnimatedItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0448(0x0008) MISSED OFFSET
	class UClass*                                      ItemType;                                                 // 0x0450(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<TWeakObjectPtr<class ARecallableActor>>     ActiveItems;                                              // 0x0458(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RecallableItem");
		return ptr;
	}


	void ServerSpawnItem(const struct FVector& Location, const struct FRotator& Rotation);
	void ReceiveOnItemSpawned(class ARecallableActor* Item);
	void OnRep_ActiveItems();
	void ItemReturnFinished(class AActor* Item, bool success);
	bool CanSpawnItem(const struct FVector& Location, const struct FRotator& Rotation);
};


// Class FSD.SentryGun
// 0x0178 (0x04A0 - 0x0328)
class ASentryGun : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnEnabledChanged;                                         // 0x0338(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAmmoCountChanged;                                       // 0x0348(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMaxAmmoCountChanged;                                    // 0x0358(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class USceneComponent*                             TurretRoot;                                               // 0x0368(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UClass*                                      projectileClass;                                          // 0x0370(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<struct FOverlapResult>                      OverlapCache;                                             // 0x0378(0x0010) (CPF_ZeroConstructor)
	class USoundCue*                                   ShootingSound;                                            // 0x0388(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             MuzzleFlash;                                              // 0x0390(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             Tracer;                                                   // 0x0398(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinTracerDistance;                                        // 0x03A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03A4(0x0004) MISSED OFFSET
	class USceneComponent*                             BarrelTransform;                                          // 0x03A8(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneComponent*                             BodyTransform;                                            // 0x03B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               Enabled;                                                  // 0x03B8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x17];                                      // 0x03B9(0x0017) MISSED OFFSET
	int                                                AmmoCount;                                                // 0x03D0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                MaxAmmoCount;                                             // 0x03D4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AquisitionRange;                                          // 0x03D8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RotationSpeed;                                            // 0x03DC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ShotCoolDown;                                             // 0x03E0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TargetLeading;                                            // 0x03E4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                BurstCount;                                               // 0x03E8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BurstShotCoolDown;                                        // 0x03EC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              IdleScanAngle;                                            // 0x03F0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              IdleScanSpeed;                                            // 0x03F4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FinalShotFadeOut;                                         // 0x03F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03FC(0x0004) MISSED OFFSET
	class USoundBase*                                  AudioOnTurn;                                              // 0x0400(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FGameplayTagContainer                       DissallowedTargetTags;                                    // 0x0408(0x0020) (CPF_Edit)
	float                                              Damage;                                                   // 0x0428(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TargetYaw;                                                // 0x042C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              TargetPitch;                                              // 0x0430(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TWeakObjectPtr<class UHealthComponentBase>         LastTarget;                                               // 0x0434(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x1C];                                      // 0x043C(0x001C) MISSED OFFSET
	class UWeaponFireComponent*                        WeaponFire;                                               // 0x0458(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x30];                                      // 0x0460(0x0030) MISSED OFFSET
	class UAudioComponent*                             ShootingAudioComponent;                                   // 0x0490(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0498(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SentryGun");
		return ptr;
	}


	void UseAmmo(int Amount);
	void OnRep_TargetYaw();
	void OnRep_TargetPitch();
	void OnRep_MaxAmmoCount(int OldCount);
	void OnRep_LastTarget();
	void OnRep_AmmoCount(int OldCount);
	void OnProjectileFired(const struct FVector& Location);
	int GetMaxAmmoCount();
	float GetAmmoLeftPct();
	int GetAmmoLeft();
	void EnabledChanged__DelegateSignature(bool IsEnabled);
	void AmmoSpent();
};


// Class FSD.RedeployableSentryGun
// 0x0050 (0x04F0 - 0x04A0)
class ARedeployableSentryGun : public ASentryGun
{
public:
	struct FScriptMulticastDelegate                    OnStateChanged;                                           // 0x04A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDeployFinished;                                         // 0x04B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDismantleFinished;                                      // 0x04C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UActorTrackingComponent*                     ActorTrackingIcon;                                        // 0x04D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UOutlineComponent*                           Outline;                                                  // 0x04D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	TWeakObjectPtr<class APlayerCharacter>             SentryGunOwner;                                           // 0x04E0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               bOutlineAndIconVisible;                                   // 0x04E8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ERedeployableSentryGunState                        State;                                                    // 0x04E9(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x04EA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RedeployableSentryGun");
		return ptr;
	}


	void ToggleOutlineAndIcon(bool Visible);
	void SetSentryGunOwner(class APlayerCharacter* Character);
	void ReceiveOnUpgraded(TArray<class UItemUpgrade*> upgrades);
	void ReceiveOnStateChanged();
	void ReceiveOnSentryGunOwnerChanged();
	void ReceiveOnDismantled();
	void ReceiveOnDismantle();
	void ReceiveOnDeployed();
	void ReceiveOnDeploy();
	void OnStateChanged__DelegateSignature(class ARedeployableSentryGun* Sender, ERedeployableSentryGunState NewState);
	void OnRep_State(ERedeployableSentryGunState OldState);
	void OnRep_SentryGunOwner();
	void OnDismantleFinished__DelegateSignature();
	void OnDeployFinished__DelegateSignature();
	bool GetIsDismantled();
	bool GetIsDeployed();
	float GetDeployProgress();
	float GetAnimDuration(class USkeletalMeshComponent* Mesh);
	void DismantleFinished();
	void Dismantle();
	void DeployFinished();
	void Deploy();
	void ActivateSpecialAttack();
};


// Class FSD.ResourceBank
// 0x0068 (0x0180 - 0x0118)
class UResourceBank : public UUsableComponentBase
{
public:
	struct FScriptMulticastDelegate                    OnBeginDeposite;                                          // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDepositing;                                             // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndDeposite;                                            // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	bool                                               OpenForDeposit;                                           // 0x0148(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0149(0x0007) MISSED OFFSET
	class AFSDGameState*                               GameState;                                                // 0x0150(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              DepositesPerSecond;                                       // 0x0158(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DepositeAmount;                                           // 0x015C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0160(0x0008) MISSED OFFSET
	class USoundBase*                                  AudioBeginDepositing;                                     // 0x0168(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundBase*                                  AudioDepositing;                                          // 0x0170(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundBase*                                  AudioEndDepositing;                                       // 0x0178(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ResourceBank");
		return ptr;
	}


	void ResourceBankEvent__DelegateSignature();
	void All_Depositing(class APlayerCharacter* Character);
};


// Class FSD.ResourceCreator
// 0x0000 (0x0030 - 0x0030)
class UResourceCreator : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ResourceCreator");
		return ptr;
	}

};


// Class FSD.VeinResourceCreator
// 0x0048 (0x0078 - 0x0030)
class UVeinResourceCreator : public UResourceCreator
{
public:
	class UVeinResourceData*                           Resource;                                                 // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDebrisPositioning*                          Positioning;                                              // 0x0038(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	ECarveFilterType                                   CarveType;                                                // 0x0040(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              SegmentMaxDot;                                            // 0x0044(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              VeinWorldHorizontalMaxDot;                                // 0x0048(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              VeinWorldHorizontalMinDot;                                // 0x004C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRandRange                                  VeinLength;                                               // 0x0050(0x0008) (CPF_Edit)
	class UFloodFillSettings*                          Noise;                                                    // 0x0058(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Range;                                                    // 0x0060(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              NoiseRange;                                               // 0x0064(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UDebrisBase*>                         VeinDebris;                                               // 0x0068(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.VeinResourceCreator");
		return ptr;
	}

};


// Class FSD.PatchResourceCreator
// 0x0040 (0x0070 - 0x0030)
class UPatchResourceCreator : public UResourceCreator
{
public:
	class UDebrisPositioning*                          Positioning;                                              // 0x0030(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	ECarveFilterType                                   CarveType;                                                // 0x0038(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	class UFloodFillSettings*                          PatchNoise;                                               // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          CarverNoise;                                              // 0x0048(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Range;                                                    // 0x0050(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              NoiseRange;                                               // 0x0054(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              NoiseScale;                                               // 0x0058(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Size;                                                     // 0x005C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UDebrisBase*>                         VeinDebris;                                               // 0x0060(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PatchResourceCreator");
		return ptr;
	}

};


// Class FSD.CarvedResourceCreator
// 0x0068 (0x0098 - 0x0030)
class UCarvedResourceCreator : public UResourceCreator
{
public:
	class UCarvedResourceData*                         Resource;                                                 // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ScaleToResourceDistribution;                              // 0x0038(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	class UDebrisPositioning*                          Positioning;                                              // 0x0040(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FIRandRange                                 NumCarvers;                                               // 0x0048(0x0008) (CPF_Edit)
	float                                              ExpensiveNoise;                                           // 0x0050(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CarveOffsetRadius;                                        // 0x0054(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      SpawnAttachClass;                                         // 0x0058(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AttachSpawnOffsetDistance;                                // 0x0060(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	class UTerrainMaterial*                            TerrainMaterial;                                          // 0x0068(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ECarveFilterType                                   Filter;                                                   // 0x0070(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ECarveOptionsCellSize                              CarveCellSize;                                            // 0x0071(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0072(0x0006) MISSED OFFSET
	TArray<struct FUDebrisCarveMesh>                   Meshes;                                                   // 0x0078(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<struct FResourceDebris>                     Debris;                                                   // 0x0088(0x0010) (CPF_Edit, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CarvedResourceCreator");
		return ptr;
	}

};


// Class FSD.CreditsResourceData
// 0x0000 (0x00D0 - 0x00D0)
class UCreditsResourceData : public UResourceData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CreditsResourceData");
		return ptr;
	}

};


// Class FSD.VeinResourceData
// 0x0018 (0x00E8 - 0x00D0)
class UVeinResourceData : public UResourceData
{
public:
	class UTerrainMaterial*                            TerrainMaterial;                                          // 0x00D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              UnitsPerLenth;                                            // 0x00D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ScaleToResourceDistribution;                              // 0x00DC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00DD(0x0003) MISSED OFFSET
	class UVeinResourceCreator*                        ResourceCreator;                                          // 0x00E0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.VeinResourceData");
		return ptr;
	}

};


// Class FSD.CarvedResourceData
// 0x0010 (0x00E0 - 0x00D0)
class UCarvedResourceData : public UResourceData
{
public:
	class UCarvedResourceCreator*                      ResourceCreator;                                          // 0x00D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              UnitsPerCarver;                                           // 0x00D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CarvedResourceData");
		return ptr;
	}

};


// Class FSD.CollectableResourceData
// 0x0040 (0x0110 - 0x00D0)
class UCollectableResourceData : public UResourceData
{
public:
	class UDebrisPositioning*                          Positioning;                                              // 0x00D0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              Rarity;                                                   // 0x00D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              InfluenceRadius;                                          // 0x00DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UDebrisBase*>                         Debris;                                                   // 0x00E0(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor)
	TArray<TSoftObjectPtr<class UClass>>               CollectableClasses;                                       // 0x00F0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<class UClass*>                              CollectableClassesLoaded;                                 // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CollectableResourceData");
		return ptr;
	}

};


// Class FSD.ResourceChunk
// 0x0020 (0x0348 - 0x0328)
class AResourceChunk : public AActor
{
public:
	class USimpleObjectInfoComponent*                  InfoComponent;                                            // 0x0328(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              ResourceAmount;                                           // 0x0330(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0334(0x0004) MISSED OFFSET
	class USoundCue*                                   PickupSound;                                              // 0x0338(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UResourceData*                               ResourceData;                                             // 0x0340(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ResourceChunk");
		return ptr;
	}

};


// Class FSD.BaseResource
// 0x0000 (0x0030 - 0x0030)
class UBaseResource : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BaseResource");
		return ptr;
	}

};


// Class FSD.ResourceObjective
// 0x0048 (0x01B0 - 0x0168)
class UResourceObjective : public UResourceBasedObjective
{
public:
	class UResourceData*                               Resource;                                                 // 0x0168(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ResourcesRequired;                                        // 0x0170(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ResourcesCollected;                                       // 0x0174(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              ResourceBuffer;                                           // 0x0178(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RoundToNearest;                                           // 0x017C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FText                                       ObjectivesText;                                           // 0x0180(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       CreditsRewardText;                                        // 0x0198(0x0018) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ResourceObjective");
		return ptr;
	}


	void OnResourceChanged(class UCappedResource* CappedResource, float Amount);
	void OnRep_ResourcesCollected(float prevAmount);
	float GetRequiredAmount(float missionScaling);
};


// Class FSD.RessuplyPod
// 0x0068 (0x0390 - 0x0328)
class ARessuplyPod : public AActor
{
public:
	float                                              KillRadius;                                               // 0x0328(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DropHeight;                                               // 0x032C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DropDelay;                                                // 0x0330(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MissionShoutDelay;                                        // 0x0334(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            DialogOrderAccepted;                                      // 0x0338(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            DialogPodArrived;                                         // 0x0340(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0348(0x0008) MISSED OFFSET
	class UDialogDataAsset*                            CurrentMissionShout;                                      // 0x0350(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     StartLocation;                                            // 0x0358(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     TargetLocation;                                           // 0x0364(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	ERessuplyPodState                                  State;                                                    // 0x0370(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0371(0x0003) MISSED OFFSET
	float                                              TargetDropTime;                                           // 0x0374(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0378(0x0008) MISSED OFFSET
	class UCurveFloat*                                 DropCurve;                                                // 0x0380(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class AActor*                                      PlayerSpawnPoint;                                         // 0x0388(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RessuplyPod");
		return ptr;
	}


	void OnTunnelBLocked();
	void OnRep_State();
	void OnDropStarted();
	void OnDroppodImpact();
	static class AActor* DropToTarget(class UObject* WorldContextObject, class UClass* podClass, const struct FVector& Location, class APlayerCharacter* Requester);
};


// Class FSD.RessuplyPodItem
// 0x0060 (0x04A8 - 0x0448)
class ARessuplyPodItem : public AAnimatedItem
{
public:
	class UClass*                                      ResupplyBeacon;                                           // 0x0448(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      ItemPlacerClass;                                          // 0x0450(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UItemPlacerAggregator*                       ItemPlacerInstance;                                       // 0x0458(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UClass*                                      SupplyPodClass;                                           // 0x0460(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                ResourceCost;                                             // 0x0468(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x046C(0x0004) MISSED OFFSET
	struct FText                                       OrderDescription;                                         // 0x0470(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	struct FText                                       LogText;                                                  // 0x0488(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	float                                              Cooldown;                                                 // 0x04A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CooldownRemaining;                                        // 0x04A4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RessuplyPodItem");
		return ptr;
	}


	void Server_Call_Resupply(const struct FVector& Location);
	int GetResourceCost();
	class UItemPlacerAggregator* GetActiveAggregator();
};


// Class FSD.Reward
// 0x0000 (0x0030 - 0x0030)
class UReward : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Reward");
		return ptr;
	}

};


// Class FSD.UnlockReward
// 0x0000 (0x0030 - 0x0030)
class UUnlockReward : public UReward
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.UnlockReward");
		return ptr;
	}

};


// Class FSD.UnlockPlanetZoneReward
// 0x0008 (0x0038 - 0x0030)
class UUnlockPlanetZoneReward : public UUnlockReward
{
public:
	class UPlanetZone*                                 ZoneToUnlock;                                             // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.UnlockPlanetZoneReward");
		return ptr;
	}

};


// Class FSD.UnlockMissionTypeReward
// 0x0008 (0x0038 - 0x0030)
class UUnlockMissionTypeReward : public UUnlockReward
{
public:
	class UMissionTemplate*                            MissionToUnlock;                                          // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.UnlockMissionTypeReward");
		return ptr;
	}

};


// Class FSD.UnlockComplexityReward
// 0x0010 (0x0040 - 0x0030)
class UUnlockComplexityReward : public UUnlockReward
{
public:
	class UMissionTemplate*                            Mission;                                                  // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMissionComplexity*                          Complexity;                                               // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.UnlockComplexityReward");
		return ptr;
	}

};


// Class FSD.UnlockDurationReward
// 0x0010 (0x0040 - 0x0030)
class UUnlockDurationReward : public UUnlockReward
{
public:
	class UMissionTemplate*                            Mission;                                                  // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMissionDuration*                            Duration;                                                 // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.UnlockDurationReward");
		return ptr;
	}

};


// Class FSD.UnlockDifficultyReward
// 0x0008 (0x0038 - 0x0030)
class UUnlockDifficultyReward : public UUnlockReward
{
public:
	class UDifficultySetting*                          Difficulty;                                               // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.UnlockDifficultyReward");
		return ptr;
	}

};


// Class FSD.ResourceReward
// 0x0010 (0x0040 - 0x0030)
class UResourceReward : public UReward
{
public:
	class UResourceData*                               Resource;                                                 // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                Amount;                                                   // 0x0038(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ResourceReward");
		return ptr;
	}

};


// Class FSD.WeeklyResourceReward
// 0x0010 (0x0040 - 0x0030)
class UWeeklyResourceReward : public UReward
{
public:
	int                                                ResourceCount;                                            // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FIRandRange                                 Amount;                                                   // 0x0034(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.WeeklyResourceReward");
		return ptr;
	}


	TMap<class UResourceData*, float> GetRewards(class AFSDPlayerController* Player);
};


// Class FSD.RetirementReward
// 0x0008 (0x0038 - 0x0030)
class URetirementReward : public UUnlockReward
{
public:
	class UPlayerCharacterID*                          characterID;                                              // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RetirementReward");
		return ptr;
	}

};


// Class FSD.ItemBlueprintReward
// 0x0028 (0x0058 - 0x0030)
class UItemBlueprintReward : public UUnlockReward
{
public:
	TSoftObjectPtr<class UClass>                       ItemToUnlock;                                             // 0x0030(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ItemBlueprintReward");
		return ptr;
	}


	class AActor* GetActorDefaultObject();
	class UClass* GetActorClass();
};


// Class FSD.SkinUnlock
// 0x0008 (0x0038 - 0x0030)
class USkinUnlock : public UUnlockReward
{
public:
	class UItemSkin*                                   Skin;                                                     // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SkinUnlock");
		return ptr;
	}

};


// Class FSD.PermanentItemUpgradeReward
// 0x0010 (0x0040 - 0x0030)
class UPermanentItemUpgradeReward : public UUnlockReward
{
public:
	class UClass*                                      Item;                                                     // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UItemUpgrade*                                Upgrade;                                                  // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PermanentItemUpgradeReward");
		return ptr;
	}

};


// Class FSD.RewardWidget
// 0x0008 (0x0210 - 0x0208)
class URewardWidget : public UUserWidget
{
public:
	class UReward*                                     Reward;                                                   // 0x0208(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RewardWidget");
		return ptr;
	}

};


// Class FSD.RichTextStylable
// 0x00D0 (0x0438 - 0x0368)
class URichTextStylable : public URichTextBlock
{
public:
	struct FSlateFontInfo                              Font;                                                     // 0x0368(0x0058) (CPF_Edit)
	struct FSlateColor                                 FontColor;                                                // 0x03C0(0x0028) (CPF_Edit)
	TMap<struct FName, struct FTextStyleOverride>      Styles;                                                   // 0x03E8(0x0050) (CPF_Edit, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RichTextStylable");
		return ptr;
	}

};


// Class FSD.RichTextSizable
// 0x0030 (0x0398 - 0x0368)
class URichTextSizable : public URichTextBlock
{
public:
	int                                                DefaultFontSize;                                          // 0x0368(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x036C(0x0004) MISSED OFFSET
	struct FSlateColor                                 DefaultFontColor;                                         // 0x0370(0x0028) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RichTextSizable");
		return ptr;
	}

};


// Class FSD.RoomDecorationObject
// 0x0010 (0x0040 - 0x0030)
class URoomDecorationObject : public UDataAsset
{
public:
	class UDebrisPositioning*                          Positioning;                                              // 0x0030(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	class UClass*                                      Actor;                                                    // 0x0038(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RoomDecorationObject");
		return ptr;
	}

};


// Class FSD.RoomFeature
// 0x0018 (0x0040 - 0x0028)
class URoomFeature : public UObject
{
public:
	TArray<class URoomFeature*>                        RoomFeatures;                                             // 0x0028(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RoomFeature");
		return ptr;
	}

};


// Class FSD.RandomSelector
// 0x0008 (0x0048 - 0x0040)
class URandomSelector : public URoomFeature
{
public:
	int                                                Min;                                                      // 0x0040(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	int                                                Max;                                                      // 0x0044(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RandomSelector");
		return ptr;
	}

};


// Class FSD.FloodFillLine
// 0x0028 (0x0068 - 0x0040)
class UFloodFillLine : public URoomFeature
{
public:
	class UFloodFillSettings*                          WallNoiseOverride;                                        // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	class UFloodFillSettings*                          CeilingNoiseOverride;                                     // 0x0048(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	class UFloodFillSettings*                          FloorNoiseOverride;                                       // 0x0050(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	TArray<struct FRoomLinePoint>                      Points;                                                   // 0x0058(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FloodFillLine");
		return ptr;
	}

};


// Class FSD.FloodFillPillar
// 0x0030 (0x0070 - 0x0040)
class UFloodFillPillar : public URoomFeature
{
public:
	class UFloodFillSettings*                          NoiseOverride;                                            // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	TArray<struct FRandLinePoint>                      Points;                                                   // 0x0048(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst)
	struct FRandRange                                  RangeScale;                                               // 0x0058(0x0008) (CPF_Edit, CPF_EditConst)
	struct FRandRange                                  NoiseRangeScale;                                          // 0x0060(0x0008) (CPF_Edit, CPF_EditConst)
	struct FRandRange                                  EndcapScale;                                              // 0x0068(0x0008) (CPF_Edit, CPF_EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FloodFillPillar");
		return ptr;
	}

};


// Class FSD.FloodFillProceduralPillar
// 0x0018 (0x0058 - 0x0040)
class UFloodFillProceduralPillar : public URoomFeature
{
public:
	TArray<struct FVector>                             Points;                                                   // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst)
	class UPillarSettings*                             PillarSettings;                                           // 0x0050(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FloodFillProceduralPillar");
		return ptr;
	}

};


// Class FSD.FloodFillBox
// 0x0038 (0x0078 - 0x0040)
class UFloodFillBox : public URoomFeature
{
public:
	class UFloodFillSettings*                          Noise;                                                    // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	struct FVector                                     Position;                                                 // 0x0048(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	struct FVector                                     Extends;                                                  // 0x0054(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0060(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	bool                                               IsCarver;                                                 // 0x006C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	float                                              NoiseRange;                                               // 0x0070(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.FloodFillBox");
		return ptr;
	}

};


// Class FSD.EntranceFeature
// 0x0020 (0x0060 - 0x0040)
class UEntranceFeature : public URoomFeature
{
public:
	struct FVector                                     Location;                                                 // 0x0040(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	struct FRotator                                    Direction;                                                // 0x004C(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	ECaveEntranceType                                  EntranceType;                                             // 0x0058(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0059(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EntranceFeature");
		return ptr;
	}

};


// Class FSD.SpawnActorFeature
// 0x0050 (0x0090 - 0x0040)
class USpawnActorFeature : public URoomFeature
{
public:
	struct FVector                                     Location;                                                 // 0x0040(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	class UClass*                                      ActorToSpawn;                                             // 0x0050(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	struct FVector                                     AdjustmentDirection;                                      // 0x0058(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	EItemAdjustmentType                                Adjustment;                                               // 0x0064(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	struct FVector                                     ScaleMin;                                                 // 0x0068(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	struct FVector                                     ScaleMax;                                                 // 0x0074(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	struct FRotator                                    RotationDelta;                                            // 0x0080(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x008C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SpawnActorFeature");
		return ptr;
	}

};


// Class FSD.SubRoomFeature
// 0x0028 (0x0068 - 0x0040)
class USubRoomFeature : public URoomFeature
{
public:
	class URoomGenerator*                              RoomGenerator;                                            // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0048(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0054(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	float                                              Scale;                                                    // 0x0060(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SubRoomFeature");
		return ptr;
	}

};


// Class FSD.DropPodCalldownLocationFeature
// 0x0018 (0x0058 - 0x0040)
class UDropPodCalldownLocationFeature : public URoomFeature
{
public:
	struct FVector                                     Location;                                                 // 0x0040(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	class UClass*                                      CalldownClass;                                            // 0x0050(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DropPodCalldownLocationFeature");
		return ptr;
	}

};


// Class FSD.RoomGeneratorBase
// 0x0028 (0x0058 - 0x0030)
class URoomGeneratorBase : public UDataAsset
{
public:
	float                                              Bounds;                                                   // 0x0030(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	bool                                               CanOnlyBeUsedOnce;                                        // 0x0034(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	ERoomMirroringSupport                              MirrorSupport;                                            // 0x0035(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
	struct FGameplayTagContainer                       RoomTags;                                                 // 0x0038(0x0020) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RoomGeneratorBase");
		return ptr;
	}

};


// Class FSD.RoomGenerator
// 0x0010 (0x0068 - 0x0058)
class URoomGenerator : public URoomGeneratorBase
{
public:
	TArray<class URoomFeature*>                        RoomFeatures;                                             // 0x0058(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RoomGenerator");
		return ptr;
	}

};


// Class FSD.ProceduralRoomGenerator
// 0x0028 (0x0080 - 0x0058)
class UProceduralRoomGenerator : public URoomGeneratorBase
{
public:
	struct FIRandRange                                 RoomCount;                                                // 0x0058(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	float                                              MaxLength;                                                // 0x0060(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxWidth;                                                 // 0x0064(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxHeight;                                                // 0x0068(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	TArray<class URoomPiece*>                          RoomPieces;                                               // 0x0070(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ProceduralRoomGenerator");
		return ptr;
	}

};


// Class FSD.RoomPiece
// 0x0018 (0x0048 - 0x0030)
class URoomPiece : public UDataAsset
{
public:
	class URoomGenerator*                              RoomGenerator;                                            // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	TArray<ERoomPieceSide>                             ConnectedSides;                                           // 0x0038(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RoomPiece");
		return ptr;
	}


	static struct FVector GetDirectionFromPieceSide(ERoomPieceSide side);
};


// Class FSD.RoomGeneratorGroup
// 0x0010 (0x0040 - 0x0030)
class URoomGeneratorGroup : public UDataAsset
{
public:
	TArray<class URoomGenerator*>                      Rooms;                                                    // 0x0030(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RoomGeneratorGroup");
		return ptr;
	}


	static class URoomGenerator* GetRandomRoomWithTags(const struct FGameplayTagQuery& queury, struct FRoomGeneratorGroupInstance* groupInstance, struct FRandomStream* RandomStream);
	class URoomGenerator* GetRandomRoom(struct FRandomStream* RandomStream);
	struct FRoomGeneratorGroupInstance CreateGroupInstance();
};


// Class FSD.RotateToFace
// 0x0020 (0x0260 - 0x0240)
class URotateToFace : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0240(0x0008) MISSED OFFSET
	class AActor*                                      Target;                                                   // 0x0248(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                Face;                                                     // 0x0250(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0254(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RotateToFace");
		return ptr;
	}


	void SetTarget(class AActor* Target);
	void SetShouldFaceAway(bool FaceAway);
};


// Class FSD.SalvageObjective
// 0x00D0 (0x0238 - 0x0168)
class USalvageObjective : public UObjective
{
public:
	int                                                SalvageActorCount;                                        // 0x0168(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x016C(0x0004) MISSED OFFSET
	class UGemResourceData*                            LegResource;                                              // 0x0170(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                LegCountPerActor;                                         // 0x0178(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              LegDistanceToActor;                                       // 0x017C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDebrisPositioning*                          Positioning;                                              // 0x0180(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FInfluenceSphere                            SalvageActorInfluencer;                                   // 0x0188(0x0010) (CPF_Edit)
	TArray<class UDebrisBase*>                         Debris;                                                   // 0x0198(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UClass*                                      SalvageActor;                                             // 0x01A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TSoftObjectPtr<class UClass>                       DamagedPodClass;                                          // 0x01B0(0x0028) (CPF_Edit)
	struct FInfluenceSphere                            DamagedPodInfluencer;                                     // 0x01D8(0x0010) (CPF_Edit)
	class UDebrisPositioning*                          DamagedPodPositioning;                                    // 0x01E8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              DamagedPodMinDistanceToDropZone;                          // 0x01F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01F4(0x0004) MISSED OFFSET
	class AMiningPod*                                  DamagedPod;                                               // 0x01F8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                ActorsToSalvage;                                          // 0x0200(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                ActorsSalvaged;                                           // 0x0204(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                RepairPoints;                                             // 0x0208(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                PointsRepaired;                                           // 0x020C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              MinSalvageActorDistanceToLandingZone;                     // 0x0210(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0214(0x0004) MISSED OFFSET
	TArray<class AActor*>                              SalvagedActors;                                           // 0x0218(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0228(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SalvageObjective");
		return ptr;
	}


	void PointRepaired();
	void OnRep_PointsRepaired();
	void OnRep_ActorsToSalvage(int prevAmount);
	void OnRep_ActorsSalvaged(int prevAmount);
	void OnActorRepaired(class URepairableComponent* repairable);
	static struct FTransform FindDamagedMiningPodLocation(class AProceduralSetup* setup, class UDebrisPositioning* DebrisPositioning, class UClass* terrainPlacement, float avoidanceDistance, TArray<struct FVector> locationsToAvoid);
	void AllActorsSalvaged();
};


// Class FSD.MiniMule
// 0x0000 (0x0438 - 0x0438)
class AMiniMule : public ADeepPathfinderCharacter
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MiniMule");
		return ptr;
	}

};


// Class FSD.SavableObject
// 0x0010 (0x0038 - 0x0028)
class USavableObject : public UObject
{
public:
	struct FGuid                                       SavegameID;                                               // 0x0028(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SavableObject");
		return ptr;
	}

};


// Class FSD.SavableActor
// 0x0010 (0x0338 - 0x0328)
class ASavableActor : public AActor
{
public:
	struct FGuid                                       SavegameID;                                               // 0x0328(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SavableActor");
		return ptr;
	}

};


// Class FSD.SaveGameIDInterface
// 0x0000 (0x0028 - 0x0028)
class USaveGameIDInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SaveGameIDInterface");
		return ptr;
	}

};


// Class FSD.RefundableInterface
// 0x0000 (0x0028 - 0x0028)
class URefundableInterface : public USaveGameIDInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RefundableInterface");
		return ptr;
	}

};


// Class FSD.SaveGameLibrary
// 0x0000 (0x0028 - 0x0028)
class USaveGameLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SaveGameLibrary");
		return ptr;
	}


	static bool TryGetSaveGameSnapShot(class UObject* WorldContext, const struct FString& Filename, int UserIdx, struct FSaveGameSnapShot* OutSnapShot);
	static TMap<struct FString, struct FDateTime> GetUserSaveGameSlots(const struct FString& userId);
	static TMap<struct FString, struct FDateTime> GetAllSaveGameSlots();
};


// Class FSD.SaveGameStateComponent
// 0x0140 (0x0230 - 0x00F0)
class USaveGameStateComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnEquippedPerksChanged;                                   // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemUpgradeCrafted;                                     // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemUpgradeEquipped;                                    // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemUpgradeUnequipped;                                  // 0x0120(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerProgressChanged;                                  // 0x0130(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterStatsChanged;                                  // 0x0140(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCreditsChanged;                                         // 0x0150(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	int                                                Credits;                                                  // 0x0160(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0164(0x0004) MISSED OFFSET
	TArray<struct FSaveGameStatePerkItem>              EquippedPerks;                                            // 0x0168(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	struct FItemLoadout                                EquippedLoadout;                                          // 0x0178(0x0080) (CPF_Transient)
	struct FActiveCampaingMission                      ActiveCampaignMission;                                    // 0x01F8(0x000C) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0204(0x0004) MISSED OFFSET
	TArray<struct FItemUpgradeSelection>               ItemUpgradeSelections;                                    // 0x0208(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Transient)
	struct FPlayerProgress                             PlayerProgress;                                           // 0x0218(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_Transient)
	TArray<struct FCharacterProgress>                  CharacterStats;                                           // 0x0220(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SaveGameStateComponent");
		return ptr;
	}


	void Server_SetPlayerProgress(const struct FPlayerProgress& Progress);
	void Server_SetLoadout(const struct FItemLoadout& Loadout, TArray<struct FItemUpgradeSelection> weaponLoadouts);
	void Server_SetEquippedPerks(TArray<struct FSaveGameStatePerkItem> perks);
	void Server_SetCredits(int Amount);
	void Server_SetCharacterStats(TArray<struct FCharacterProgress> Stats);
	void Server_SetActiveCampaignMission(const struct FActiveCampaingMission& Data);
	void OnRep_PlayerProgress();
	void OnRep_ItemUpgradeSelections();
	void OnRep_Credits();
	void OnRep_CharacterStats();
	void OnRep_ActiveCampaignMission();
	void ItemUpgradeEquipSignature__DelegateSignature(class UClass* itemClass, class UItemUpgrade* Upgrade);
	void ItemUpgradeCraftSignature__DelegateSignature(class UItemUpgrade* Upgrade);
	struct FCharacterProgress GetCharacterStat(class UClass* CharacterClass);
	class UGeneratedMission* GetActiveCampaignMission();
	void CreditsChangedDelegate__DelegateSignature();
};


// Class FSD.SentryAttachment
// 0x0000 (0x0328 - 0x0328)
class ASentryAttachment : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SentryAttachment");
		return ptr;
	}

};


// Class FSD.RecallableSentryGun
// 0x0020 (0x04C8 - 0x04A8)
class ARecallableSentryGun : public ARecallableActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04A8(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSentryIndexChanged;                                     // 0x04B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	int                                                SentryIndex;                                              // 0x04C0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04C4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RecallableSentryGun");
		return ptr;
	}


	void SentryIndexChanged__DelegateSignature(int Index);
	void ReceiveOnSentryReady(class ASentryGun* SentryGun, class APlayerCharacter* PlayerCharacter);
	void OnRep_SentryIndex();
	void GetStateDescription(struct FText* Description);
	class UClass* GetSentryGunClass();
	class ASentryGun* GetSentryGun();
};


// Class FSD.ReloadSentryUsableComponent
// 0x0070 (0x01B0 - 0x0140)
class UReloadSentryUsableComponent : public UUsableComponent
{
public:
	struct FText                                       OutOfAmmoText;                                            // 0x0140(0x0018) (CPF_Edit)
	struct FText                                       AmmoFullText;                                             // 0x0158(0x0018) (CPF_Edit)
	class USoundBase*                                  AudioOutOfAmmo;                                           // 0x0170(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundBase*                                  AudioReloading;                                           // 0x0178(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAudioComponent*                             ReloadingAudioComponent;                                  // 0x0180(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               Usable;                                                   // 0x0188(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bReloading;                                               // 0x0189(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x018A(0x0006) MISSED OFFSET
	class UAudioComponent*                             ReloadAudioComponent;                                     // 0x0190(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              AmmoPerSec;                                               // 0x0198(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x019C(0x0004) MISSED OFFSET
	TWeakObjectPtr<class APlayerCharacter>             OwningPlayerCharacter;                                    // 0x01A0(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class ASentryGun*                                  SentryGun;                                                // 0x01A8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ReloadSentryUsableComponent");
		return ptr;
	}


	void SetOwningPlayerCharacter(class APlayerCharacter* Player);
	void SetCanUse(bool isUsable);
	void OnRep_Reloading();
	void OnReloadAudioFinished();
};


// Class FSD.SentryGunItem
// 0x0010 (0x0478 - 0x0468)
class ASentryGunItem : public APlaceableItem
{
public:
	TArray<class UItemUpgrade*>                        upgrades;                                                 // 0x0468(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SentryGunItem");
		return ptr;
	}

};


// Class FSD.RecallableSentryGunItem
// 0x0070 (0x04D8 - 0x0468)
class ARecallableSentryGunItem : public ARecallableItem
{
public:
	struct FScriptMulticastDelegate                    OnActiveItemsChanged;                                     // 0x0468(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSelectedItemChanged;                                    // 0x0478(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	int                                                MaxSentryCount;                                           // 0x0488(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinDistanceBetweenSentries;                               // 0x048C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FText                                       RecallHoldDescription;                                    // 0x0490(0x0018) (CPF_Edit)
	float                                              RecallHoldDuration;                                       // 0x04A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04AC(0x0004) MISSED OFFSET
	class UCapacityHoldingItemAggregator*              AmmoCapacity;                                             // 0x04B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UItemPlacerAggregator*                       ItemPlacer;                                               // 0x04B8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	TArray<class UItemUpgrade*>                        upgrades;                                                 // 0x04C0(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x04D0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RecallableSentryGunItem");
		return ptr;
	}


	void RecallableSentryGunSignature__DelegateSignature(class ARecallableSentryGun* SentryGun);
	void RecallableSentryGunItemSignature__DelegateSignature(class ARecallableSentryGunItem* Item);
	bool HasAmmoLeft();
	class ARecallableSentryGun* GetSelectedSentryGun();
	TArray<class ARecallableSentryGun*> GetActiveSentryGuns();
	bool AreAllSentriesPlaced();
};


// Class FSD.SessionHandling
// 0x0000 (0x0028 - 0x0028)
class USessionHandling : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SessionHandling");
		return ptr;
	}


	static EUWPBPTrialCheck TrialLicenseCheckStatus(class UObject* WorldContextObject);
	static void StopVoice(class UObject* WorldContextObject);
	static void StartVoice(class UObject* WorldContextObject);
	static void StartTrialLicenseCheck(class UObject* WorldContextObject);
	static bool StartSearchForFriends(int LocalUserNum);
	static void StartMandatoryUpdateCheck(class UObject* WorldContextObject);
	static void ShowStoreUI(class UObject* WorldContextObject);
	static void ShowInviteUI(class UObject* WorldContextObject);
	static EBPUWPMandatoryUpdateCheck MandatoryUpdateCheckStatus(class UObject* WorldContextObject);
	static void JoinOfficialXboxClub(class UObject* WorldContextObject);
	static bool IsVoiceChatting();
	static bool IsInActiveSession();
	static bool IsDisconnectReasonAKick(EDisconnectReason reason);
	static struct FString GetVoiceStatus();
	static struct FText GetSessionJoinError(class UObject* WorldContextObject);
	static bool GetOnlinePlayerName(int LocalUserNum, struct FString* Name);
	static EFSDNATType GetNATType(class UObject* WorldContextObject);
	static struct FString GetLoginStatus(int LocalUserNum);
	static bool GetFriendsList(int LocalUserNum, TArray<struct FFriendInfo>* Players);
	static struct FString GetFriendlyServerName(class UObject* WorldContextObject);
	static bool GetCurrentSessionState(struct FString* sessionState, struct FString* ID);
	static bool FSDUpdateSessionInfo(class UObject* WorldContextObject);
	static EFSDMissionStatus FSDMissionStatus(const struct FBlueprintSessionResult& Result);
	static void FSDListen(class UObject* WorldContextObject);
	static bool FSDIsSessionValid(const struct FBlueprintSessionResult& Result);
	static bool FSDIsPrivateServer(const struct FBlueprintSessionResult& Result);
	static bool FSDIsPasswordRequired(const struct FBlueprintSessionResult& Result);
	static bool FSDIsFullServer(const struct FBlueprintSessionResult& Result);
	static bool FSDIsClassLocked(const struct FBlueprintSessionResult& Result);
	static bool FSDHasGameStarted(const struct FBlueprintSessionResult& Result);
	static bool FSDGetServerStartTime(const struct FBlueprintSessionResult& Result, struct FDateTime* StartTime);
	static struct FString FSDGetServerName(const struct FBlueprintSessionResult& Result);
	static struct FString FSDGetServerID(const struct FBlueprintSessionResult& Result);
	static struct FString FSDGetRegion(const struct FBlueprintSessionResult& Result);
	static TArray<class UClass*> FSDGetPlayerClasses(const struct FBlueprintSessionResult& Result);
	static int FSDGetNumPlayers(const struct FBlueprintSessionResult& Result);
	static int FSDGetMissionSeed(const struct FBlueprintSessionResult& Result);
	static struct FString FSDGetMapName(const struct FBlueprintSessionResult& Result);
	static int FSDGetGlobalMissionSeed(const struct FBlueprintSessionResult& Result);
	static class UDifficultySetting* FSDGetDifficulty(const struct FBlueprintSessionResult& Result);
	static struct FString FSDGetBuildId(const struct FBlueprintSessionResult& Result);
	static bool FSDCancelFindSessions(class UObject* WorldContextObject);
	static bool FindBestQuickJoinServer(class UObject* WorldContextObject, class UDifficultySetting* Difficulty, class UBiome* Biome, class UMissionTemplate* MissionTemplate, TArray<struct FBlueprintSessionResult>* sessions, struct FBlueprintSessionResult* outResult);
	static bool AllowLinkToExternalFeedback(class UObject* WorldContextObject);
};


// Class FSD.SharkEnemy
// 0x0108 (0x0560 - 0x0458)
class ASharkEnemy : public AEnemyDeepPathfinderCharacter
{
public:
	class UPawnSensingComponent*                       PawnSensing;                                              // 0x0458(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USphereComponent*                            CollisionSphere;                                          // 0x0460(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USphereComponent*                            NearTargetSphere;                                         // 0x0468(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UParticleSystemComponent*                    TearingGroundParticles;                                   // 0x0470(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UInDangerComponent*                          Danger;                                                   // 0x0478(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UEnemyComponent*                             EnemyComponent;                                           // 0x0480(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UDamageComponent*                            Damage;                                                   // 0x0488(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneComponent*                             CarryPoint;                                               // 0x0490(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0498(0x0004) MISSED OFFSET
	float                                              DiveForSeconds;                                           // 0x049C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04A0(0x0004) MISSED OFFSET
	struct FVector_NetQuantize                         RagdollImpact;                                            // 0x04A4(0x000C) (CPF_Net, CPF_Transient)
	unsigned char                                      UnknownData02[0x8];                                       // 0x04B0(0x0008) MISSED OFFSET
	float                                              LaunchPower;                                              // 0x04B8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x04BC(0x0008) MISSED OFFSET
	float                                              GrabTime;                                                 // 0x04C4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0xC];                                       // 0x04C8(0x000C) MISSED OFFSET
	float                                              StopSpeedThreshold;                                       // 0x04D4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TiltLimit;                                                // 0x04D8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              UpsideDownTime;                                           // 0x04DC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              RaiseSpeed;                                               // 0x04E0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TiltInSpeed;                                              // 0x04E4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TiltOutSpeed;                                             // 0x04E8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x04EC(0x0004) MISSED OFFSET
	class UFakeMoverSettings*                          SetPhysicsTo;                                             // 0x04F0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AttackDuration;                                           // 0x04F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinJumpCooldown;                                          // 0x04FC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxJumpCooldown;                                          // 0x0500(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              JumpForce;                                                // 0x0504(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TimeBeforeGroundCheck;                                    // 0x0508(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x050C(0x0008) MISSED OFFSET
	float                                              MinCirclingTime;                                          // 0x0514(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxCirclingTime;                                          // 0x0518(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x051C(0x0004) MISSED OFFSET
	class UFakeMoverSettings*                          CircleSetttings;                                          // 0x0520(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFakeMoverSettings*                          AttackSettings;                                           // 0x0528(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFakeMoverSettings*                          PostHitSettings;                                          // 0x0530(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFakeMoverSettings*                          JumpSettings;                                             // 0x0538(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFakeMoverSettings*                          VounerableSettings;                                       // 0x0540(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxInGroundTime;                                          // 0x0548(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinInGroundTime;                                          // 0x054C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              StartParticleTime;                                        // 0x0550(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              EndParticleTime;                                          // 0x0554(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ESharkEnemyState                                   State;                                                    // 0x0558(0x0001) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x0559(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SharkEnemy");
		return ptr;
	}


	void SetVulnerable();
	void OnSeePawn(class APawn* APawn);
	void OnRep_State();
	void OnRep_RagdollImpact();
	void OnRep_DiveTime();
	void OnNearTarget(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnDeath(class UHealthComponentBase* aHealthComponent);
	void OnDamaged(float aAmount);
	void OnCollided(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class FSD.SpiderAnimInstance
// 0x0150 (0x04F0 - 0x03A0)
class USpiderAnimInstance : public UEnemyAnimInstance
{
public:
	struct FScriptMulticastDelegate                    OnIsAttackingChanged;                                     // 0x03A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	float                                              Speed;                                                    // 0x03B0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     Velocity;                                                 // 0x03B4(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              WalkCycleSpeed;                                           // 0x03C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              StartMovingSpeed;                                         // 0x03C4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              StopMovingSpeed;                                          // 0x03C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              WalkCycleMinRate;                                         // 0x03CC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              WalkCyclePlayRate;                                        // 0x03D0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              MeshScale;                                                // 0x03D4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              Direction;                                                // 0x03D8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              PathDirectionLerpSpeedIn;                                 // 0x03DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PathDirectionLerpSpeedOut;                                // 0x03E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PathDirection;                                            // 0x03E4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              HorizontalAngularSpeed;                                   // 0x03E8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              HorizontalAngularSpeed_Abs;                               // 0x03EC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              VerticalAngularSpeed;                                     // 0x03F0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	EMoveDirection                                     MoveDirection;                                            // 0x03F4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsMoving;                                                 // 0x03F5(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsStrafing;                                               // 0x03F6(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsMovingAndStrafing;                                      // 0x03F7(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsAttacking;                                              // 0x03F8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsFrozen;                                                 // 0x03F9(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x03FA(0x0006) MISSED OFFSET
	class UParticleSystem*                             FootstepParticle;                                         // 0x0400(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   FootstepSound;                                            // 0x0408(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FName                                       FootStepLeftBoneName;                                     // 0x0410(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FName                                       FootStepRightBoneName;                                    // 0x0418(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TMap<class UEnemyPlaySoundKey*, class USoundCue*>  PlaySoundByKeyMap;                                        // 0x0420(0x0050) (CPF_Edit, CPF_ZeroConstructor)
	TMap<class UEnemySpawnEffectsKey*, class UParticleSystem*> SpawnEffectsByKeyMap;                                     // 0x0470(0x0050) (CPF_Edit, CPF_ZeroConstructor)
	int                                                RandomWalkCycleIndex;                                     // 0x04C0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04C4(0x0004) MISSED OFFSET
	TArray<struct FRandomWalkCycleEntry>               RandomWalkCycles;                                         // 0x04C8(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UBlackboardComponent*                        Blackboard;                                               // 0x04D8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               TurnToIdle;                                               // 0x04E0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IdleToTurnLeft;                                           // 0x04E1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IdleToTurnRight;                                          // 0x04E2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               TurnToWalk;                                               // 0x04E3(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               WalkToTurnRight;                                          // 0x04E4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               WalkToTurnLeft;                                           // 0x04E5(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0xA];                                       // 0x04E6(0x000A) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SpiderAnimInstance");
		return ptr;
	}


	void SetMeshScale(float NewScale);
};


// Class FSD.SharkAnimInstance
// 0x0010 (0x0500 - 0x04F0)
class USharkAnimInstance : public USpiderAnimInstance
{
public:
	ESharkEnemyState                                   SharkState;                                               // 0x04F0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsCloseToGround;                                          // 0x04F1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               AttackConnected;                                          // 0x04F2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0xD];                                       // 0x04F3(0x000D) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SharkAnimInstance");
		return ptr;
	}

};


// Class FSD.ShootingPlant
// 0x0008 (0x0428 - 0x0420)
class AShootingPlant : public AEnemyPawn
{
public:
	bool                                               IsVisible;                                                // 0x0420(0x0001) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0421(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ShootingPlant");
		return ptr;
	}

};


// Class FSD.ShootingPlantAnimInstance
// 0x0020 (0x03C0 - 0x03A0)
class UShootingPlantAnimInstance : public UEnemyAnimInstance
{
public:
	float                                              Yaw;                                                      // 0x03A0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Pitch;                                                    // 0x03A4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              YawSpeed;                                                 // 0x03A8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PitchSpeed;                                               // 0x03AC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsVisible;                                                // 0x03B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x03B1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ShootingPlantAnimInstance");
		return ptr;
	}

};


// Class FSD.SimpleHealthComponent
// 0x0068 (0x01D8 - 0x0170)
class USimpleHealthComponent : public UHealthComponentBase
{
public:
	float                                              Damage;                                                   // 0x0170(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              MaxHealth;                                                // 0x0174(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               InvulnerableToNonDefinedResistances;                      // 0x0178(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0179(0x0007) MISSED OFFSET
	TMap<class UPawnStat*, float>                      Resistances;                                              // 0x0180(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	bool                                               AutomaticFlushNetDormancy;                                // 0x01D0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01D1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SimpleHealthComponent");
		return ptr;
	}


	void OnRep_Damage(float oldDamage);
};


// Class FSD.Skinnable
// 0x0000 (0x0028 - 0x0028)
class USkinnable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Skinnable");
		return ptr;
	}

};


// Class FSD.SpaceRigBar
// 0x0050 (0x0378 - 0x0328)
class ASpaceRigBar : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnNewDrinkableSpecial;                                    // 0x0328(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UInstantUsable*                              BarUsable;                                                // 0x0338(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UBoxComponent*                               BarUsableCollider;                                        // 0x0340(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UClass*                                      BarMenuWidget;                                            // 0x0348(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<struct FVector>                             DrinkServingLocations;                                    // 0x0350(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor)
	TArray<struct FDrinkableBarSlot>                   DrinkableBarSlots;                                        // 0x0360(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	class UDrinkableDataAsset*                         DrinkableSpecial;                                         // 0x0370(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SpaceRigBar");
		return ptr;
	}


	void SpawnDrinkables(class UDrinkableDataAsset* Drinkable, class APlayerCharacter* user);
	void ReceiveFinishedSpawningDrinkables(class UDrinkableDataAsset* DrinkableData, class APlayerCharacter* Customer);
	void ReceiveDrinkableSpawned(class ADrinkableActor* Drinkable, class APlayerCharacter* Customer, int LocationIndex);
	void ReceiveBeginSpawningDrinkables(class UDrinkableDataAsset* DrinkableData, class APlayerCharacter* Customer);
	void OnRep_DrinkableSpecial();
	bool HasUnclaimedDrinkables();
	bool HasSpaceForMoreDrinkables();
	int GetAvailableDrinkableSlots();
	void DrinkableSignature__DelegateSignature(class UDrinkableDataAsset* Drinkable);
};


// Class FSD.SpaceRigBarMenuItem
// 0x0008 (0x0230 - 0x0228)
class USpaceRigBarMenuItem : public UFSDUserWidget
{
public:
	class UDrinkableDataAsset*                         Drink;                                                    // 0x0228(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SpaceRigBarMenuItem");
		return ptr;
	}


	void Unselect();
	void Select();
};


// Class FSD.SpawningBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class USpawningBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SpawningBlueprintLibrary");
		return ptr;
	}


	static void SpawnEnemyGroupDescriptorSpreadOut(class UObject* WorldContextObject, class UEnemyGroupDescriptor* Descriptor, float Difficulty, TArray<struct FVector> Locations, bool Alert, EDeepPathFinderSize pfSize);
	static void SpawnEnemyGroupDescriptor(class UObject* WorldContextObject, class UEnemyGroupDescriptor* Descriptor, float Difficulty, const struct FVector& Location, bool Alert, EDeepPathFinderSize pfSize);
	static void SpawnEnemiesFromPool(class UObject* WorldContextObject, float Difficulty, TArray<struct FVector> Locations, bool Alert, bool isConstantPreassure);
	static void SpawnEnemiesAtLocationWithCallback(class UObject* WorldContextObject, class UEnemyDescriptor* EnemyDescriptor, int Count, const struct FVector& Location, const struct FScriptDelegate& Callback, bool Alert, bool scaleToDifficulty, EDeepPathFinderSize pfSize);
	static void SpawnEnemiesAtLocation(class UObject* WorldContextObject, class UEnemyDescriptor* EnemyDescriptor, int Count, const struct FVector& Location, bool Alert, bool scaleToDifficulty, EDeepPathFinderSize pfSize);
	static void RandomizeSpawnPoints(class UObject* WorldContextObject, float distance, TArray<struct FVector>* spawnPoints);
	static TArray<struct FVector> GetSpawnPointsInRange(class UObject* WorldContextObject, float distanceToPlayers, int spawnPointCount, EDeepPathFinderSize pfSize);
	static TArray<struct FVector> GetSpawnPointsFromLocation(class UObject* WorldContextObject, const struct FVector& Location, float distance, int spawnPointCount, EDeepPathFinderSize pfSize);
	static struct FVector GetSpawnPointInRange(class UObject* WorldContextObject, float distanceToPlayers, EDeepPathFinderSize pfSize);
	static struct FVector GetSpawnPointFromLocation(class UObject* WorldContextObject, const struct FVector& Location, float distance, EDeepPathFinderSize pfSize);
};


// Class FSD.SpiderEnemy
// 0x0030 (0x0488 - 0x0458)
class ASpiderEnemy : public AEnemyDeepPathfinderCharacter
{
public:
	class UPawnStatsComponent*                         PawnStats;                                                // 0x0458(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	TArray<class UAnimSequenceBase*>                   HitReactions;                                             // 0x0460(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	float                                              FirstHitReactBlendIn;                                     // 0x0470(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              OverrideHitReactBlendIn;                                  // 0x0474(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UStaticMesh*                                 GoreMesh;                                                 // 0x0478(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ApplyDifficultySpeedModifier;                             // 0x0480(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0481(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SpiderEnemy");
		return ptr;
	}


	void PlayHitReaction();
	void OnDamaged(float Amount);
	class UStaticMeshComponent* CreateHeadGore();
	void AlertNearbyEnemies();
};


// Class FSD.StatHat
// 0x0078 (0x00A0 - 0x0028)
class UStatHat : public UObject
{
public:
	unsigned char                                      UnknownData00[0x78];                                      // 0x0028(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StatHat");
		return ptr;
	}

};


// Class FSD.StatusEffect
// 0x0078 (0x00A0 - 0x0028)
class UStatusEffect : public UObject
{
public:
	class UPawnAffliction*                             PawnAffliction;                                           // 0x0028(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UStatusEffectItem*>                   StatusEffects;                                            // 0x0030(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor)
	float                                              MaxResistance;                                            // 0x0040(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0048(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FRandRange                                  ApplyEffectsInterval;                                     // 0x0050(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	float                                              Duration;                                                 // 0x0058(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ApplyDurationAfterPop;                                    // 0x005C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	struct FGameplayTagContainer                       ExcludeTargetsWithTags;                                   // 0x0060(0x0020) (CPF_Edit)
	struct FGameplayTagContainer                       TargetRequiredTags;                                       // 0x0080(0x0020) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StatusEffect");
		return ptr;
	}


	bool ShouldInstantiate();
	bool CanTrigger(class AActor* Target);
};


// Class FSD.StatusEffectItem
// 0x0000 (0x0028 - 0x0028)
class UStatusEffectItem : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StatusEffectItem");
		return ptr;
	}

};


// Class FSD.DotStatusEffectItem
// 0x0008 (0x0030 - 0x0028)
class UDotStatusEffectItem : public UStatusEffectItem
{
public:
	struct FRandRange                                  damageAmount;                                             // 0x0028(0x0008) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DotStatusEffectItem");
		return ptr;
	}

};


// Class FSD.PlayerArmorStatusEffectItem
// 0x0008 (0x0030 - 0x0028)
class UPlayerArmorStatusEffectItem : public UStatusEffectItem
{
public:
	struct FRandRange                                  ChangeAmount;                                             // 0x0028(0x0008) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.PlayerArmorStatusEffectItem");
		return ptr;
	}

};


// Class FSD.StatChangeStatusEffectItem
// 0x0010 (0x0038 - 0x0028)
class UStatChangeStatusEffectItem : public UStatusEffectItem
{
public:
	class UPawnStat*                                   Stat;                                                     // 0x0028(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              StatChange;                                               // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StatChangeStatusEffectItem");
		return ptr;
	}

};


// Class FSD.TemperatureStatusEffectItem
// 0x0008 (0x0030 - 0x0028)
class UTemperatureStatusEffectItem : public UStatusEffectItem
{
public:
	struct FRandRange                                  TemperatureChangeAmount;                                  // 0x0028(0x0008) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TemperatureStatusEffectItem");
		return ptr;
	}

};


// Class FSD.HeatSourceStatusEffectItem
// 0x0008 (0x0030 - 0x0028)
class UHeatSourceStatusEffectItem : public UStatusEffectItem
{
public:
	float                                              Temperature;                                              // 0x0028(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	ETemperatureIntensity                              Intensity;                                                // 0x002C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.HeatSourceStatusEffectItem");
		return ptr;
	}

};


// Class FSD.StatusEffectsComponent
// 0x0020 (0x0110 - 0x00F0)
class UStatusEffectsComponent : public UActorComponent
{
public:
	TArray<struct FActiveStatusEffectBank>             ActiveStatusEffects;                                      // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	class UHealthComponentBase*                        OwnerHealth;                                              // 0x0100(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               IgnoreAll;                                                // 0x0108(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0109(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StatusEffectsComponent");
		return ptr;
	}


	static bool TryPushActiveStatusEffect(class UClass* StatusEffect, class AActor* Target, class AActor* Owner);
	static bool TryPopActiveStatusEffect(class UClass* StatusEffect, class AActor* Target, class AActor* Owner);
	bool PushManyStatusEffects(TArray<class UClass*> StatusEffects, class AActor* Owner);
	bool PushActiveStatusEffect(class UClass* StatusEffect, class AActor* Owner);
	bool PopManyStatusEffect(TArray<class UClass*> StatusEffects, class AActor* Owner);
	bool PopActiveStatusEffect(class UClass* StatusEffect, class AActor* Owner);
	void OnDeath(class UHealthComponentBase* HealthComponent);
	bool HasActiveEffect(class UClass* StatusEffect);
};


// Class FSD.StatusEffectTriggerComponent
// 0x0050 (0x0140 - 0x00F0)
class UStatusEffectTriggerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnEffectTriggered;                                        // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActorEnterLeave;                                        // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	TArray<class UClass*>                              StatusEffects;                                            // 0x0110(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	TArray<class UClass*>                              LeaveTriggerEffects;                                      // 0x0120(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UPrimitiveComponent*                         Collider;                                                 // 0x0130(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	bool                                               RemoveStatusEffectOnEndOverlap;                           // 0x0138(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0139(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StatusEffectTriggerComponent");
		return ptr;
	}


	void OnOverlapEnd(class AActor* MyActor, class AActor* OtherActor);
	void OnOverlapBegin(class AActor* MyActor, class AActor* OtherActor);
	void OnComponentOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnComponentOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class FSD.StayAwayFromWallsComponent
// 0x0050 (0x0290 - 0x0240)
class UStayAwayFromWallsComponent : public USceneComponent
{
public:
	class AFSDGameState*                               GameState;                                                // 0x0240(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0248(0x0028) MISSED OFFSET
	float                                              MaxSpeed;                                                 // 0x0270(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Acceleration;                                             // 0x0274(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BackAcceleration;                                         // 0x0278(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PointOffset;                                              // 0x027C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AvoidSpeed;                                               // 0x0280(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              GoBackSpeed;                                              // 0x0284(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               Active;                                                   // 0x0288(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0289(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StayAwayFromWallsComponent");
		return ptr;
	}


	void SetIsActive(bool IsActive);
};


// Class FSD.StickyFlame
// 0x0048 (0x0370 - 0x0328)
class AStickyFlame : public AActor
{
public:
	class UParticleSystemComponent*                    FlameParticles;                                           // 0x0328(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UAudioComponent*                             Audio;                                                    // 0x0330(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UStatusEffectTriggerComponent*               StatusTriggerComponent;                                   // 0x0338(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FDecalData                                  Decal;                                                    // 0x0340(0x0018) (CPF_Edit)
	float                                              FlameLifetime;                                            // 0x0358(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              FlameExtinguishTime;                                      // 0x035C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AudioFadeOutTime;                                         // 0x0360(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsActive;                                                 // 0x0364(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x0365(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StickyFlame");
		return ptr;
	}


	void OnRep_IsActive();
	void OnExtinguisFlame();
};


// Class FSD.StickyFlameSpawner
// 0x0038 (0x0128 - 0x00F0)
class UStickyFlameSpawner : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnStickyFlameSpawned;                                     // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UClass*                                      StickyFlameActor;                                         // 0x0100(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FlameLifetime;                                            // 0x0108(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              StickyFlameIntervals;                                     // 0x010C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              StickyFlameMinDistance;                                   // 0x0110(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              StickyFlameLastTime;                                      // 0x0114(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     StickyFlameLastLocation;                                  // 0x0118(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0124(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StickyFlameSpawner");
		return ptr;
	}


	bool TrySpawnStickyFlameHit(const struct FHitResult& Hit);
	bool TrySpawnStickyFlame(const struct FVector& Location, const struct FVector& Normal);
	void StickyFlameSignature__DelegateSignature(class AStickyFlame* StickyFlame);
	void ServerSpawnStickyFlame(const struct FVector_NetQuantize& Location, const struct FVector_NetQuantizeNormal& Normal);
};


// Class FSD.STLMeshCarver
// 0x0038 (0x0060 - 0x0028)
class USTLMeshCarver : public UObject
{
public:
	struct FCoreUObject_FBox                           AABB;                                                     // 0x0028(0x001C) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FDeepCSGFloatTree                           BSPTree;                                                  // 0x0048(0x0018) (CPF_Edit, CPF_EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.STLMeshCarver");
		return ptr;
	}

};


// Class FSD.SubHealthComponent
// 0x0010 (0x0100 - 0x00F0)
class USubHealthComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET
	EHealthbarType                                     HealthbarType;                                            // 0x00F8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SubHealthComponent");
		return ptr;
	}


	bool IsDead();
	bool IsAlive();
	float GetHealth();
};


// Class FSD.DestructibleSubHealthComponent
// 0x0040 (0x0140 - 0x0100)
class UDestructibleSubHealthComponent : public USubHealthComponent
{
public:
	struct FScriptMulticastDelegate                    OnHealthChanged;                                          // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDamageTaken;                                            // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	float                                              MaxHealth;                                                // 0x0120(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Damage;                                                   // 0x0124(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class USceneComponent*                             ArmorComponent;                                           // 0x0128(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FScriptMulticastDelegate                    OnDestroyed;                                              // 0x0130(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.DestructibleSubHealthComponent");
		return ptr;
	}


	void SubHealthDestroyed__DelegateSignature(class UDestructibleSubHealthComponent* subHealth);
	void OnRep_Damage(float oldDamage);
};


// Class FSD.TeamResourcesComponent
// 0x0000 (0x0148 - 0x0148)
class UTeamResourcesComponent : public UResourcesComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TeamResourcesComponent");
		return ptr;
	}

};


// Class FSD.Teleporter
// 0x0018 (0x0340 - 0x0328)
class ATeleporter : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class ATeleporter*                                 ConnectedTeleporter;                                      // 0x0330(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              MinTeleporterRange;                                       // 0x0338(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxTeleporterRange;                                       // 0x033C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Teleporter");
		return ptr;
	}

};


// Class FSD.EnemyTemperatureComponent
// 0x0060 (0x0160 - 0x0100)
class UEnemyTemperatureComponent : public UTemperatureComponent
{
public:
	float                                              TemperatureChangeScale;                                   // 0x0100(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BurnTemperature;                                          // 0x0104(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DouseFireTemperature;                                     // 0x0108(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FreezeTemperature;                                        // 0x010C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              UnFreezeTemperature;                                      // 0x0110(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                WarmingRate;                                              // 0x0114(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                CoolingRate;                                              // 0x0118(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsHeatsourceWhenOnFire;                                   // 0x011C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x011D(0x0003) MISSED OFFSET
	float                                              OnFireHeatRange;                                          // 0x0120(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxColdSlowdown;                                          // 0x0124(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UPawnStatsComponent*                         PawnStats;                                                // 0x0128(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0130(0x0018) MISSED OFFSET
	int                                                WarmingCooldown;                                          // 0x0148(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x14];                                      // 0x014C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EnemyTemperatureComponent");
		return ptr;
	}


	void TimerCallback();
	void OnDeath(class UHealthComponentBase* HealthComponent);
};


// Class FSD.ObjectTemperatureComponent
// 0x0038 (0x0138 - 0x0100)
class UObjectTemperatureComponent : public UTemperatureComponent
{
public:
	float                                              TemperatureChangeScale;                                   // 0x0100(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BurnTemperature;                                          // 0x0104(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DouseFireTemperature;                                     // 0x0108(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                CoolingRate;                                              // 0x010C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               IsHeatsourceWhenOnFire;                                   // 0x0110(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0111(0x0003) MISSED OFFSET
	float                                              OnFireHeatRange;                                          // 0x0114(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0118(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ObjectTemperatureComponent");
		return ptr;
	}


	void TimerCallback();
	void OnDeath(class UHealthComponentBase* HealthComponent);
};


// Class FSD.TemporaryBuff
// 0x0020 (0x0050 - 0x0030)
class UTemporaryBuff : public UDataAsset
{
public:
	struct FText                                       Description;                                              // 0x0030(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	class UTexture2D*                                  Icon;                                                     // 0x0048(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TemporaryBuff");
		return ptr;
	}


	void DeActivateBuff(class AFSDPlayerController* Player);
	void ActivateBuff(class AFSDPlayerController* Player);
};


// Class FSD.StatTemporaryBuff
// 0x0010 (0x0060 - 0x0050)
class UStatTemporaryBuff : public UTemporaryBuff
{
public:
	class UPawnStat*                                   Stat;                                                     // 0x0050(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ModifierValue;                                            // 0x0058(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EPawnStatType                                      StatType;                                                 // 0x005C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x005D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.StatTemporaryBuff");
		return ptr;
	}

};


// Class FSD.TerrainDetectComponent
// 0x0020 (0x0260 - 0x0240)
class UTerrainDetectComponent : public USceneComponent
{
public:
	struct FScriptMulticastDelegate                    OnPointRemoved;                                           // 0x0240(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	bool                                               StartDetectOnBeginPlay;                                   // 0x0250(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               OnlyDetectOnServer;                                       // 0x0251(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0xE];                                       // 0x0252(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TerrainDetectComponent");
		return ptr;
	}


	void StartDetect();
};


// Class FSD.TerrainDetectBoxComponent
// 0x0030 (0x05B0 - 0x0580)
class UTerrainDetectBoxComponent : public UBoxComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0580(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBoxExcavated;                                           // 0x0588(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	bool                                               StartDetectOnBeginPlay;                                   // 0x0598(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               OnlyDetectOnServer;                                       // 0x0599(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x059A(0x0002) MISSED OFFSET
	int                                                NumCornersToExcavate;                                     // 0x059C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                NumCornersExcavated;                                      // 0x05A0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x05A4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TerrainDetectBoxComponent");
		return ptr;
	}


	void StartDetect();
};


// Class FSD.TerrainDetectInterface
// 0x0000 (0x0028 - 0x0028)
class UTerrainDetectInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TerrainDetectInterface");
		return ptr;
	}

};


// Class FSD.TerrainFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UTerrainFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TerrainFunctionLibrary");
		return ptr;
	}


	static void CreateExplosionCrater(class UObject* WorldContextObject, const struct FVector& Location, float CarveDiameter, float carveNoiseSize, float carveBurnThickness, bool allowCustomBurntMaterial);
};


// Class FSD.ProceduralFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UProceduralFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ProceduralFunctionLibrary");
		return ptr;
	}


	static class AProceduralSetup* GetProceduralSetup(class UObject* WorldContextObject);
	static int GetObjectiveXP(class UClass* objectiveClass, float missionLength);
	static int GetObjectiveCredits(class UClass* objectiveClass, float missionLength);
	static class UBiome* GetBiome(class UClass* levelSetup);
};


// Class FSD.TerrainMaterial
// 0x00F0 (0x0120 - 0x0030)
class UTerrainMaterial : public UDataAsset
{
public:
	class UMaterialInterface*                          RenderMaterial;                                           // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      Collide : 1;                                              // 0x0038(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	unsigned char                                      Diggable : 1;                                             // 0x0038(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	unsigned char                                      CanBeDrilled : 1;                                         // 0x0038(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	unsigned char                                      ExplosionProof : 1;                                       // 0x0038(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	unsigned char                                      PathfinderDanger : 1;                                     // 0x0038(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	unsigned char                                      MeltsInFire : 1;                                          // 0x0038(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	class UResourceData*                               ResourceData;                                             // 0x0040(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                HitsNeededToMine;                                         // 0x0048(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TArray<struct FDecalData>                          HitDecal;                                                 // 0x0050(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UTerrainMaterial*                            ReplaceWhenHitMaterial;                                   // 0x0060(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               CanHaveDecals;                                            // 0x0068(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	class UParticleSystem*                             DigParticles;                                             // 0x0070(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMaterialInstance*                           DigParticlesMaterialOverride;                             // 0x0078(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UParticleSystem*                             PartialDigParticles;                                      // 0x0080(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMaterialInstance*                           PartialDigParticlesMaterialOverride;                      // 0x0088(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   CrumbleSound;                                             // 0x0090(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   PartialMineSound;                                         // 0x0098(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainMaterial*                            BurntMaterial;                                            // 0x00A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainMaterial*                            BulletBurntMaterial;                                      // 0x00A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PickAxeDigSize;                                           // 0x00B0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               RemoveDebrisOnFirstHit;                                   // 0x00B4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00B5(0x0003) MISSED OFFSET
	class UDialogDataAsset*                            ShoutLookAt;                                              // 0x00B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            ShoutOnDig;                                               // 0x00C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTerrainType*                                TerrainType;                                              // 0x00C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMaterialInterface*                          ScannerMaterial;                                          // 0x00D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               autoRegister;                                             // 0x00D8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0xF];                                       // 0x00D9(0x000F) MISSED OFFSET
	struct FText                                       InGameName;                                               // 0x00E8(0x0018) (CPF_Edit)
	struct FText                                       InGameDescription;                                        // 0x0100(0x0018) (CPF_Edit)
	unsigned char                                      Precious : 1;                                             // 0x0118(0x0001) (CPF_Edit)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0119(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TerrainMaterial");
		return ptr;
	}


	class UParticleSystemComponent* SpawnPartialDigParticles(class UObject* WorldContextObject, const struct FVector& Location, const struct FRotator& Rotation);
	class UParticleSystemComponent* SpawnDigParticles(class UObject* WorldContextObject, const struct FVector& Location, const struct FRotator& Rotation, float Density);
	bool IsPrecious();
	struct FText GetInGameName();
};


// Class FSD.TerrainType
// 0x0020 (0x0050 - 0x0030)
class UTerrainType : public UDataAsset
{
public:
	unsigned char                                      Collide : 1;                                              // 0x0030(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	unsigned char                                      Diggable : 1;                                             // 0x0030(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	unsigned char                                      Precious : 1;                                             // 0x0030(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UParticleSystem*                             DebrisStandardParticles;                                  // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   DebrisStandardSoundCue;                                   // 0x0040(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0048(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TerrainType");
		return ptr;
	}

};


// Class FSD.TerrainMaterialsCollection
// 0x0030 (0x0060 - 0x0030)
class UTerrainMaterialsCollection : public UDataAsset
{
public:
	TArray<class UTerrainMaterial*>                    Materials;                                                // 0x0030(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	TArray<class UTerrainType*>                        TerrainTypes;                                             // 0x0040(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0050(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TerrainMaterialsCollection");
		return ptr;
	}

};


// Class FSD.TerrainModifyingProjectile
// 0x0058 (0x0410 - 0x03B8)
class ATerrainModifyingProjectile : public AProjectile
{
public:
	struct FScriptMulticastDelegate                    OnRevertToNormal;                                         // 0x03B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class UTerrainMaterial*                            Terrain;                                                  // 0x03C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class UTerrainMaterial*                            OriginalGroundMaterial;                                   // 0x03D0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UStaticMesh*                                 CarveMesh;                                                // 0x03D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	struct FVector                                     CarveMeshScale;                                           // 0x03E0(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	struct FVector                                     LastHitLocation;                                          // 0x03EC(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              Radius;                                                   // 0x03F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               Revert;                                                   // 0x03FC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03FD(0x0003) MISSED OFFSET
	float                                              TimeOnGround;                                             // 0x0400(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              ExpensiveCarveNoise;                                      // 0x0404(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0408(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TerrainModifyingProjectile");
		return ptr;
	}


	void Tick(float DeltaSeconds);
	float GetRadius();
	void BeginPlay();
};


// Class FSD.TerrainPlacementComponent
// 0x0030 (0x0270 - 0x0240)
class UTerrainPlacementComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0240(0x0008) MISSED OFFSET
	EDebrisColliderType                                CapsuleType;                                              // 0x0248(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0249(0x0003) MISSED OFFSET
	struct FDebrisCapsule                              Capsule;                                                  // 0x024C(0x001C) (CPF_Edit)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0268(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TerrainPlacementComponent");
		return ptr;
	}


	void AddBlockers(class AProceduralSetup* ProceduralSetup, const struct FTransform& Transform);
};


// Class FSD.ThrownGrenadeItem
// 0x0050 (0x0498 - 0x0448)
class AThrownGrenadeItem : public AAnimatedItem
{
public:
	class UClass*                                      grenadeClass;                                             // 0x0448(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                FPThrowMontage;                                           // 0x0450(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                TPThrowMontage;                                           // 0x0458(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ThrowVelocity;                                            // 0x0460(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              EnheiritOwnerVelocityScale;                               // 0x0464(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ThrowAngle;                                               // 0x0468(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                MaxGrenades;                                              // 0x046C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                CurrentGrenades;                                          // 0x0470(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              Damage;                                                   // 0x0474(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DamageRange;                                              // 0x0478(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Cooldown;                                                 // 0x047C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ThrowDelay;                                               // 0x0480(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ThrowZOffset;                                             // 0x0484(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0488(0x0004) MISSED OFFSET
	float                                              CooldownLeft;                                             // 0x048C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0490(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ThrownGrenadeItem");
		return ptr;
	}


	void Simulate_ThrowGrenade();
	void Server_ThrowGrenade();
};


// Class FSD.TracerManager
// 0x0010 (0x0100 - 0x00F0)
class UTracerManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TracerManager");
		return ptr;
	}


	void AddTracer(const struct FVector& Origin, const struct FVector& Destination, float Speed, class UParticleSystem* particle, float MinDistance);
};


// Class FSD.TrailComponent
// 0x0030 (0x0270 - 0x0240)
class UTrailComponent : public USceneComponent
{
public:
	float                                              MaxStep;                                                  // 0x0240(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               MinimizePath;                                             // 0x0244(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0245(0x0003) MISSED OFFSET
	TArray<struct FVector>                             Trail;                                                    // 0x0248(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TEnumAsByte<ETraceTypeQuery>                       Query;                                                    // 0x0258(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bDrawPath;                                                // 0x0259(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x025A(0x0002) MISSED OFFSET
	float                                              MaxDrawDistance;                                          // 0x025C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PathLineWidth;                                            // 0x0260(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              PathNodeSize;                                             // 0x0264(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FColor                                      DrawColor;                                                // 0x0268(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x026C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TrailComponent");
		return ptr;
	}


	int TrailLength();
	void ToggleDrawPath(bool Visible);
	void Reset();
	struct FVector GetTrailPoint(int Index);
	struct FVector GetNextTrailPointFrom(const struct FVector& From);
	int GetNearestTrailIndex(const struct FVector& Location);
	static class UTrailComponent* GetNearestPlayerTrail(class UWorld* World, const struct FVector& From, float MinDist, float MaxDist);
	struct FColor GetDrawColor();
};


// Class FSD.TunnelSegmentSetting
// 0x0060 (0x0090 - 0x0030)
class UTunnelSegmentSetting : public UDataAsset
{
public:
	class UTerrainMaterial*                            Material;                                                 // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          PathfinderNoise;                                          // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          CielingNoise;                                             // 0x0040(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          WallNoise;                                                // 0x0048(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          FloorNoise;                                               // 0x0050(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector2D                                   VRange;                                                   // 0x0058(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector2D                                   HRange;                                                   // 0x0060(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector2D                                   Cielingheight;                                            // 0x0068(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector2D                                   FloorHeight;                                              // 0x0070(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector2D                                   CielingNoiseRange;                                        // 0x0078(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector2D                                   WallNoiseRange;                                           // 0x0080(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector2D                                   FloorNoiseRange;                                          // 0x0088(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TunnelSegmentSetting");
		return ptr;
	}

};


// Class FSD.TunnelSettings
// 0x0060 (0x0090 - 0x0030)
class UTunnelSettings : public UDataAsset
{
public:
	class UTerrainMaterial*                            Material;                                                 // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          PathfinderNoise;                                          // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          CielingNoise;                                             // 0x0040(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          WallNoise;                                                // 0x0048(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UFloodFillSettings*                          FloorNoise;                                               // 0x0050(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector2D                                   VRange;                                                   // 0x0058(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector2D                                   HRange;                                                   // 0x0060(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector2D                                   Cielingheight;                                            // 0x0068(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector2D                                   FloorHeight;                                              // 0x0070(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector2D                                   CielingNoiseRange;                                        // 0x0078(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector2D                                   WallNoiseRange;                                           // 0x0080(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FVector2D                                   FloorNoiseRange;                                          // 0x0088(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TunnelSettings");
		return ptr;
	}

};


// Class FSD.TunnelSetting
// 0x0040 (0x0070 - 0x0030)
class UTunnelSetting : public UDataAsset
{
public:
	class UFloodFillSettings*                          PathfinderNoise;                                          // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTunnelSegmentSetting*                       BaseSegmentSetting;                                       // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTunnelSegmentSetting*                       TightBendSegmentSetting;                                  // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTunnelSegmentSetting*                       DirtSegmentSetting;                                       // 0x0048(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UTunnelSegmentSetting*                       DirtOffsetSetting;                                        // 0x0050(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<struct FTunnelSettingItem>                  VariationSegments;                                        // 0x0058(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	float                                              Weight;                                                   // 0x0068(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TunnelSetting");
		return ptr;
	}

};


// Class FSD.TutorialComponent
// 0x0048 (0x0138 - 0x00F0)
class UTutorialComponent : public UActorComponent
{
public:
	bool                                               bTutorialEnabled;                                         // 0x00F0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	int                                                Priority;                                                 // 0x00F4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxDuration;                                              // 0x00F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                MaxViewCount;                                             // 0x00FC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TWeakObjectPtr<class APlayerCharacter>             PlayerCharacter;                                          // 0x0100(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TWeakObjectPtr<class AFSDPlayerState>              PlayerState;                                              // 0x0108(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TWeakObjectPtr<class AFSDPlayerController>         PlayerController;                                         // 0x0110(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TWeakObjectPtr<class UFSDSaveGame>                 SaveGame;                                                 // 0x0118(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TWeakObjectPtr<class ATutorialManager>             TutorialManager;                                          // 0x0120(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               bTutorialInitialized;                                     // 0x0128(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               bTutorialReady;                                           // 0x0129(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               bTutorialVisible;                                         // 0x012A(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               bTutorialActive;                                          // 0x012B(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x012C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TutorialComponent");
		return ptr;
	}


	void RegisterWithManager(class ATutorialManager* Manager);
	void ReceiveOnShown();
	void ReceiveOnInitialized();
	void ReceiveOnHidden();
	void OnTutorialsReset();
	void MarkTutorialReadyNow();
	void MarkTutorialReadyInSeconds(float Delay);
	bool HasTutorialBeenShown();
	struct FString GetTutorialName();
	void CancelTutorial(bool CountAsViewed);
};


// Class FSD.TutorialHintComponent
// 0x0048 (0x0180 - 0x0138)
class UTutorialHintComponent : public UTutorialComponent
{
public:
	struct FTutorialHint                               Hint;                                                     // 0x0138(0x0048) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TutorialHintComponent");
		return ptr;
	}


	void SetRemainingVisibleTime(float remainingTime);
	bool IsSinglePlayer(class UObject* WorldContext);
	void ChangeHint(const struct FTutorialHint& NewHint);
};


// Class FSD.TutorialManager
// 0x0040 (0x0368 - 0x0328)
class ATutorialManager : public AActor
{
public:
	float                                              MinimumTimeBetweenTutorials;                              // 0x0328(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ResetTutorialsOnStart;                                    // 0x032C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ShowTutorialsDebug;                                       // 0x032D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x032E(0x0002) MISSED OFFSET
	TWeakObjectPtr<class AFSDPlayerController>         PlayerController;                                         // 0x0330(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TWeakObjectPtr<class APlayerCharacter>             PlayerCharacter;                                          // 0x0338(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TWeakObjectPtr<class UFSDSaveGame>                 SaveGame;                                                 // 0x0340(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	TArray<TWeakObjectPtr<class UTutorialComponent>>   Tutorials;                                                // 0x0348(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)
	TWeakObjectPtr<class UTutorialComponent>           ActiveTutorial;                                           // 0x0358(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0360(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TutorialManager");
		return ptr;
	}

};


// Class FSD.TutorialWidget
// 0x0008 (0x0230 - 0x0228)
class UTutorialWidget : public UFSDUserWidget
{
public:
	float                                              RemainingVisibleTime;                                     // 0x0228(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x022C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TutorialWidget");
		return ptr;
	}


	void Show(const struct FText& Text, const struct FText& ControllerOverrideText, const struct FText& Title, float Duration);
	void OnShow(const struct FText& Text, const struct FText& ControllerOverrideText, const struct FText& Title);
	void OnHide();
	void Hide();
	void ChangeHintDuration(float NewDuration);
};


// Class FSD.TwitchWrapper
// 0x0160 (0x0188 - 0x0028)
class UTwitchWrapper : public UObject
{
public:
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0028(0x001C) MISSED OFFSET
	int                                                TwitchStatus;                                             // 0x0044(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               TwitchEnabled;                                            // 0x0048(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCommandCalled;                                          // 0x0050(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	unsigned char                                      UnknownData02[0x128];                                     // 0x0060(0x0128) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.TwitchWrapper");
		return ptr;
	}


	void StartTwitch(const struct FString& oauth);
	void SetCommand(const struct FString& Command, bool Enabled);
	void ResetCommands();
	struct FString ParseOAuthCode(const struct FString& URL);
	bool IsConnected();
	struct FString GetOauthURL();
	void DisableCommands();
	float CommandPercent(const struct FString& Command);
	void AddCommand(const struct FString& Command);
};


// Class FSD.UseAnimationSetting
// 0x0040 (0x0070 - 0x0030)
class UUseAnimationSetting : public UDataAsset
{
public:
	class UAnimMontage*                                BeginFP;                                                  // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UAnimMontage*>                        LoopsFP;                                                  // 0x0038(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UAnimMontage*                                EndFP;                                                    // 0x0048(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAnimMontage*                                BeginTP;                                                  // 0x0050(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UAnimMontage*>                        LoopsTP;                                                  // 0x0058(0x0010) (CPF_Edit, CPF_ZeroConstructor)
	class UAnimMontage*                                EndTP;                                                    // 0x0068(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.UseAnimationSetting");
		return ptr;
	}

};


// Class FSD.RepairableUsable
// 0x0000 (0x0170 - 0x0170)
class URepairableUsable : public UInstantUsable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.RepairableUsable");
		return ptr;
	}

};


// Class FSD.SingleUsableComponent
// 0x0088 (0x01C8 - 0x0140)
class USingleUsableComponent : public UUsableComponent
{
public:
	struct FScriptMulticastDelegate                    OnUsedBy;                                                 // 0x0140(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnProgress;                                               // 0x0150(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUsableChanged;                                          // 0x0160(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailed;                                                 // 0x0170(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class USoundCue*                                   AudioBeginUse;                                            // 0x0180(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   AudioFailedUse;                                           // 0x0188(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundCue*                                   AudioCompletedUse;                                        // 0x0190(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               CoopUse;                                                  // 0x0198(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0199(0x0007) MISSED OFFSET
	class UPawnStat*                                   UseSpeedStat;                                             // 0x01A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CoopUseMultiplier;                                        // 0x01A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               Usable;                                                   // 0x01AC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x01AD(0x0003) MISSED OFFSET
	float                                              UseDuration;                                              // 0x01B0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Progress;                                                 // 0x01B4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              DesiredProgress;                                          // 0x01B8(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	int                                                UserCount;                                                // 0x01BC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	class UAudioComponent*                             AudioBeginUseInstance;                                    // 0x01C0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SingleUsableComponent");
		return ptr;
	}


	void Use(class APlayerCharacter* user, float DeltaTime);
	void SetCanUse(bool canUse);
	void OnRep_UserCount();
	void OnRep_Usable();
	void OnRep_DesiredProgress();
	float GetUseProgressInPercent(class APlayerCharacter* user);
	void All_PlayFailedAudio();
};


// Class FSD.UsableAggregator
// 0x0028 (0x0130 - 0x0108)
class UUsableAggregator : public UItemAggregator
{
public:
	struct FScriptMulticastDelegate                    OnVisibilityChanged;                                      // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FText                                       UsingText;                                                // 0x0118(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.UsableAggregator");
		return ptr;
	}


	float GetProgress();
};


// Class FSD.UsingStateComponent
// 0x0000 (0x0128 - 0x0128)
class UUsingStateComponent : public UCharacterStateComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.UsingStateComponent");
		return ptr;
	}

};


// Class FSD.VanityItem
// 0x0040 (0x0110 - 0x00D0)
class UVanityItem : public UCraftableObject
{
public:
	struct FText                                       ItemName;                                                 // 0x00D0(0x0018) (CPF_Edit)
	struct FText                                       ItemDescription;                                          // 0x00E8(0x0018) (CPF_Edit)
	class UTexture2D*                                  Icon;                                                     // 0x0100(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               UsesDataTable;                                            // 0x0108(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0109(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.VanityItem");
		return ptr;
	}


	bool IsEquipped(class UClass* CharacterClass, class AFSDPlayerState* PlayerState);
	EVanitySlot GetVanitySlot();
	void ApplyItemPermanently(class UObject* WorldContextObject, class UClass* Character);
	void ApplyItem(class APlayerCharacter* Player, bool isPermanent);
};


// Class FSD.ItemMaterialVanityItem
// 0x0008 (0x0118 - 0x0110)
class UItemMaterialVanityItem : public UVanityItem
{
public:
	class UMaterialInterface*                          Material;                                                 // 0x0110(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ItemMaterialVanityItem");
		return ptr;
	}

};


// Class FSD.SkinColorVanityItem
// 0x0000 (0x0118 - 0x0118)
class USkinColorVanityItem : public UItemMaterialVanityItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SkinColorVanityItem");
		return ptr;
	}

};


// Class FSD.BeardColorVanityItem
// 0x0028 (0x0138 - 0x0110)
class UBeardColorVanityItem : public UVanityItem
{
public:
	class UMaterialInterface*                          HairColor;                                                // 0x0110(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMaterialInterface*                          EyebrowColor;                                             // 0x0118(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMaterialInterface*                          MoustacheColor;                                           // 0x0120(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMaterialInterface*                          SideburnColor;                                            // 0x0128(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UMaterialInterface*                          BeardColor;                                               // 0x0130(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BeardColorVanityItem");
		return ptr;
	}

};


// Class FSD.HeadVanityItem
// 0x0038 (0x0148 - 0x0110)
class UHeadVanityItem : public UVanityItem
{
public:
	TSoftObjectPtr<class USkeletalMesh>                Mesh;                                                     // 0x0110(0x0028) (CPF_Edit)
	EHeadVanityType                                    HeadVanityType;                                           // 0x0138(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               HideBeard;                                                // 0x0139(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               HideHead;                                                 // 0x013A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x013B(0x0005) MISSED OFFSET
	class UMaterialInterface*                          MaterialOverride;                                         // 0x0140(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.HeadVanityItem");
		return ptr;
	}

};


// Class FSD.BeardVanityItem
// 0x0028 (0x0138 - 0x0110)
class UBeardVanityItem : public UVanityItem
{
public:
	TSoftObjectPtr<class USkeletalMesh>                Mesh;                                                     // 0x0110(0x0028) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.BeardVanityItem");
		return ptr;
	}

};


// Class FSD.ArmorVanityItem
// 0x0058 (0x0168 - 0x0110)
class UArmorVanityItem : public UVanityItem
{
public:
	TSoftObjectPtr<class USkeletalMesh>                Mesh;                                                     // 0x0110(0x0028) (CPF_Edit)
	bool                                               CropBeard;                                                // 0x0138(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0139(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UMaterialInterface>           MaterialOverride;                                         // 0x0140(0x0028) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ArmorVanityItem");
		return ptr;
	}

};


// Class FSD.EyeBrowsVanityItem
// 0x0028 (0x0138 - 0x0110)
class UEyeBrowsVanityItem : public UVanityItem
{
public:
	TSoftObjectPtr<class USkeletalMesh>                Mesh;                                                     // 0x0110(0x0028) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.EyeBrowsVanityItem");
		return ptr;
	}

};


// Class FSD.MoustacheVanityItem
// 0x0028 (0x0138 - 0x0110)
class UMoustacheVanityItem : public UVanityItem
{
public:
	TSoftObjectPtr<class USkeletalMesh>                Mesh;                                                     // 0x0110(0x0028) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MoustacheVanityItem");
		return ptr;
	}

};


// Class FSD.SideburnsVanityItem
// 0x0028 (0x0138 - 0x0110)
class USideburnsVanityItem : public UVanityItem
{
public:
	TSoftObjectPtr<class USkeletalMesh>                Mesh;                                                     // 0x0110(0x0028) (CPF_Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SideburnsVanityItem");
		return ptr;
	}

};


// Class FSD.CharacterVanityItems
// 0x0080 (0x00B0 - 0x0030)
class UCharacterVanityItems : public UDataAsset
{
public:
	TArray<class UHeadVanityItem*>                     HeadItems;                                                // 0x0030(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<class UBeardVanityItem*>                    BeardItems;                                               // 0x0040(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<class UArmorVanityItem*>                    ArmorItems;                                               // 0x0050(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<class UEyeBrowsVanityItem*>                 EyebrowsItems;                                            // 0x0060(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<class UMoustacheVanityItem*>                MoustacheItems;                                           // 0x0070(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<class USideburnsVanityItem*>                SideburnItems;                                            // 0x0080(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<class UBeardColorVanityItem*>               BeardMaterialItems;                                       // 0x0090(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	TArray<class USkinColorVanityItem*>                SkinMaterialItems;                                        // 0x00A0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.CharacterVanityItems");
		return ptr;
	}


	static void SortVanityItems(class UObject* WorldContextObject, class UClass* CharacterClass, TArray<class UVanityItem*>* vanityItems);
	static TArray<class UVanityItem*> GetVanityItems(class UObject* WorldContextObject, EVanitySlot Slot, class UClass* CharacterClass);
	static TArray<class UVanityItem*> GetUnLockedVanityItems(class UObject* WorldContextObject, EVanitySlot Slot, class UClass* CharacterClass);
	static TArray<class UVanityItem*> GetLockedVanityItems(class UObject* WorldContextObject, EVanitySlot Slot, class UClass* CharacterClass);
};


// Class FSD.WalkingStateComponent
// 0x0050 (0x0178 - 0x0128)
class UWalkingStateComponent : public UCharacterStateComponent
{
public:
	bool                                               SlidingEnabled;                                           // 0x0128(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               ShowDebug;                                                // 0x0129(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x012A(0x0002) MISSED OFFSET
	float                                              SlideAngle;                                               // 0x012C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              SlideAcceleration;                                        // 0x0130(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxSlideSpeed;                                            // 0x0134(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxClimbDistance;                                         // 0x0138(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
	class USoundBase*                                  AudioSliding;                                             // 0x0140(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundBase*                                  IceSliding;                                               // 0x0148(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAudioComponent*                             AudioComponentSliding;                                    // 0x0150(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UAudioComponent*                             AudioComponentIceSliding;                                 // 0x0158(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0160(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.WalkingStateComponent");
		return ptr;
	}


	void JumpPress();
};


// Class FSD.WeaponFireOwner
// 0x0000 (0x0028 - 0x0028)
class UWeaponFireOwner : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.WeaponFireOwner");
		return ptr;
	}


	class APlayerCharacter* GetPlayerCharacter();
	struct FQuat GetMuzzleQuat();
	struct FVector GetMuzzleLocation();
	bool GetIsLocallyControlled();
	bool GetIsFirstPerson();
};


// Class FSD.WeaponMasteryUnlock
// 0x0000 (0x0030 - 0x0030)
class UWeaponMasteryUnlock : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.WeaponMasteryUnlock");
		return ptr;
	}

};


// Class FSD.SkinMasteryUnlock
// 0x0008 (0x0038 - 0x0030)
class USkinMasteryUnlock : public UWeaponMasteryUnlock
{
public:
	class UItemSkin*                                   Skin;                                                     // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SkinMasteryUnlock");
		return ptr;
	}

};


// Class FSD.SkinAbilityUnlock
// 0x0000 (0x0030 - 0x0030)
class USkinAbilityUnlock : public UWeaponMasteryUnlock
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.SkinAbilityUnlock");
		return ptr;
	}

};


// Class FSD.MasteryIconWidget
// 0x0000 (0x0208 - 0x0208)
class UMasteryIconWidget : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.MasteryIconWidget");
		return ptr;
	}


	void ReceiveUnlocked();
};


// Class FSD.WeightRoomSelectorLibrary
// 0x0000 (0x0028 - 0x0028)
class UWeightRoomSelectorLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.WeightRoomSelectorLibrary");
		return ptr;
	}


	static void SetupWeightedRoomSelector(struct FWeightedRoomSelector* Target, TArray<class URoomGenerator*>* Rooms);
	static class URoomGenerator* SelectRandomRoom(struct FWeightedRoomSelector* Target, struct FRandomStream* RandomStream);
	static class URoomGenerator* GetRandomRoom(bool removeChosenRoom, TArray<class URoomGenerator*>* Rooms, struct FRandomStream* RandomStream);
};


// Class FSD.WidgetToRenderTargetComponent
// 0x00E0 (0x01D0 - 0x00F0)
class UWidgetToRenderTargetComponent : public UActorComponent
{
public:
	class UClass*                                      WidgetClass;                                              // 0x00F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FIntPoint                                   DrawSize;                                                 // 0x00F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bManuallyRedraw;                                          // 0x0100(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bRedrawRequested;                                         // 0x0101(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0102(0x0002) MISSED OFFSET
	float                                              RedrawTime;                                               // 0x0104(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              LastWidgetRenderTime;                                     // 0x0108(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bWindowFocusable;                                         // 0x010C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x010D(0x0003) MISSED OFFSET
	struct FIntPoint                                   CurrentDrawSize;                                          // 0x0110(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bDrawAtDesiredSize;                                       // 0x0118(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0119(0x0003) MISSED OFFSET
	struct FVector2D                                   Pivot;                                                    // 0x011C(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	class UMaterialInterface*                          BaseMaterial;                                             // 0x0128(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class ULocalPlayer*                                OwnerPlayer;                                              // 0x0130(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                BackgroundColor;                                          // 0x0138(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FLinearColor                                TintColorAndOpacity;                                      // 0x0148(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              OpacityFromTexture;                                       // 0x0158(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               bIsTwoSided;                                              // 0x015C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               TickWhenOffscreen;                                        // 0x015D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x015E(0x0002) MISSED OFFSET
	class UUserWidget*                                 Widget;                                                   // 0x0160(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x20];                                      // 0x0168(0x0020) MISSED OFFSET
	class UTextureRenderTarget2D*                      RenderTarget;                                             // 0x0188(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData)
	class UMaterialInstanceDynamic*                    MaterialInstance;                                         // 0x0190(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData)
	bool                                               bEditTimeUsable;                                          // 0x0198(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x37];                                      // 0x0199(0x0037) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.WidgetToRenderTargetComponent");
		return ptr;
	}


	void SetWidget(class UUserWidget* Widget);
	void SetOwnerPlayer(class ULocalPlayer* LocalPlayer);
	void SetBackgroundColor(const struct FLinearColor& NewBackgroundColor);
	void RequestRedraw();
	class UUserWidget* GetUserWidgetObject();
	class UTextureRenderTarget2D* GetRenderTarget();
	class ULocalPlayer* GetOwnerPlayer();
	class UMaterialInstanceDynamic* GetMaterialInstance();
};


// Class FSD.WindowManager
// 0x0080 (0x0170 - 0x00F0)
class UWindowManager : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnFirstWindowOpened;                                      // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLastWindowClosed;                                       // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	TArray<class UWindowWidget*>                       WindowStack;                                              // 0x0110(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)
	TMap<class UClass*, class UWindowWidget*>          WindowList;                                               // 0x0120(0x0050) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.WindowManager");
		return ptr;
	}


	void ReplaceWindow(class UWindowWidget* Window);
	class UWindowWidget* OpenWindowFromClass(class UClass* windowClass, int ZOrder);
	void OpenWindow(class UWindowWidget* Window);
	class UWindowWidget* OpenSingleUseWindow(class UClass* windowClass, int ZOrder);
	bool IsWindowOpen(class UWindowWidget* Window);
	bool IsTopWindow(class UWindowWidget* Window);
	void CloseWindow(class UWindowWidget* Window);
	void CloseTopWindow();
	void CloseAllWindows();
	bool AnyWindowsOpen();
};


// Class FSD.WoodLouse
// 0x0198 (0x05F0 - 0x0458)
class AWoodLouse : public AEnemyDeepPathfinderCharacter
{
public:
	struct FScriptMulticastDelegate                    OnStateChanged;                                           // 0x0458(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBumpedPlayer;                                           // 0x0468(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	class USceneComponent*                             RollingCenter;                                            // 0x0478(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UPawnSensingComponent*                       PawnSensing;                                              // 0x0480(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0488(0x0004) MISSED OFFSET
	float                                              ChanceToWalk;                                             // 0x048C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	bool                                               DebugAngle;                                               // 0x0490(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x27];                                      // 0x0491(0x0027) MISSED OFFSET
	class UFakeMoverSettings*                          FakeMoverSettings;                                        // 0x04B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class UClass*                                      BurstProjectileClass;                                     // 0x04C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              BurstTime;                                                // 0x04C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x04CC(0x0004) MISSED OFFSET
	TArray<class UClass*>                              StatusEffectsOnRoll;                                      // 0x04D0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor)
	float                                              TiltModifier;                                             // 0x04E0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BurstXOffset;                                             // 0x04E4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              BurstYOffset;                                             // 0x04E8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              BurstZOffset;                                             // 0x04EC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              HighDifficultyCustomProjectileGravity;                    // 0x04F0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	int                                                BurstCount;                                               // 0x04F4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x04F8(0x0004) MISSED OFFSET
	bool                                               InvounerableOnRoll;                                       // 0x04FC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               LockToRollMode;                                           // 0x04FD(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	bool                                               LockToWalkMode;                                           // 0x04FE(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x04FF(0x0001) MISSED OFFSET
	float                                              ForgetRange;                                              // 0x0500(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              ForgetTime;                                               // 0x0504(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0508(0x0004) MISSED OFFSET
	float                                              RefreshTimeMax;                                           // 0x050C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              RefreshTimeMin;                                           // 0x0510(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              BumpPower;                                                // 0x0514(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              DirectionalBumpPower;                                     // 0x0518(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	EWoodLouseState                                    CurrentState;                                             // 0x051C(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData06[0x23];                                      // 0x051D(0x0023) MISSED OFFSET
	class AActor*                                      CurrentTarget;                                            // 0x0540(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              FoldedStateMaxTime;                                       // 0x0548(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              FoldedStateMinTime;                                       // 0x054C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              UnfoldedStateMaxTime;                                     // 0x0550(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              UnflodedStateMinTime;                                     // 0x0554(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData07[0x8];                                       // 0x0558(0x0008) MISSED OFFSET
	class USoundBase*                                  BumpSound;                                                // 0x0560(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              TimeBetweenBumpingSamePlayer;                             // 0x0568(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              MinBumpDamage;                                            // 0x056C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              MaxBumpDamage;                                            // 0x0570(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              BumpDamage;                                               // 0x0574(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class UDamageClass*                                BumpDamageType;                                           // 0x0578(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              MaxBumpPower;                                             // 0x0580(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              BumpRange;                                                // 0x0584(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0588(0x0004) MISSED OFFSET
	float                                              AcceptableAngles;                                         // 0x058C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	float                                              RollSpeedModifier;                                        // 0x0590(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0594(0x0004) MISSED OFFSET
	class USoundBase*                                  RollingSound;                                             // 0x0598(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	struct FName                                       RollingSpeedParamName;                                    // 0x05A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              RollingSoundComponent;                                    // 0x05A8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class UFakeMoverSettings*                          RollMoveSettings;                                         // 0x05B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	class UFakeMoverSettings*                          StopRollMoveSettings;                                     // 0x05B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData10[0x18];                                      // 0x05C0(0x0018) MISSED OFFSET
	bool                                               RotateTowardsTarget;                                      // 0x05D8(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData11[0x3];                                       // 0x05D9(0x0003) MISSED OFFSET
	float                                              SeeTargetSafetyTime;                                      // 0x05DC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x05E0(0x0004) MISSED OFFSET
	bool                                               WantsToStandUp;                                           // 0x05E4(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData13[0xB];                                       // 0x05E5(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.WoodLouse");
		return ptr;
	}


	void StopSpecial();
	void StartSpecial();
	void SetWantsToStandUp(bool aWantsToStandUp);
	void SetState(EWoodLouseState aState);
	void SetRotateToTarget(bool aRotateToTarget);
	void SeePawn(class APawn* aSenPawn);
	void PlayBumpNoise();
	void OnRep_State();
	EWoodLouseState GetRollerState();
};


// Class FSD.WoodLouseAnimInstance
// 0x0020 (0x0510 - 0x04F0)
class UWoodLouseAnimInstance : public USpiderAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x04F0(0x0004) MISSED OFFSET
	struct FVector2D                                   AngleToTarget;                                            // 0x04F4(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              InterpSpeed;                                              // 0x04FC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              BreakRollingWhenTimeLeft;                                 // 0x0500(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	EWoodLouseState                                    RollerState;                                              // 0x0504(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsWalking;                                                // 0x0505(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsUpRight;                                                // 0x0506(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsDoingSpecialAttack;                                     // 0x0507(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsUnFolded;                                               // 0x0508(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	bool                                               IsGroundValid;                                            // 0x0509(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x050A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.WoodLouseAnimInstance");
		return ptr;
	}

};


// Class FSD.YesNoPromptWidget
// 0x0018 (0x0228 - 0x0210)
class UYesNoPromptWidget : public UWindowWidget
{
public:
	bool                                               bDestroyOnClick;                                          // 0x0210(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0211(0x0007) MISSED OFFSET
	struct FScriptDelegate                             OnClickedCallback;                                        // 0x0218(0x0014) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.YesNoPromptWidget");
		return ptr;
	}


	void Show(const struct FText& Title, const struct FText& Message, const struct FScriptDelegate& OnYesNoClicked);
	void OnYesNoClickedDelegate__DelegateSignature(bool Yes);
	void OnShow(const struct FText& Title, const struct FText& Message);
	void OnClicked(bool Yes);
	void Clicked(bool Yes);
};


// Class FSD.YesNoPromptAction
// 0x0038 (0x0068 - 0x0030)
class UYesNoPromptAction : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    Yes;                                                      // 0x0030(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptMulticastDelegate                    No;                                                       // 0x0040(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable)
	struct FScriptDelegate                             YesNoDelegate;                                            // 0x0050(0x0014) (CPF_ZeroConstructor, CPF_InstancedReference)
	TWeakObjectPtr<class UYesNoPromptWidget>           ActivePrompt;                                             // 0x0060(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.YesNoPromptAction");
		return ptr;
	}


	void YesNoOutputPin__DelegateSignature();
	static class UYesNoPromptAction* PromptYesNo(class UObject* WorldContext, const struct FYesNoPromptSettings& Prompt);
	void PromptCallback(bool YesClicked);
};


// Class FSD.ZapperItem
// 0x0020 (0x0468 - 0x0448)
class AZapperItem : public AAnimatedItem
{
public:
	class UCapacityHoldingItemAggregator*              Capacity;                                                 // 0x0448(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UItemPlacerAggregator*                       ItemPlacer;                                               // 0x0450(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	class UClass*                                      ZapperClass;                                              // 0x0458(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Cooldown;                                                 // 0x0460(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CooldownRemaining;                                        // 0x0464(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ZapperItem");
		return ptr;
	}


	void Server_PlaceZapper(const struct FVector& Location);
};


// Class FSD.Zapper
// 0x0080 (0x03A8 - 0x0328)
class AZapper : public AActor
{
public:
	class USphereComponent*                            AttackArea;                                               // 0x0328(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	struct FGameplayTagContainer                       AllowedTags;                                              // 0x0330(0x0020) (CPF_Edit)
	class UParticleSystem*                             ZapParticles;                                             // 0x0350(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              Damage;                                                   // 0x0358(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x035C(0x0004) MISSED OFFSET
	class UDamageClass*                                DamageClass;                                              // 0x0360(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	int                                                Charges;                                                  // 0x0368(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ChargeTime;                                               // 0x036C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              CoolDownTime;                                             // 0x0370(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              ChargeProgress;                                           // 0x0374(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	float                                              CooldownRemaining;                                        // 0x0378(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x037C(0x0004) MISSED OFFSET
	class ULightComponent*                             ZappingLight;                                             // 0x0380(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	class USceneComponent*                             ZappingPoint;                                             // 0x0388(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData)
	TArray<struct FZapperTarget>                       Targets;                                                  // 0x0390(0x0010) (CPF_ZeroConstructor, CPF_Transient)
	unsigned char                                      UnknownData02[0x8];                                       // 0x03A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.Zapper");
		return ptr;
	}


	class USceneComponent* GetZappingPoint();
	class ULightComponent* GetZappingLight();
};


// Class FSD.ZipLineProjectile
// 0x0058 (0x0380 - 0x0328)
class AZipLineProjectile : public AActor
{
public:
	class UTimelineComponent*                          Timeline;                                                 // 0x0328(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData)
	float                                              LightIntensity;                                           // 0x0330(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaterialGlow;                                             // 0x0334(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	struct FScriptDelegate                             Callback;                                                 // 0x0338(0x0014) (CPF_ZeroConstructor, CPF_InstancedReference)
	class UCurveFloat*                                 LightCurve;                                               // 0x0348(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	TArray<class UPointLightComponent*>                PointLights;                                              // 0x0350(0x0010) (CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient)
	TArray<class UMaterialInstanceDynamic*>            MaterialInstances;                                        // 0x0360(0x0010) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient)
	class UClass*                                      OnUseStatusEffect;                                        // 0x0370(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      OnReleaseStatusEffect;                                    // 0x0378(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ZipLineProjectile");
		return ptr;
	}


	void OnTimelineTick(float NewValue);
	void OnShoot(const struct FVector& Origin, const struct FVector& EndLocation);
};


// Class FSD.ZiplineLauncherComponent
// 0x0010 (0x0140 - 0x0130)
class UZiplineLauncherComponent : public UWeaponFireComponent
{
public:
	TEnumAsByte<ECollisionChannel>                     HitCollisionChannel;                                      // 0x0130(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              ProjectileLocationOffset;                                 // 0x0134(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UClass*                                      projectileClass;                                          // 0x0138(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ZiplineLauncherComponent");
		return ptr;
	}


	void Server_Fire(const struct FVector_NetQuantize& Origin, const struct FVector_NetQuantize& Destination);
	void All_ShowHit();
};


// Class FSD.ZipLineItem
// 0x0010 (0x0698 - 0x0688)
class AZipLineItem : public AAmmoDrivenWeapon
{
public:
	float                                              MaxDistance;                                              // 0x0688(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinDistance;                                              // 0x068C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinAngle;                                                 // 0x0690(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxAngle;                                                 // 0x0694(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ZipLineItem");
		return ptr;
	}


	bool CanFireWeapon(struct FText* FailMsg, class UDialogDataAsset** FailShout);
};


// Class FSD.AngleIndicatorWidget
// 0x0010 (0x0238 - 0x0228)
class UAngleIndicatorWidget : public UFSDUserWidget
{
public:
	float                                              pixelsPerAngle;                                           // 0x0228(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              AlphaFade;                                                // 0x022C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MinAngle;                                                 // 0x0230(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              MaxAngle;                                                 // 0x0234(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.AngleIndicatorWidget");
		return ptr;
	}

};


// Class FSD.ZipLineStateComponent
// 0x00B8 (0x01E0 - 0x0128)
class UZipLineStateComponent : public UCharacterStateComponent
{
public:
	float                                              VerticalOffset;                                           // 0x0128(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              HorizontalOffset;                                         // 0x012C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              TravelSpeed;                                              // 0x0130(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              JumpForce;                                                // 0x0134(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundBase*                                  AudioOnStart;                                             // 0x0138(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundBase*                                  AudioOnDuring;                                            // 0x0140(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundBase*                                  AudioOnChangingDirection;                                 // 0x0148(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class USoundBase*                                  AudioOnStop;                                              // 0x0150(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UDialogDataAsset*                            ShoutStartUsing;                                          // 0x0158(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	unsigned char                                      UnknownData00[0x5C];                                      // 0x0160(0x005C) MISSED OFFSET
	float                                              DamageBeforeFalling;                                      // 0x01BC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              friendlyFireModifier;                                     // 0x01C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	float                                              DamageResetTime;                                          // 0x01C4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData)
	class UAudioComponent*                             AudioComponent;                                           // 0x01C8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x01D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class FSD.ZipLineStateComponent");
		return ptr;
	}


	void ServerJumpPressed();
	void ServerForwardInputChanged(float Input);
	void ServerChangeDirection();
	void OnPlayerHit(float Damage, class UDamageClass* DamageClass, class AActor* DamageCauser, bool anyHealthLost);
	struct FVector GetJumpVector(const struct FVector& LookVector, const struct FVector& CurrentVelocity);
};


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
